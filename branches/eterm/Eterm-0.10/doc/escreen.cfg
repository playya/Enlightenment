<Eterm-0.9.1>

  # key-bindings for Escreen.
  # for those who don't like the traditional ones (as used by the "screen"
  # program).  you may use the control variety, the alt variety, or both.
  # you can copy the statements you like into the "action" context of your
  # Eterm theme, or you could include this file via %include "escreen.cfg"
  # See "man Eterm" for more information.
  # 2002/05/19  Azundris  <scream@azundris.com>

  # CONTROL VARIETY ############################################################

  # ctrl-left -> previous display, ctrl-right -> next display
  bind ctrl Left to script es_display(prvs)
  bind ctrl Right to script es_display(next)

  # ctl-pg_up -> previous display, ctl-pg_dn -> next display((Galeon-like)
  bind ctrl Prior to script es_display(prvs)
  bind ctrl Next to script es_display(next)

  # no ctrl-up/down; we shouldn't steal that from the app.

  # ctl-space -> toggle between last two displays
  bind ctrl space to script es_display(toggle)

  # ctrl-1..ctrl-0 -> display0..display9
  bind ctrl 0x31 to script es_display(goto,0)
  bind ctrl 0x32 to script es_display(goto,1)
  bind ctrl 0x33 to script es_display(goto,2)
  bind ctrl 0x34 to script es_display(goto,3)
  bind ctrl 0x35 to script es_display(goto,4)
  bind ctrl 0x36 to script es_display(goto,5)
  bind ctrl 0x37 to script es_display(goto,6)
  bind ctrl 0x38 to script es_display(goto,7)
  bind ctrl 0x39 to script es_display(goto,8)
  bind ctrl 0x30 to script es_display(goto,9)

  # ALT VARIETY ################################################################

  # alt-left -> previous display, alt-right -> next display
  bind alt Left to script es_display(prvs)
  bind alt Right to script es_display(next)

  # alt-up -> previous region, alt-down -> next region (^A\t)
  bind alt Up to script es_region(prvs)
  bind alt Down to script es_region(next)

  # alt-pg_up -> previous display, alt-pg_dn -> next display
  bind alt Prior to script es_display(prvs)
  bind alt Next to script es_ display(next)

  # alt-space -> toggle between last two displays
  bind alt  space to script es_display(toggle

  # alt-1..alt-0 -> display(0..display(9
  bind alt 0x31 to script es_display(goto,0)
  bind alt 0x32 to script es_display(goto,1)
  bind alt 0x33 to script es_display(goto,2)
  bind alt 0x34 to script es_display(goto,3)
  bind alt 0x35 to script es_display(goto,4)
  bind alt 0x36 to script es_display(goto,5)
  bind alt 0x37 to script es_display(goto,6)
  bind alt 0x38 to script es_display(goto,7)
  bind alt 0x39 to script es_display(goto,8)
  bind alt 0x30 to script es_display(goto,9)

  # FUNCTION KEYS ##############################################################

  # F1..F10 -> display0..display9
  bind F1 to script es_display(goto,0)
  bind F2 to script es_display(goto,1)
  bind F3 to script es_display(goto,2)
  bind F4 to script es_display(goto,3)
  bind F5 to script es_display(goto,4)
  bind F6 to script es_display(goto,5)
  bind F7 to script es_display(goto,6)
  bind F8 to script es_display(goto,7)
  bind F9 to script es_display(goto,8)
  bind F10 to script es_display(goto,9)

  # alt F4 -> close display (ask for confirmation)
  bind alt F4 to script es_display(kill,ask)

  # MISC STUFF #################################################################

  # DISPLAY

  # alt-n -> new display
  bind alt n to script es_display(new)

  # alt-r -> rename display
  bind alt r to script es_display(title)

  # alt-c -> close display
  bind alt c to script es_display(kill,ask)

  # alt-m -> monitor display
  bind alt m to script es_display(monitor)

  # alt-b -> backlog (^A^[)
  bind alt b to script es_display(back)


  # REGION

  # alt-s -> split (^AS)
  bind alt s to script es_region(new)

  # alt-u -> unsplit (^AQ)
  bind alt u to script es_region(full)

  # alt-o -> other region (^A^I)
  bind alt o to script es_region(next)

  # alt-k -> kill region (^AX)
  bind alt k to script es_region(kill,ask)

  # ^Tab -> next region (^A^I)
  bind ctrl Tab to script es_region(next)



  # OTHER

  # alt-S -> statement (^A:)
  bind alt shift S to script es_statement

  # alt-R -> reset (^AZ)
  bind alt shift R to script es_reset



  # ENDS #######################################################################
