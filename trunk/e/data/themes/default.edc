// TODO:
// Add group{} locations to all sections. eg. "widget/preview" is found in Wallpaper selector"
//	Icons:
//		EFM - All popup icons ... eg, paste copy delete properties
//		Icons for Menus modules
//		Icon for Edge Bindings
//		Icon for Modes?
//

/*
 * So how do themes work?
 *
 * Themes DECLARE objects (groups of parts) inside a 'collections' section.
 * Each of these groups are an element of a theme - much like an image in a
 * web page with <img src=blah.jpg>, but MUCH more powerful. They can scale
 * without just being stretched or tiled, they can react to all sorts of events
 * from the user (mouse for example) or other logical events (like being shown
 * or hidden, etc.) or synthetic signals from enlightenment itself indicating
 * some new state.
 *
 * Each group is split into a parts section that contains all the elements
 * that make up that group, and how they are laid out. Each part can have
 * multiple states - described in description sections. There must always be
 * at least a default description of value 0.0. After this there may possibly
 * be a programs section. This defines behavior and how the group will react
 * to events/signals.
 *
 * A theme is simply made up of a LOT of these. If a group is not provided in
 * the theme you are using, it will fall back to the default theme to get the
 * element. It is assumed the default theme is 100% complete and provides
 * everything E needs. If this is not the case, there will be problems, so
 * replace the default theme with great care. As long as the theme you make is
 * just a normal "overlay" (and falls back to the default where things are
 * missing) Things will be fairly safe. If you want to make a full default
 * replacement you will need to methodically go through all of this file
 * and make sure you have replaced/provided everything here.
 */

/* Specturm used in all the gradient icons
 * This needs to be defined outside of the collections
 *
 * FIXME: this is bad. namespacing! FIXME!
 */
spectra {
   spectrum { name: "black_to_trans";
      color: 0 0 0 255 1;
      color: 0 0 0 0 1;
   }
}

/*
 * this section defined all the theme elements (a collection of groupings of
 * parts (images, text, rects etc.))
 */
collections { /* begin the collection of edje groups that are in this file */

/////////////////////////////////////////////////////////////////////////////
   /*** DEFAULT WALLPAPER ***/
   group { name: "e/desktop/background"; /* the name of the group */
      /* this section defines that images are to be included and how to
       * encode them */
      images {
	 image: "vgrad_dark.png" COMP; /* the encoding method is "COMP". this
					* is lossless, but compressed */
	 image: "grill_dark_tiny_pattern.png" COMP;
//	 image: "circle_shade.png" COMP;
      }
      /* this section actually contains the list of parts from bottom to top
       * (defining the layering/stacking order) */
      parts {
	 part { name: "background_image"; /* this is the base background */
	    description { state: "default" 0.0; /* its default state */
	       /* note a part has 1 or more states described here. Each state
		* has a name AND a value. If the value is not useful then set
		* it to 0.0. The names do not need to be unique within a part
		* but the name + value combination needs to be unique. At some
		* points edje is able to select a state given a value other
		* other than 0.0 - in that case Edje will find the state with
		* the same name but closest value to the one being asked for.
		* This allows you to create many states that act as a
		* meticulously defined series of states from 0.0 to 1.0
		* (example - a "fuel guage") where the theme may provide as many
		* or few as the designer wants, and edje will just chose the
		* closest match to what it wants. In almost all cases you will
		* not use this feature, but this explains the "0.0" you see
		* everywhere */
	       /* nb - i am using a shortcut notation. you can use this
		* parent.child: blah; in a key to avoid doing
		* parent { child: blah; }
		*/
	       image.normal: "vgrad_dark.png";  /* use the vgrad_dark.png im */
	       fill { /* now specify how the image is to fill the part */
		  smooth: 0; /* set smooth swcaling off */
		  size {
		     relative: 0 1.0; /* X and Y point relative to the part
				       * as a whole for the size (dont scale
				       * in X but scale 100% in Y */
		     offset: 36 0; /* offsets from the relative scale point
				    * so here offset is 36 to the right in
				    * X and at the Y relative point. this
				    * means tile horizontally, but scale
				    * vertically */
		  }
	       }
	    }
	 }
	 part { name: "grill"; /* this is the overlay to look like a grill */
	    description { state: "default" 0.0;
	       image.normal: "grill_dark_tiny_pattern.png"; /* use the grill */
	       fill { /* set the fill to only tile - never scale at all */
		  size {
		     relative: 0 0; /* relative 0 0 so it never scales */
		     offset: 144 144; /* we know the grill image is 144x144
				       * so set the offset to this so it
				       * tiles perfectly */
		  }
	       }
	    }
	 }
/*	 part { name: "shade";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image.normal: "circle_shade.png";
               fill.smooth: 0;
	    }
	 } */
      }
   }

   group { name: "e/desktop/background/scrollframe";
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
         }
         part { name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  0.0;
                  offset:   -1   -1;
               }
            }
         }
      }
   }

   group { name: "e/desktop/background/scrollframe";
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
         }
         part { name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  0.0;
                  offset:   -1   -1;
               }
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** DEFAULT WINDOW BORDER ***/
   group { name: "e/widgets/border/default/border";
      /* more images - for the border specifically. remember each images {}
       * section fills a global images namespace, so if you re-use an image
       * between sections, only 1 copy is kept, so names here are unique. if
       * different image {} sections specify the same image but use different
       * compression specifications, the compression scheme is undefined and
       * may use any one of the schemes requested, so make sure you use the
       * same compression scheme */
      images {
	 image: "bd_top.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_bottom.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
	 image: "bd_resize_b.png" COMP;
	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "exclam.png" COMP;
	 image: "bd_button_close_shadow.png" COMP;
	 image: "bd_button_close_focused.png" COMP;
	 image: "bd_button_close_unfocused.png" COMP;
	 image: "bd_button_max_shadow.png" COMP;
	 image: "bd_button_max_focused.png" COMP;
	 image: "bd_button_max_unfocused.png" COMP;
	 image: "bd_button_min_shadow.png" COMP;
	 image: "bd_button_min_focused.png" COMP;
	 image: "bd_button_min_unfocused.png" COMP;
      }
      /* this would tell E that the border is not a solid rectanle, but is
       * shaped (has transparent sections) and so would follow a different
       * code path for such borders. the default is not shaped, so this is
       * not enabled here, but left commented out for illustration purposes */
//      data.item: "shaped" "1";
      parts {
	 part { name: "top";
	    mouse_events: 0; /* accept no mouse events here */
	    description { state: "default" 0.0;
	       rel1 { /* this defines the top-left (rel1) point of the part
		       * and where it is placed. the below values are
		       * actually the default values, so there is no need
		       * to actually declare them. */
		  relative: 0.0 0.0; /* make this point relative to the top
				      * left of the whole eje object (there
				      * is no to: section so it's the whole
				      * object). note that the point is
				      * calculated as:
				      *   p.x = obj.width * relative.x
				      *   p.y = obj.height * relative.y
				      * (as the to item is the whole object)
				      */
		  offset: 0 0; /* and from the relative point, have an offset
				* of 0 pixels - i.e. - none */
	       }
	       rel2 {
		  relative: 1.0 1.0; /* the bottom-right is relative to the
				      * base of the title - this way the
				      * title region will scale based on font
				      * size */
		  offset: -1 -1; /* relative to the bottom right */
		  to_y: "title_base"; /* only y is relative to title_base. the
				       * rest is relative to the whole object
				       * (because its not specified) */
	       }
               color_class: "border_top";
	       image { /* define the image to use */
		  normal: "bd_top.png"; /* the image */
		  border: 2 2 2 2; /* border scaling attributes. this is the
				    * number of pixels NOT to scale on the
				    * left, right, top and bottom edges of the
				    * image. this allows "bevelled" effects
				    * or anything similar to look correct and
				    * not scale/blur etc. along with the image
				    * when it needs resizing */
	       }
	    }
	 }
	 part { name: "bottom"; /* this is the bottom of the window */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0; /* relative to the bottom-left of the edje
				      * but 4 pixels up */
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
               color_class: "border_bottom";
	       image {
		  normal: "bd_bottom.png";
		  border: 2 2 0 0; /* the left and right pixels are not to
				    * be scaled when stretching */
	       }
	    }
	    description { state: "shaded" 0.0; /* when in a shaded state then
						* don't display this part */
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "max" 0.0; /* whem maximised too */
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "icon_area"; /* this is an invisible rectangle that we
				    * use to place icons within. we use this
				    * to keep it fixed as the "icone area" so
				    * the actual swallow part that swallows
				    * the icon can be moved/resized for
				    * animations */
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 0.5; /* alignt to the left, but center vertically */
	       aspect: 1.0 1.0; /* prefer ans aspect of 1.0 (ie width / height
				 * is 1.0 - i.e. - square. aspect here is
				 * min and max aspect that will be "allowed"
				 * (since both min and max are 1.0 respectively
				 * in order). */
	       aspect_preference: VERTICAL; /* this means that the vertical
					     * axis controls aspect and the
					     * icon_area part size will be
					     * governed by the height of the
					     * part (the width simply following
					     * along behind) */
	       rel1 { /* rel1 - top-left corner of this part */
		  relative: 0.0 0.0;
		  offset: 2 2; /* 2 pixels in from the top-left of the border
				* corner */
	       }
	       rel2 {
		  relative: 0.0 1.0; /* bottom-right of this part is also 2
				      * pixels in from the left (but align will
				      * mean it goes to the right) and be 2
				      * pixels in from the bottom edge of
				      * "title_base" (remember rel2 is the
				      * pixel immediately OUTSIDE the part.
				      * i.e. x + width & y + height). */
		  offset: 2 -3;
		  to_y: "title_base";
	       }
	    }
	    description { state: "active" 0.0; /* and an active state */
	       inherit: "default" 0.0;
	       rel1 {
		  offset: 2 3; /* 1 pixel down from default so it looks like it
				* is pressed down a bit */
	       }
	       rel2 {
		  offset: 2 -2; /* same here - down 1 pixel from "default" */
	       }
	    }
	 }
	 part { name: "icon_area2"; /* this area is another invisible rect
				     * that is used for shuffling around parts
				     * that are relative to it. the states
				     * below are just a few "random" offsets
				     * to make it look like whatever is
				     * relative to icon_area2 is "jiggling"
				     * around */
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	    }
	    description { state: "uw0" 0.0; /* jiggle */
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0; /* jiggle some more */
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0; /* look at me - jiggling! */
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0; /* jiggling about */
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0; /* one more jiggle for the dummies */
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
         part {
	    name: "busy"; /* this is an animation to spin a wheel when the app
			   * seems too busy to respond to pings */
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0; /* nomrally the busy part is not visible */
	       color: 255 255 255 0; /* and its alpha is 0 - se will fade it
				      * inm later so alpha to 0 (but 255 255
				      * 255 for white so we dont also go from
				      * dark to white while fading) */
	       max: 32 32; /* no bigger than 32x32 - but allow it to be
			    * smaller if needed */
	       aspect: 1.0 1.0; /* square aspect */
	       aspect_preference: BOTH; /* both axes determine aspect. that
					 * means that the icon area may
					 * be 100x50, but the aspect is 1.0
					 * so therefore it will be 50x50 as the
					 * max size. if the area is 50x100 it
					 * will still be 50x50 as it must fit
					 * WITHIN the bounds of BOTH axes */
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image {
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
		  normal: "busy-9.png"; /* and we use image tweening. that
					 * means that we flip through a series
					 * of images when moving TO this state
					 * over the transition time. it's like
					 * specifiying multiple frames of an
					 * animatin sequence. the "final"
					 * state is "normal". the images
					 * inbetween are the "tween" images
					 * listed in order working towards
					 * the "normal" image */
	       }
	    }
	    description {
	       state: "visible" 0.0; /* the visible state - inherit the
				      * default one as its all the same, but
				      * its visible and faded in */
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon"; /* finally a swallow part - this is
					 * just a placeholder to SWALLOW
					 * other external evas objects into
					 * this region and edje will control
					 * any object swallowed as if it were
					 * this part itself (move, resize,
					 * etc.) */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area2";
	       rel2.to: "icon_area2";
	    }
	    description { state: "shrunk" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.3 0.3;
	       rel2.relative: 0.7 0.7;
	    }
	 }
         part {
	    name: "urgent"; /* this is the urgnt part it is normally not
			     * visible, but when the window is in an
			     * urgent state (the app has set the urgency
			     * hint) then we go to the visible state */
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0; /* and in the visible state put the
				      * exlamation image on top of the icon */
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2"; /* this is another urgent element. it is actually
			      * zoomed out to be larger and faded out at the
			      * same time to give a "pulsating" look to the
			      * exclamation mark to bring attention to it */
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.title"; /* this is a text part - the black
				       * text on the white title top image */
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1; /* allow this part to scale by a scale factor (dpi) */
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.0 0.0; /* align top and left */
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 9 2;
		  to_x: "icon_area"; /* relative to the right side of the icon
				      * area but 9 pixels away */
	       }
	       rel2 {
		  relative: 1.0 0.0; /* and the bottom right is inset by 8
				      * pixels from the right of "title_base"
				      * but as its aligned to the top we can
				      * keep this at 2 pixels from the top of
				      * the whole edje object and let alignment
				      * make it extend downward from that point
				      * with the text size defining the min size
				      * vertically below */
		  offset: -8 2;
		  to_x: "title_base";
	       }
	       color: 0 0 0 255; /* black */
	       color_class: "border_title"; /* give it a color class so people
					     * can re-color it if they want */
	       text {
		  font: "Sans:style=Bold"; /* Use the Bold style
					    * of the Sans font from
					    * fontconfig */
		  size: 10; /* size in pixels - 10 */
		  min: 0 1; /* the text will not determine minimum horizontal
			     * size but WILL determine minimal vertical size
			     * (thus 0 1 - horiz then vert flags) */
		  align: 0.0 0.0; /* align text to top-left of the region
				   * given */
		  text_class: "title_bar"; /* text class - so font and size
					    * can be changed by users */
	       }
	    }
	    description { state: "focused" 0.0; /* when the border is focused
						 * then make the text fade out
						 * and vanish */
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "bt_close"; /* the close button shadow */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22; /* min and max size are the same, so never
			    * resize this */
	       max: 22 22;
	       aspect: 1.0 1.0; /* square - always */
	       aspect_preference: VERTICAL; /* the vetical axis controls size
					     * when applying the aspect ratio
					     * hint above */
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -2 1;
		  to_x: "top";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -2 -2;
		  to_x: "top";
		  to_y: "top";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }
	 part { name: "bt_max"; /* maximize button shadow */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_close"; /* left of the close button */
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_close"; /* left of the close button */
		  to_y: "top";
	       }
	       image.normal: "bd_button_max_shadow.png";
	    }
	 }
	 part { name: "bt_min"; /* minimize button shadow */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_max"; /* left of the maximize button */
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_max"; /* left of the maximize button */
		  to_y: "top";
	       }
	       image.normal: "bd_button_min_shadow.png";
	    }
	 }

	 part { name: "top_hilight"; /* an overlayed image to give the top of
				      * a border a shiny look - very subtle */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "top";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 0;
		  to: "top";
	       }
               color_class: "border_top_hilight";
	       image {
		  normal: "bd_top_hilight.png";
	       }
               fill.smooth: 0;
	    }
	 }

	 part { name: "buttons_unfoc"; /* this is a rect part used to clip &
					* thus control the visibility of a group
					* of other parts (the images for the
					* buttons themselves) with just 1 part
					* doing the control as it acts as a
					* master switch for all things clipped
					* to this part */
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255; /* visible and solid */
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0; /* invisible and transparent */
	    }
	 }
	 part { name: "bt_close_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc"; /* clipping (thus visible region and
				       * color + alpah is controlled by the
				       * clip object */
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "buttons_foc"; /* another rect object for clipping */
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "bt_close_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc"; /* controlled by the other clip object */
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "title_base"; /* an invisible rect part/object used for
				     * layout purposes */
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 0;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -3 4;
		  to_y: "e.text.title";
		  to_x: "bt_min";
	       }
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "title_base";
	       }
	       rel2 {
		  to: "title_base";
		  relative: 1.0 0.0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel2 {
		  to: "title_base";
		  relative: 1.0 1.0;
	       }
	    }
	 }

	 part { name: "title2"; /* this is interesting. it's another text part
				 * that also displays the title text, but
				 * normally is not visible. it is only made
				 * visibile when the window becomes focused.
				 * what is interesting is we tell it to source
				 * the text content from another part - i.e.
				 * the master "title" part which E sets the
				 * text of. when that changes this part also
				 * changes its text. this is a good way to
				 * use multiple text objects for effects and
				 * other things that can copy/mimic the content
				 * of another part */
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW; /* different style to before - because its
				  * focused */
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 1.0;
	       rel1 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 0.0 1.0;
		  offset: -1 0;
	       }
	       rel2 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "border_title";
	       text {
		  text_source: "e.text.title"; /* and here is the magic. tell
						* the text to be sourced from
						* another part */
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.0 0.0;
		  min: 0 1;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "bottom_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bottom";
	       rel2.to: "bottom";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "resize_b";
	    mouse_events:  0;
	    clip_to: "bottom_clip";
	    description { state: "default" 0.0;
	       min: 20 10;
	       max: 20 10;
	       rel1 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -10;
	       }
	       rel2 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -1;
	       }
	       image {
		  normal: "bd_resize_b.png";
	       }
	    }
	    description { state: "past" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.5 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.5 1.0;
		  offset: 0 9;
	       }
	    }
	 }


	 part { name: "e.swallow.client"; /* this determines where the actual
					   * client window will be placed in
					   * the border design */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	 }

	 /* these transparent rect parts are used for catching events in a way
	  * here objects for design don't affect the events. these parts
	  * are named speciifcally because E has config listening for specific
	  * signals (events) coming from these named parts and based on those
	  * will perform certain actions. these are actually all configurable
	  * by the user, so if they want, clicking the logical "titlebar" could
	  * close the window, not move it, and so on. the user decides this.
	  * the theme designer simply indicates the "logcal" use of the theme
	  * elements they have created */
	 part { name: "e.event.titlebar";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "title_base";
	       rel2.to: "title_base";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.resize.t";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 3;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.b";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.resize.tl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.0 0.0;
		  offset: 15 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.tr";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -16 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.bl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -16;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 15 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.br";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 1.0;
		  offset: -16 -16;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.icon";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.close";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.minimize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.maximize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       color: 0 0 0 0;
	    }
	 }
      }
      /* programs - these are basically snippets of simple logic to respond to
       * incoming signals (generated by signal emisions by code or events) */
      programs {
	 program { name: "focus_in"; /* name of the program. must be unique
				      * within the list of programs attached
				      * to a group of parts */
	    signal: "e,state,focused"; /* what signal triggers this program,
					* if any. this can also be a glob like
					* "mouse,down,*" for example. note
					* that globs are slower to match
					* and empty strings are literal matches
					* too */
	    source: "e"; /* the source of the signal - this must also match for
			  * the program to be run */
	    action: STATE_SET "focused" 0.0; /* the action the program will
					      * perform. in this case
					      * it will set the state to
					      * "focused" @ value 0.0 */
	    transition: LINEAR 0.2; /* the time for the transition of the
				     * action - it's a linear interpolation
				     * of states here over 0.2 seconds */
	    target: "title_back"; /* these are the targets for the action.
				   * i.e. which parts will have their state
				   * set to "focused" over 0.2 seconds */
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }
	 program { name: "focus_out"; /* this program is run when focus is
				       * removed from a window border */
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }

	 program { name: "urgent"; /* this program is run when the border is
				    * meant to display an "urgent" state
				    * (the application has something
				    * important to show the user) */
	    signal: "e,state,urgent";
	    source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5; /* instead of a linear transition
					 * this will vary from state A to B
					 * but slow down towards the end */
	    target: "urgent";
	    target: "urgent2";
	    after: "urgent2"; /* when this program and its transition are
			       * finished then chain (run) the "urgent2"
			       * program below. this way a series of actions
			       * and trnasitions can be chained together one
			       * after the other */
	 }
	 program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: LINEAR 0.5;
	    target: "urgent2";
	    after: "urgent3";
	 }
	 program { name: "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2"; /* notice - no transition. when not specified
				* it is assumed that the action should happen
				* immediately with no transition over time */
	    after: "urgent2";
	 }
	 program { name: "urgentw0"; /* these ae a list of icon "wobble"
				      * programs to indicate urgency */
	    signal: "e,state,urgent";
	    source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw1";
	 }
	 program { name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw2";
	 }
	 program { name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program { name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw4";
	 }
	 program { name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw0";
	 }
	 program { name: "not_urgent"; /* run when the window stops being
					* urgent */
	    signal: "e,state,not_urgent";
	    source: "e";
            action: ACTION_STOP; /* this action will stop other running programs
				  * that are currently active. the programs to
				  * stop are named in the targets below */
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program { name: "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }

	 program { name: "hung"; /* run when an app is known to be hung/not
				  * responding to ping requests */
	    signal: "e,state,hung";
	    source: "e";
            action: STATE_SET "shrunk" 0.0;
	    target: "e.swallow.icon";
            transition: DECELERATE 0.5;
	 }
	 program { name: "unhung"; /* when an app was hung but has started to
				    * respond again, this is run */
	    signal: "e,state,unhung";
	    source: "e";
            action: ACTION_STOP;
	    target: "busy_anim";
	 }
	 program { name: "unhung2";
	    signal: "e,state,unhung";
	    source: "e";
            action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "busy";
            transition: ACCELERATE 0.5;
	 }
         program { name: "busy_anim"; /* multiple programs can be triggered
				       * from the same signals so this is
				       * also run when an app becomes "hung" */
	    signal: "e,state,hung";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after: "busy_anim";
	 }

// don't have states/anim for a generic iconify action
//	 program { name: "xx";
//	    signal: "e,action,iconify";
//	    source: "e";
//	 }
// don't have states/anim for a generic uniconify action
//	 program { name: "xx";
//	    signal: "e,action,uniconify";
//	    source: "e";
//	 }

// don't have states/anim for a generic maximize action
//	 program { name: "xx";
//	    signal: "e,action,maximize";
//	    source: "e";
//	 }
// don't have states/anim for a generic unmaximize action
//	 program { name: "xx";
//	    signal: "e,action,unmaximize";
//	    source: "e";
//	 }

	 program { name: "max_full"; /* run on fullscreen maximize */
	    signal: "e,action,maximize,fullscreen";
	    source: "e";
	    action: STATE_SET "max" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }
	 program { name: "unmax_full"; /* run on unmaximize from fullscreen */
	    signal: "e,action,unmaximize,fullscreen";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }

// don't have any animation or stat change to do at the start of shading
//	 program { name: "xx";
//	    signal: "e,state,shading";
//	    source: "e";
//	 }
	 program { name: "shade_end"; /* run when the window finishes its
				       * shading animation */
	    signal: "e,state,shaded";
	    source: "e";
	    action: STATE_SET "shaded" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
	 program { name: "unshade_start"; /* run when the window starts
					   * unshading itself */
	    signal: "e,state,unshading";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
// don't have any animation or stat change to do at the end of unshading
//	 program { name: "xx";
//	    signal: "e,state,unshaded";
//	    source: "e";
//	 }
	 program { name: "resize_b_on";
	    signal: "mouse,in"; /* on mouse enter... */
	    source: "e.event.resize.b"; /* in this named part */
	    action: ACTION_STOP; /* stop the following programs */
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	    after: "resize_b_on2"; /* then run... */
	 }
	 program { name: "resize_b_on2";
	    action: STATE_SET "default" 0.0;
	    target: "resize_b";
	    after: "resize_b_on3";
	 }
	 program { name: "resize_b_on3";
	    action: STATE_SET "past" 0.0;
	    transition: LINEAR 0.5;
	    target: "resize_b";
	    after: "resize_b_on2";
	 }
	 program { name: "resize_b_off";
	    signal: "mouse,out"; /* on mouse leave... */
	    source: "e.event.resize.b";
	    action: ACTION_STOP;
	    target: "resize_b_on";
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	 }

	 program { name: "icon_down";
	    signal: "mouse,down,*"; /* if any mouse button is pressed... */
	    source: "e.event.icon";
	    action: STATE_SET "active" 0.0;
	    target: "icon_area";
	 }
	 program { name: "icon_up";
	    signal: "mouse,up,*"; /* if any mouse button is released... */
	    source: "e.event.icon";
	    action: STATE_SET "default" 0.0;
	    target: "icon_area";
	 }
	 program { name: "bt_close_down";
	    signal: "mouse,down,*";
	    source: "e.event.close";
	    action: STATE_SET "active" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program { name: "bt_close_up";
	    signal: "mouse,up,*";
	    source: "e.event.close";
	    action: STATE_SET "default" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program { name: "bt_max_down";
	    signal: "mouse,down,*";
	    source: "e.event.maximize";
	    action: STATE_SET "active" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program { name: "bt_max_up";
	    signal: "mouse,up,*";
	    source: "e.event.maximize";
	    action: STATE_SET "default" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program { name: "bt_min_down";
	    signal: "mouse,down,*";
	    source: "e.event.minimize";
	    action: STATE_SET "active" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
	 program { name: "bt_min_up";
	    signal: "mouse,up,*";
	    source: "e.event.minimize";
	    action: STATE_SET "default" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
      }
   }

   /* more border types - see comments in the default border for information */
   /*** SHAPED WINDOW BORDER ***/
   group { name: "e/widgets/border/shaped/border";
      images {
	 image: "bd_top.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_bottom.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
	 image: "bd_resize_b.png" COMP;
	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "exclam.png" COMP;
	 image: "bd_button_close_shadow.png" COMP;
	 image: "bd_button_close_focused.png" COMP;
	 image: "bd_button_close_unfocused.png" COMP;
	 image: "bd_button_max_shadow.png" COMP;
	 image: "bd_button_max_focused.png" COMP;
	 image: "bd_button_max_unfocused.png" COMP;
	 image: "bd_button_min_shadow.png" COMP;
	 image: "bd_button_min_focused.png" COMP;
	 image: "bd_button_min_unfocused.png" COMP;
      }
      data.item: "shaped" "1";
      parts {
	 part { name: "top";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "title_base";
	       }
               color_class: "border_top";
	       image {
		  normal: "bd_top.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "bottom";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
               color_class: "border_bottom";
	       image {
		  normal: "bd_bottom.png";
		  border: 2 2 0 0;
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "icon_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 2 -3;
		  to_y: "title_base";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  offset: 2 3;
	       }
	       rel2 {
		  offset: 2 -2;
	       }
	    }
	 }
	 part { name: "icon_area2";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
         part {
	    name: "busy";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image {
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
		  normal: "busy-9.png";
	       }
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area2";
	       rel2.to: "icon_area2";
	    }
	    description { state: "shrunk" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.3 0.3;
	       rel2.relative: 0.7 0.7;
	    }
	 }
         part {
	    name: "urgent";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 9 2;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -8 2;
		  to_x: "title_base";
	       }
	       color: 0 0 0 255;
	       color_class: "border_title";
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.0;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "bt_close";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -2 1;
		  to_x: "top";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -2 -2;
		  to_x: "top";
		  to_y: "top";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }
	 part { name: "bt_max";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_close";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_close";
		  to_y: "top";
	       }
	       image.normal: "bd_button_max_shadow.png";
	    }
	 }
	 part { name: "bt_min";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_max";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_max";
		  to_y: "top";
	       }
	       image.normal: "bd_button_min_shadow.png";
	    }
	 }

	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "top";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 0;
		  to: "top";
	       }
               color_class: "border_top_hilight";
	       image {
		  normal: "bd_top_hilight.png";
	       }
               fill.smooth: 0;
	    }
	 }

	 part { name: "buttons_unfoc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "bt_close_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "buttons_foc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "bt_close_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "title_base";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 0;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -3 4;
		  to_y: "e.text.title";
		  to_x: "bt_min";
	       }
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "title_base";
	       }
	       rel2 {
		  to: "title_base";
		  relative: 1.0 0.0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel2 {
		  to: "title_base";
		  relative: 1.0 1.0;
	       }
	    }
	 }

	 part { name: "title2";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 1.0;
	       rel1 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 0.0 1.0;
		  offset: -1 0;
	       }
	       rel2 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 1.0 1.0;
		  offset: 0 1;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "border_title";
	       text {
		  text_source: "e.text.title";
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.0 0.0;
		  min: 0 1;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "bottom_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bottom";
	       rel2.to: "bottom";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "resize_b";
	    mouse_events:  0;
	    clip_to: "bottom_clip";
	    description { state: "default" 0.0;
	       min: 20 10;
	       max: 20 10;
	       rel1 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -10;
	       }
	       rel2 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -1;
	       }
	       image {
		  normal: "bd_resize_b.png";
	       }
	    }
	    description { state: "past" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.5 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.5 1.0;
		  offset: 0 9;
	       }
	    }
	 }


	 part { name: "e.swallow.client";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	 }

	 part { name: "e.event.titlebar";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "title_base";
	       rel2.to: "title_base";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.resize.t";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 3;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.b";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.resize.tl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.0 0.0;
		  offset: 15 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.tr";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -16 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.bl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -16;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 15 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.br";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 1.0;
		  offset: -16 -16;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.icon";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.close";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.minimize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.maximize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name: "focus_in";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "focused" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }
	 program {
	    name: "focus_out";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }

	 program {
	    name:    "urgent";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "visible" 0.0;
	    target: "urgent";
	    target: "urgent2";
            transition: DECELERATE 0.5;
	    after: "urgent2";
	 }
	 program {
	    name:    "urgent2";
            action: STATE_SET "faded" 0.0;
	    target: "urgent2";
            transition: LINEAR 0.5;
	    after: "urgent3";
	 }
	 program {
	    name:    "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program {
	    name:    "urgentw0";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "default" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw1";
	 }
	 program {
	    name:    "urgentw1";
            action: STATE_SET "uw1" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw2";
	 }
	 program {
	    name:    "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program {
	    name:    "urgentw3";
            action: STATE_SET "uw3" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw4";
	 }
	 program {
	    name:    "urgentw4";
            action: STATE_SET "uw4" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw0";
	 }
	 program {
	    name:    "not_urgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
            action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program {
	    name:    "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }

	 program {
	    name:    "hung";
	    signal:  "e,state,hung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "shrunk" 0.0;
	    target: "e.swallow.icon";
            transition: DECELERATE 0.5;
	 }
	 program {
	    name:    "unhung";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action:  ACTION_STOP;
	    target: "busy_anim";
	 }
	 program {
	    name:    "unhung2";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "busy";
            transition: ACCELERATE 0.5;
	 }
         program {
	    name: "busy_anim";
	    signal:  "e,state,hung";
	    source:  "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
	 program {
	    name:    "max_full";
	    signal:  "e,action,maximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "max" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }
	 program {
	    name:    "unmax_full";
	    signal:  "e,action,unmaximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }

	 program {
	    name: "shade_end";
	    signal: "e,state,shaded";
	    source: "e";
	    action: STATE_SET "shaded" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
	 program {
	    name:    "unshade_start";
	    signal:  "e,state,unshading";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
	 program {
	    name: "resize_b_on";
	    signal: "mouse,in";
	    source: "e.event.resize.b";
	    action:  ACTION_STOP;
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	    after: "resize_b_on2";
	 }
	 program {
	    name: "resize_b_on2";
	    action: STATE_SET "default" 0.0;
	    target: "resize_b";
	    after: "resize_b_on3";
	 }
	 program {
	    name: "resize_b_on3";
	    action: STATE_SET "past" 0.0;
	    transition: LINEAR 0.5;
	    target: "resize_b";
	    after: "resize_b_on2";
	 }
	 program {
	    name: "resize_b_off";
	    signal: "mouse,out";
	    source: "e.event.resize.b";
	    action:  ACTION_STOP;
	    target: "resize_b_on";
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	 }

	 program {
	    name: "icon_down";
	    signal: "mouse,down,*";
	    source: "e.event.icon";
	    action:  STATE_SET "active" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "icon_up";
	    signal: "mouse,up,*";
	    source: "e.event.icon";
	    action:  STATE_SET "default" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "bt_close_down";
	    signal: "mouse,down,*";
	    source: "e.event.close";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_close_up";
	    signal: "mouse,up,*";
	    source: "e.event.close";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_max_down";
	    signal: "mouse,down,*";
	    source: "e.event.maximize";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program {
	    name: "bt_max_up";
	    signal: "mouse,up,*";
	    source: "e.event.maximize";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program {
	    name: "bt_min_down";
	    signal: "mouse,down,*";
	    source: "e.event.minimize";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
	 program {
	    name: "bt_min_up";
	    signal: "mouse,up,*";
	    source: "e.event.minimize";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
      }
   }

   /*** NORESIZE WINDOW BORDER ***/
   group { name: "e/widgets/border/noresize/border";
      images {
	 image: "bd_top.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "exclam.png" COMP;
	 image: "bd_button_close_shadow.png" COMP;
	 image: "bd_button_close_focused.png" COMP;
	 image: "bd_button_close_unfocused.png" COMP;
	 image: "bd_button_max_shadow.png" COMP;
	 image: "bd_button_max_focused.png" COMP;
	 image: "bd_button_max_unfocused.png" COMP;
	 image: "bd_button_min_shadow.png" COMP;
	 image: "bd_button_min_focused.png" COMP;
	 image: "bd_button_min_unfocused.png" COMP;
      }
      parts {
	 part { name: "top";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "title_base";
	       }
               color_class: "border_top";
	       image {
		  normal: "bd_top.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "icon_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 2 -3;
		  to_y: "title_base";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  offset: 2 3;
	       }
	       rel2 {
		  offset: 2 -2;
	       }
	    }
	 }
	 part { name: "icon_area2";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
         part {
	    name: "busy";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image {
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
		  normal: "busy-9.png";
	       }
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area2";
	       rel2.to: "icon_area2";
	    }
	    description { state: "shrunk" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.3 0.3;
	       rel2.relative: 0.7 0.7;
	    }
	 }
         part {
	    name: "urgent";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 9 2;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -8 2;
		  to_x: "title_base";
	       }
	       color: 0 0 0 255;
	       color_class: "border_title";
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.0;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "bt_close";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -2 1;
		  to_x: "top";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -2 -2;
		  to_x: "top";
		  to_y: "top";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }
	 part { name: "bt_max";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_close";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_close";
		  to_y: "top";
	       }
	       image.normal: "bd_button_max_shadow.png";
	    }
	 }
	 part { name: "bt_min";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 1;
		  to_x: "bt_max";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -2 -2;
		  to_x: "bt_max";
		  to_y: "top";
	       }
	       image.normal: "bd_button_min_shadow.png";
	    }
	 }

	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "top";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 0;
		  to: "top";
	       }
               color_class: "border_top_hilight";
	       image {
		  normal: "bd_top_hilight.png";
	       }
               fill.smooth: 0;
	    }
	 }

	 part { name: "buttons_unfoc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "bt_close_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "buttons_foc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "bt_close_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_max_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       image.normal: "bd_button_max_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_min_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       image.normal: "bd_button_min_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "title_base";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 0;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -3 4;
		  to_y: "e.text.title";
		  to_x: "bt_min";
	       }
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "title_base";
	       }
	       rel2 {
		  to: "title_base";
		  relative: 1.0 0.0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel2 {
		  to: "title_base";
		  relative: 1.0 1.0;
	       }
	    }
	 }

	 part { name: "title2";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 1.0;
	       rel1 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 0.0 1.0;
		  offset: -1 0;
	       }
	       rel2 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 1.0 1.0;
		  offset: 0 1;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "border_title";
	       text {
		  text_source: "e.text.title";
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.0 0.0;
		  min: 0 1;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "e.swallow.client";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	 }

	 part { name: "e.event.titlebar";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "title_base";
	       rel2.to: "title_base";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.icon";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.close";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.minimize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_min";
	       rel2.to: "bt_min";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.event.maximize";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_max";
	       rel2.to: "bt_max";
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name: "focus_in";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "focused" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }
	 program {
	    name: "focus_out";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }

	 program {
	    name:    "urgent";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "visible" 0.0;
	    target: "urgent";
	    target: "urgent2";
            transition: DECELERATE 0.5;
	    after: "urgent2";
	 }
	 program {
	    name:    "urgent2";
            action: STATE_SET "faded" 0.0;
	    target: "urgent2";
            transition: LINEAR 0.5;
	    after: "urgent3";
	 }
	 program {
	    name:    "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program {
	    name:    "urgentw0";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "default" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw1";
	 }
	 program {
	    name:    "urgentw1";
            action: STATE_SET "uw1" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw2";
	 }
	 program {
	    name:    "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program {
	    name:    "urgentw3";
            action: STATE_SET "uw3" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw4";
	 }
	 program {
	    name:    "urgentw4";
            action: STATE_SET "uw4" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw0";
	 }
	 program {
	    name:    "not_urgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
            action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program {
	    name:    "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }

	 program {
	    name:    "hung";
	    signal:  "e,state,hung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "shrunk" 0.0;
	    target: "e.swallow.icon";
            transition: DECELERATE 0.5;
	 }
	 program {
	    name:    "unhung";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action:  ACTION_STOP;
	    target: "busy_anim";
	 }
	 program {
	    name:    "unhung2";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "busy";
            transition: ACCELERATE 0.5;
	 }
         program {
	    name: "busy_anim";
	    signal:  "e,state,hung";
	    source:  "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
	 program {
	    name: "max_full";
	    signal: "e,action,maximize,fullscreen";
	    source: "e";
	    action: STATE_SET "max" 0.0;
	    target: "e.swallow.client";
	 }
	 program {
	    name: "unmax_full";
	    signal: "e,action,unmaximize,fullscreen";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "e.swallow.client";
	 }

	 program {
	    name: "shade_end";
	    signal: "e,state,shaded";
	    source: "e";
	    action: STATE_SET "shaded" 0.0;
	    target: "e.swallow.client";
	 }
	 program {
	    name: "unshade_start";
	    signal: "e,state,unshading";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "e.swallow.client";
	 }

	 program {
	    name: "icon_down";
	    signal: "mouse,down,*";
	    source: "e.event.icon";
	    action:  STATE_SET "active" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "icon_up";
	    signal: "mouse,up,*";
	    source: "e.event.icon";
	    action:  STATE_SET "default" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "bt_close_down";
	    signal: "mouse,down,*";
	    source: "e.event.close";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_close_up";
	    signal: "mouse,up,*";
	    source: "e.event.close";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_max_down";
	    signal: "mouse,down,*";
	    source: "e.event.maximize";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program {
	    name: "bt_max_up";
	    signal: "mouse,up,*";
	    source: "e.event.maximize";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_max_unfoc";
	    target: "bt_max_foc";
	 }
	 program {
	    name: "bt_min_down";
	    signal: "mouse,down,*";
	    source: "e.event.minimize";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
	 program {
	    name: "bt_min_up";
	    signal: "mouse,up,*";
	    source: "e.event.minimize";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_min_unfoc";
	    target: "bt_min_foc";
	 }
      }
   }

   /*** DIALOG WINDOW BORDER ***/
   group { name: "e/widgets/border/dialog/border";
      images {
	 image: "bd_top.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_bottom.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
	 image: "bd_resize_b.png" COMP;
	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "exclam.png" COMP;
	 image: "bd_button_close_shadow.png" COMP;
	 image: "bd_button_close_focused.png" COMP;
	 image: "bd_button_close_unfocused.png" COMP;
      }
      parts {
	 part { name: "top";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "title_base";
	       }
               color_class: "border_top";
	       image {
		  normal: "bd_top.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "bottom";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
               color_class: "border_bottom";
	       image {
		  normal: "bd_bottom.png";
		  border: 2 2 0 0;
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "icon_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 2 -3;
		  to_y: "title_base";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  offset: 2 3;
	       }
	       rel2 {
		  offset: 2 -2;
	       }
	    }
	 }
	 part { name: "icon_area2";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
         part {
	    name: "busy";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image {
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
		  normal: "busy-9.png";
	       }
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area2";
	       rel2.to: "icon_area2";
	    }
	    description { state: "shrunk" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.3 0.3;
	       rel2.relative: 0.7 0.7;
	    }
	 }
         part {
	    name: "urgent";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 9 2;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -8 2;
		  to_x: "title_base";
	       }
	       color: 0 0 0 255;
	       color_class: "border_title";
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.0;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "bt_close";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -2 1;
		  to_x: "top";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -2 -2;
		  to_x: "top";
		  to_y: "top";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }

	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "top";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 0;
		  to: "top";
	       }
               color_class: "border_top_hilight";
	       image {
		  normal: "bd_top_hilight.png";
	       }
               fill.smooth: 0;
	    }
	 }

	 part { name: "buttons_unfoc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "bt_close_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "buttons_foc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "bt_close_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "title_base";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 0;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -3 4;
		  to_y: "e.text.title";
		  to_x: "bt_close";
	       }
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "title_base";
	       }
	       rel2 {
		  to: "title_base";
		  relative: 1.0 0.0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel2 {
		  to: "title_base";
		  relative: 1.0 1.0;
	       }
	    }
	 }

	 part { name: "title2";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 1.0;
	       rel1 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 0.0 1.0;
		  offset: -1 0;
	       }
	       rel2 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 1.0 1.0;
		  offset: 0 1;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "border_title";
	       text {
		  text_source: "e.text.title";
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.0 0.0;
		  min: 0 1;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "bottom_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bottom";
	       rel2.to: "bottom";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "resize_b";
	    mouse_events:  0;
	    clip_to: "bottom_clip";
	    description { state: "default" 0.0;
	       min: 20 10;
	       max: 20 10;
	       rel1 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -10;
	       }
	       rel2 {
		  to: "bottom";
		  relative: 0.5 0.0;
		  offset: 0 -1;
	       }
	       image {
		  normal: "bd_resize_b.png";
	       }
	    }
	    description { state: "past" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.5 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.5 1.0;
		  offset: 0 9;
	       }
	    }
	 }


	 part { name: "e.swallow.client";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "bottom";
	       }
	    }
	 }

	 part { name: "e.event.titlebar";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "title_base";
	       rel2.to: "title_base";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.resize.t";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 3;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.b";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.resize.tl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.0 0.0;
		  offset: 15 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.tr";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -16 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 15;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.bl";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 -16;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 15 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "e.event.resize.br";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 1.0;
		  offset: -16 -16;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 0;
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }

	 part { name: "e.event.icon";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.close";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name: "focus_in";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "focused" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }
	 program {
	    name: "focus_out";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }

	 program {
	    name:    "urgent";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "visible" 0.0;
	    target: "urgent";
	    target: "urgent2";
            transition: DECELERATE 0.5;
	    after: "urgent2";
	 }
	 program {
	    name:    "urgent2";
            action: STATE_SET "faded" 0.0;
	    target: "urgent2";
            transition: LINEAR 0.5;
	    after: "urgent3";
	 }
	 program {
	    name:    "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program {
	    name:    "urgentw0";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "default" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw1";
	 }
	 program {
	    name:    "urgentw1";
            action: STATE_SET "uw1" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw2";
	 }
	 program {
	    name:    "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program {
	    name:    "urgentw3";
            action: STATE_SET "uw3" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw4";
	 }
	 program {
	    name:    "urgentw4";
            action: STATE_SET "uw4" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw0";
	 }
	 program {
	    name:    "not_urgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
            action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program {
	    name:    "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }

	 program {
	    name:    "hung";
	    signal:  "e,state,hung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "shrunk" 0.0;
	    target: "e.swallow.icon";
            transition: DECELERATE 0.5;
	 }
	 program {
	    name:    "unhung";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action:  ACTION_STOP;
	    target: "busy_anim";
	 }
	 program {
	    name:    "unhung2";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "busy";
            transition: ACCELERATE 0.5;
	 }
         program {
	    name: "busy_anim";
	    signal:  "e,state,hung";
	    source:  "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
	 program {
	    name:    "max_full";
	    signal:  "e,action,maximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "max" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }
	 program {
	    name:    "unmax_full";
	    signal:  "e,action,unmaximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	 }

	 program {
	    name: "shade_end";
	    signal: "e,state,shaded";
	    source: "e";
	    action: STATE_SET "shaded" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
	 program {
	    name:    "unshade_start";
	    signal:  "e,state,unshading";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "bottom";
	    target: "e.swallow.client";
	    target: "e.event.resize.tl";
	    target: "e.event.resize.tr";
	    target: "e.event.resize.bl";
	    target: "e.event.resize.br";
	    target: "e.event.resize.t";
	    target: "e.event.resize.b";
	 }
	 program {
	    name: "resize_b_on";
	    signal: "mouse,in";
	    source: "e.event.resize.b";
	    action:  ACTION_STOP;
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	    after: "resize_b_on2";
	 }
	 program {
	    name: "resize_b_on2";
	    action: STATE_SET "default" 0.0;
	    target: "resize_b";
	    after: "resize_b_on3";
	 }
	 program {
	    name: "resize_b_on3";
	    action: STATE_SET "past" 0.0;
	    transition: LINEAR 0.5;
	    target: "resize_b";
	    after: "resize_b_on2";
	 }
	 program {
	    name: "resize_b_off";
	    signal: "mouse,out";
	    source: "e.event.resize.b";
	    action:  ACTION_STOP;
	    target: "resize_b_on";
	    target: "resize_b_on2";
	    target: "resize_b_on3";
	 }

	 program {
	    name: "icon_down";
	    signal: "mouse,down,*";
	    source: "e.event.icon";
	    action:  STATE_SET "active" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "icon_up";
	    signal: "mouse,up,*";
	    source: "e.event.icon";
	    action:  STATE_SET "default" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "bt_close_down";
	    signal: "mouse,down,*";
	    source: "e.event.close";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_close_up";
	    signal: "mouse,up,*";
	    source: "e.event.close";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
      }
   }

   /*** NORESIZE DIALOG WINDOW BORDER ***/
   group { name: "e/widgets/border/noresize_dialog/border";
      images {
	 image: "bd_top.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "exclam.png" COMP;
	 image: "bd_button_close_shadow.png" COMP;
	 image: "bd_button_close_focused.png" COMP;
	 image: "bd_button_close_unfocused.png" COMP;
      }
      parts {
	 part { name: "top";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
		  to_y: "title_base";
	       }
               color_class: "border_top";
	       image {
		  normal: "bd_top.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "icon_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 2 -3;
		  to_y: "title_base";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  offset: 2 3;
	       }
	       rel2 {
		  offset: 2 -2;
	       }
	    }
	 }
	 part { name: "icon_area2";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
         part {
	    name: "busy";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image {
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
		  normal: "busy-9.png";
	       }
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area2";
	       rel2.to: "icon_area2";
	    }
	    description { state: "shrunk" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.3 0.3;
	       rel2.relative: 0.7 0.7;
	    }
	 }
         part {
	    name: "urgent";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2";
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 1;
	       align: 0.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 9 2;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -8 2;
		  to_x: "title_base";
	       }
	       color: 0 0 0 255;
	       color_class: "border_title";
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.0;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "bt_close";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 22 22;
	       max: 22 22;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: -2 1;
		  to_x: "top";
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -2 -2;
		  to_x: "top";
		  to_y: "top";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }

	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "top";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 0;
		  to: "top";
	       }
               color_class: "border_top_hilight";
	       image {
		  normal: "bd_top_hilight.png";
	       }
               fill.smooth: 0;
	    }
	 }

	 part { name: "buttons_unfoc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "bt_close_unfoc";
	    mouse_events: 0;
	    clip_to: "buttons_unfoc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "buttons_foc";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "bt_close_foc";
	    mouse_events: 0;
	    clip_to: "buttons_foc";
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "title_base";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 0;
		  to_x: "icon_area";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -3 4;
		  to_y: "e.text.title";
		  to_x: "bt_close";
	       }
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "title_base";
	       }
	       rel2 {
		  to: "title_base";
		  relative: 1.0 0.0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel2 {
		  to: "title_base";
		  relative: 1.0 1.0;
	       }
	    }
	 }

	 part { name: "title2";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.0 1.0;
	       rel1 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 0.0 1.0;
		  offset: -1 0;
	       }
	       rel2 {
		  to_x: "e.text.title";
		  to_y: "title_back";
		  relative: 1.0 1.0;
		  offset: 0 1;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "border_title";
	       text {
		  text_source: "e.text.title";
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.0 0.0;
		  min: 0 1;
		  text_class: "title_bar";
	       }
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }

	 part { name: "e.swallow.client";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to_y: "top";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	 }

	 part { name: "e.event.titlebar";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "title_base";
	       rel2.to: "title_base";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.icon";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "icon_area";
	       rel2.to: "icon_area";
	       color: 0 0 0 0;
	    }
	 }

	 part { name: "e.event.close";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "bt_close";
	       rel2.to: "bt_close";
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name: "focus_in";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "focused" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }
	 program {
	    name: "focus_out";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "title_back";
	    target: "title2";
	    target: "title_over";
	    target: "buttons_foc";
	    target: "buttons_unfoc";
	    target: "e.text.title";
	 }

	 program {
	    name:    "urgent";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "visible" 0.0;
	    target: "urgent";
	    target: "urgent2";
            transition: DECELERATE 0.5;
	    after: "urgent2";
	 }
	 program {
	    name:    "urgent2";
            action: STATE_SET "faded" 0.0;
	    target: "urgent2";
            transition: LINEAR 0.5;
	    after: "urgent3";
	 }
	 program {
	    name:    "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program {
	    name:    "urgentw0";
	    signal:  "e,state,urgent";
	    source:  "e";
            action: STATE_SET "default" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw1";
	 }
	 program {
	    name:    "urgentw1";
            action: STATE_SET "uw1" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw2";
	 }
	 program {
	    name:    "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program {
	    name:    "urgentw3";
            action: STATE_SET "uw3" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw4";
	 }
	 program {
	    name:    "urgentw4";
            action: STATE_SET "uw4" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw0";
	 }
	 program {
	    name:    "not_urgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
            action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program {
	    name:    "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }

	 program {
	    name:    "hung";
	    signal:  "e,state,hung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "shrunk" 0.0;
	    target: "e.swallow.icon";
            transition: DECELERATE 0.5;
	 }
	 program {
	    name:    "unhung";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action:  ACTION_STOP;
	    target: "busy_anim";
	 }
	 program {
	    name:    "unhung2";
	    signal:  "e,state,unhung";
	    source:  "e";
	    /* FIXME: */
            action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "busy";
            transition: ACCELERATE 0.5;
	 }
         program {
	    name: "busy_anim";
	    signal:  "e,state,hung";
	    source:  "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
	 program {
	    name:    "max_full";
	    signal:  "e,action,maximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "max" 0.0;
	    target: "e.swallow.client";
	 }
	 program {
	    name:    "unmax_full";
	    signal:  "e,action,unmaximize,fullscreen";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "e.swallow.client";
	 }

	 program {
	    name: "shade_end";
	    signal: "e,state,shaded";
	    source: "e";
	    action: STATE_SET "shaded" 0.0;
	    target: "e.swallow.client";
	 }
	 program {
	    name:    "unshade_start";
	    signal:  "e,state,unshading";
	    source:  "e";
	    action: STATE_SET "default" 0.0;
	    target: "e.swallow.client";
	 }

	 program {
	    name: "icon_down";
	    signal: "mouse,down,*";
	    source: "e.event.icon";
	    action:  STATE_SET "active" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "icon_up";
	    signal: "mouse,up,*";
	    source: "e.event.icon";
	    action:  STATE_SET "default" 0.0;
	    target: "icon_area";
	 }
	 program {
	    name: "bt_close_down";
	    signal: "mouse,down,*";
	    source: "e.event.close";
	    action:  STATE_SET "active" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
	 program {
	    name: "bt_close_up";
	    signal: "mouse,up,*";
	    source: "e.event.close";
	    action:  STATE_SET "default" 0.0;
	    target: "bt_close_unfoc";
	    target: "bt_close_foc";
	 }
      }
   }

  /*** BONUS BORDERS TO CHOOSE FROM ***/
  group { name: "e/widgets/border/pixel/border";
     parts {
	part { name: "px1";
	   type: RECT;
	   description { state: "default" 0.0;
	      rel1 {
		 relative: 0.0 0.0;
		 offset: 0 0;
	      }
	      rel2 {
		 relative: 1.0 0.0;
		 offset: -1 0;
	      }
	      color: 0 0 0 255;
	   }
	}
	part { name: "px2";
	   type: RECT;
	   description { state: "default" 0.0;
	      rel1 {
		 relative: 0.0 1.0;
		 offset: 0 -1;
	      }
	      rel2 {
		 relative: 1.0 1.0;
		 offset: -1 -1;
	      }
	      color: 0 0 0 255;
	   }
	}
	part { name: "px3";
	   type: RECT;
	   description { state: "default" 0.0;
	      rel1 {
		 relative: 0.0 0.0;
		 offset: 0 1;
	      }
	      rel2 {
		 relative: 0.0 1.0;
		 offset: 0 -2;
	      }
	      color: 0 0 0 255;
	   }
	}
	part { name: "px4";
	   type: RECT;
	   description { state: "default" 0.0;
	      rel1 {
		 relative: 1.0 0.0;
		 offset: -1 1;
	      }
	      rel2 {
		 relative: 1.0 1.0;
		 offset: -1 -2;
	      }
	      color: 0 0 0 255;
	   }
	}
	part { name: "e.swallow.client";
	   type: SWALLOW;
	   description { state: "default" 0.0;
	      rel1 {
		 relative: 0.0 0.0;
		 offset: 1 1;
	      }
	      rel2 {
		 relative: 1.0 1.0;
		 offset: -2 -2;
	      }
	   }
	}
     }
  }

/////////////////////////////////////////////////////////////////////////////
   /*** THE DEFAULT MOUSE CURSOR - COLOR ***/
   group { name: "e/pointer/enlightenment/default/color";
      images {
	 image: "pointer.png" COMP;
	 image: "pointer_glow.png" COMP;
	 image: "pointer_glint_01.png" COMP;
	 image: "pointer_glint_02.png" COMP;
	 image: "pointer_glint_03.png" COMP;
	 image: "pointer_glint_04.png" COMP;
	 image: "pointer_glint_05.png" COMP;
	 image: "pointer_glint_06.png" COMP;
	 image: "pointer_glint_07.png" COMP;
	 image: "pointer_glint_08.png" COMP;
	 image: "pointer_glint_09.png" COMP;
	 image: "pointer_glint_10.png" COMP;
	 image: "pointer_glint_11.png" COMP;
	 image: "pointer_glint_12.png" COMP;
      }

      parts {
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 0.71875 0.71875; /* force a specific aspect ratio so
					 * when it gets scaled it wont squash
					 * or stretch */
	       aspect_preference: BOTH; /* both axes control aspect - thus it
					 * will be WITHIN the bounds the axes
					 * of thre part describe */
	       image {
		  normal: "pointer.png";
	       }
	    }
	 }
	 part { name: "glow"; /* this overlay is used to put a white glow
			       * around the pointer, so when the pointer is
			       * idle every now and again it will pulsate
			       * with this glow to just remind you where the
			       * pointer is (if you lose a black-ish
			       * pointer on a black background) */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       visible: 0;
	       color: 255 255 255 0;
	       image.normal: "pointer_glow.png";
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "glint"; /* this overlay flips a series of small images
				* over the pointer. they look like a white
				* light/refelection when put over the pointer
				* base image - and produce a "glinting" effect
				* when played back fast */
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       visible: 0;
	       image.normal: "pointer_glint_12.png";
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       image.tween: "pointer_glint_01.png";
	       image.tween: "pointer_glint_02.png";
	       image.tween: "pointer_glint_03.png";
	       image.tween: "pointer_glint_04.png";
	       image.tween: "pointer_glint_05.png";
	       image.tween: "pointer_glint_06.png";
	       image.tween: "pointer_glint_07.png";
	       image.tween: "pointer_glint_08.png";
	       image.tween: "pointer_glint_09.png";
	       image.tween: "pointer_glint_10.png";
	       image.tween: "pointer_glint_11.png";
	       image.normal: "pointer_glint_12.png";
	    }
	 }
	 part { name: "e.swallow.hotspot"; /* this is a "fake" swallow part
					    * that is used by e to determine
					    * the pointer hotspot - or where
					    * the actual mouse events get
					    * reported from on the cursor */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 { /* the hotspot will scale with the cursor here */
		  to: "base";
		  relative: 0.27 0.125;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 0.27 0.125;
		  offset: 0 0;
	       }
	    }
	 }
      }
      programs {
         program { name: "mouse_down"; /* called every time e detects a mouse
					* press */
	    signal: "e,action,mouse,down";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
	    target: "glint";
	    after: "mouse_down2";
	 }
         program { name: "mouse_down2";
	    action: STATE_SET "default" 0.0;
	    target: "glint";
	 }
         program { name: "mouse_idle"; /* called when e thinks the mouse went
					* idle and isn't moving */
	    signal: "e,state,mouse,idle";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    in: 5.0 0.0;
            transition: SINUSOIDAL 1.0;
	    target: "glow";
	    after: "mouse_idle2";
	 }
         program { name: "mouse_idle2";
	    action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 2.0;
	    target: "glow";
	    after: "mouse_idle";
	 }
         program { name: "mouse_active"; /* called when e sees the mouse become
					  * active again */
	    signal: "e,state,mouse,active";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "glow";
	    after: "mouse_active2";
	 }
         program { name: "mouse_active2";
	    action: ACTION_STOP;
	    target: "mouse_idle";
	    target: "mouse_idle2";
	 }
// when mouse button is released. not used here
//         program { name: "xx";
//	    signal: "e,action,mouse,up";
//	    source: "e";
//	 }
// when mouse button is moved. not used here
//         program { name: "xx";
//	    signal: "e,action,mouse,move";
//	    source: "e";
//	 }
// when mouse wheel is scrolled. not used here
//         program { name: "xx";
//	    signal: "e,action,mouse,wheel";
//	    source: "e";
//	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** THE DEFAULT MOUSE CURSOR - MONOCHROME. REALLY BORING ***/
   /* This pointer is used if the Xserver does not support full ARGB color
    * pointers. This can happen if X is old or the driver or libxcursor did
    * not exist when ecore was compiled. since the cursor will be literally
    * reduced down to black and white whith a single transparency mask,
    * colors other than black and whigte will be lost (and be approximated
    * with dithering) and any translucency other than completely opaque or
    * completely transparent pixels will also be lost. it then makes sense
    * to have a special black and white only image with no semi-transparency
    * so when this is displayed it will look directly as intended by the
    * artist */
   group { name: "e/pointer/enlightenment/default/mono";
      images {
	 image: "pointer_mono.png" COMP; /* a simple mono cursor image */
      }
      parts {
         part { name: "e/pointer";
	    mouse_events:  0;
	    description {
	       state:  "default" 0.0;
	       image {
		  normal: "pointer_mono.png";
	       }
	    }
	 }
         part { name: "hotspot"; /* this cursor also has a hotspot */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	       rel2 {
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** SLIDESEL */
   /* this is a horizontal slide selector in e where you drag it horizontally
    * and different icons appear with text near it indicating what is
    * selected. not actually used anywhere, currently, but in e nevertheless */
   group { name: "e/widgets/slidesel";
      images {
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
	 image: "bt_dis_shine.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "e.text.label";
		  relative: 0.0 1.0;
		  offset: 2 2;
	       }
	       rel2.offset: -3 -3;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  to: "base";
		  offset: 2 2;
	       }
	       rel2 {
		  to: "base";
		  offset: -3 -3;
	       }
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       rel1.to: "clipper";
	       rel2.to: "clipper";
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       image {
		  normal: "bt_dis_shine.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -3 2;
	       }
	       align: 0.0 0.0;
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.5 0.0;
		  text_class: "slidesel_label";
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** TOOLBAR */
   group { name: "e/widgets/toolbar";
      images {
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
	 image: "bt_dis_shine.png" COMP;
         image: "icon_left_arrow.png" COMP;
         image: "icon_right_arrow.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2.offset: -3 -3;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  to: "base";
		  offset: 2 2;
	       }
	       rel2 {
		  to: "base";
		  offset: -3 -3;
	       }
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       rel1.to: "clipper";
	       rel2.to: "clipper";
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       image {
		  normal: "bt_dis_shine.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	       color: 255 255 255 128;
	    }
	 }
         part { name: "left_arrow";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "icon_left_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "right_arrow";
            mouse_events: 1;
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "icon_right_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "e.dragable.hbar";
            mouse_events: 0;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "base";
            }
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "base";
               rel2.to: "base";
            }
         }
         part { name: "event";
	    type: RECT;
	    mouse_events: 1;
            repeat_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
         program { name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
            target: "right_arrow";
         }
         program { name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action:  STATE_SET "hidden" 0.0;
            target: "left_arrow";
            target: "right_arrow";
            transition: LINEAR 0.5;
         }
         program { name: "sb_left";
            signal: "mouse,down,1";
            source: "left_arrow";
            action:  DRAG_VAL_STEP -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program { name: "sb_right";
            signal: "mouse,down,1";
            source: "right_arrow";
            action:  DRAG_VAL_STEP 1.0 0.0;
            target: "e.dragable.hbar";
         }
      }
   }

   group { name: "e/widgets/toolbar/item";
      images {
         image: "toolbar_sel.png" COMP;
      }
      parts {
	 part { name: "label2";
	    type: TEXT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	       color: 0 0 0 255;
	       text {
                  font: "Sans";
		  text_source: "e.text.label";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       image {
		  normal: "toolbar_sel.png";
		  border: 3 3 0 0;
	       }
               fill.smooth: 0;
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   0 -1;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -1 -1;
	       }
	       visible: 0;
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.1;
	 }
	 program { name: "go";
	    signal:  "mouse,up,1";
	    source:  "event";
	    action:  SIGNAL_EMIT "e,action,click" "e";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MENUS ***/
   /* this is the background for all menus. it also may optionally display a
    * title for the menu. this is wrapped around all the menu items that are
    * laid out in a vertical list from top to bottom */
   group { name: "e/widgets/menu/default/background";
      images {
	 image: "base_bg.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
               color_class: "menu_base";
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0; /* note - a shortcut for avoiding doing
				* fill { smooth: 0; } */
	    }
	 }
	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 15;
	       }
	       image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 4 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -5 0;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 4 0;
	       }
	       rel2 {
		  to_y: "e.text.title";
		  relative: 1.0 1.0;
		  offset: -5 -4;
	       }
	    }
	 }
	 part { name: "e.text.title"; /* e sets the text of this to the title
				       * if there is any */
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       visible: 0;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 0;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "menu_title";
	       text {
		  text_source: "e.text.title";
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.5 0.0;
		  min: 0 0;
		  text_class: "menu_title";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color_class: "menu_title_active";
	       text.min: 1 1;
	    }
	 }
	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "e.swallow.content"; /* this swallow part determines
					    * where in the menu the vertical
					    * list of menu items is put */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "e.text.title";
		  relative: 0.0 1.0;
		  offset: 2 1;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -3 -3;
	       }
	    }
	 }
      }
      programs {
	 program { name: "on"; /* this program is run when e emits a signal
				* to display a title. e will also set the
				* title text */
	    signal: "e,action,show,title";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    target: "title_back";
	    target: "e.text.title";
	    target: "title_over";
	 }
	 program { name: "off"; /* run when the title is removed */
	    signal: "e,action,hide,title";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "title_back";
	    target: "e.text.title";
	    target: "title_over";
	 }
      }
   }

   /* this is placed as a horizontal separator between menu items in the
    * vertical menu item list. it has no functionality other than being
    * a visual separator */
   group { name: "e/widgets/menu/default/separator";
      images {
	 image: "menu_sep.png" COMP;
      }
      parts {
	 part { name: "separator";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 16 2;
	       rel1.offset: 2 2;
	       rel2.offset: -3 -3;
	       image {
		  normal: "menu_sep.png";
		  border: 2 2 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
   }

   /* this is used for regular menu items. this is what swallows/holds the
    * whole line of the menu item, icon, check/radio mark, label and submenu
    * indicator, where applicable */
   group { name: "e/widgets/menu/default/item_bg";
      /* this is idential to the regular menu item above, but used only for
       * items that have a submenu. this is to allow for a possible different
       * look for submenu holding items. here this is identical to to the
       * normal menu item, thus we are making use of the alias directive that
       * gives a group the ability to go by manu names */
      alias: "e/widgets/menu/default/submenu_bg";
      images {
	 image: "menu_sel_bg.png" COMP;
	 image: "menu_sel_fg.png" COMP;
      }
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -3;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 5;
	       }
	       image {
		  normal: "menu_sel_bg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 2;
	       }
	    }
	 }
	 part { name: "e.swallow.content"; /* all item content will go here */
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       rel1.offset: 2 1;
	       rel2.offset: -3 -2;
	    }
	 }
	 part { name: "fg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "menu_sel_fg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program { name: "sel"; /* when the menu item is selected (hilighted)
				 * this program is run to give the whole item
				 * an overall selected look */
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    transition: LINEAR 0.2;
	    target: "bg";
	    target: "fg";
	 }
	 program { name: "unsel"; /* when selection is removed from the menu
				   * item */
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.1;
	    target: "bg";
	    target: "fg";
	 }
      }
   }

   /* this group holds a menu icon. here we just use it to add padding around
    * the icon. And to gray-out when disabled */
   group { name: "e/widgets/menu/default/icon";
      parts {
         part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description { state: "disabled" 0.0;
	       color: 255 255 255 128;
	    }
         }
         part { name: "e.swallow.content"; /* icon is swallowed here */
	    type: SWALLOW;
	    clip_to: "clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -3 -3;
	       }
	    }
	 }
      }
      programs {
	 program { name: "enable"; /* enable */
	    signal: "e,state,enable";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "clip";
	 }
	 program { name: "disable"; /* disable */
	    signal: "e,state,disable";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "clip";
	 }
      }
   }

   /* this is the actual text label for the menu item */
   group { name: "e/widgets/menu/default/label";
      parts {
         part { name: "e.text.label"; /* e sets the text of this */
	    type: TEXT;
	    effect: SOFT_SHADOW;
            mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 1 -1;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 3 1;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "menu_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "menu_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	       color3: 0 0 0 64;
	       color_class: "menu_item";
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 110 110 110 255;
	       color3: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program { name: "sel"; /* when the menu item is actually selected */
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    transition: LINEAR 0.2;
	    target: "e.text.label";
	 }
	 program { name: "unsel"; /* on de-select */
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.3;
	    target: "e.text.label";
	 }
	 program { name: "enable"; /* enable */
	    signal: "e,state,enable";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.3;
	    target: "e.text.label";
	 }
	 program { name: "disable"; /* disable */
	    signal: "e,state,disable";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    //transition: LINEAR 0.3;
	    target: "e.text.label";
	 }
      }
   }

   /* this is a small arrow on the right of the menu item to indicate that it
    * has a submenu after it */
   group { name: "e/widgets/menu/default/submenu";
      images {
	 image: "menu_arrow_normal.png" COMP;
	 image: "menu_arrow_sel.png" COMP;
      }
      parts {
	 part { name: "arrow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 9 12;
	       max: 9 12;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 1;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -3 -1;
	       }
	       image.normal: "menu_arrow_normal.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "menu_arrow_sel.png";
	    }
	 }
      }
      programs {
	 program { name: "sel";
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    target: "arrow";
	 }
	 program { name: "unsel";
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "arrow";
	 }
      }
   }

   /* this is placed left of the icon in a menu item (if any icon) or left
    * of the label if no icon is present. this is a checkbox to indicate if
    * the menu item is enabled or disabled */
   group { name: "e/widgets/menu/default/check";
      images {
	 image: "check_base.png" COMP;
	 image: "check_on.png" COMP;
	 image: "check_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       image.normal: "check_base.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "check_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "check_sel.png";
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
      }
      programs {
	 program { name: "sel"; /* on selection of the menu item */
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    target: "mark";
	 }
	 program { name: "unsel"; /* de-select */
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	 }
	 program { name: "on"; /* if the checkmark is to be displayed */
	    signal: "e,state,on";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off"; /* check mark is not to be displayed */
	    signal: "e,state,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
      }
   }

   /* for a radio menu item - same as check, but only one of a group of radio
    * menu item can be selected at any one time */
   group { name: "e/widgets/menu/default/radio";
      images {
	 image: "radio_base.png" COMP;
	 image: "radio_on.png" COMP;
	 image: "radio_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       image.normal: "radio_base.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "menu_arrow_sel.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "radio_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "radio_sel.png";
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
      }
      programs {
	 program { name: "sel";
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    target: "mark";
	 }
	 program { name: "unsel";
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	 }
	 program { name: "on";
	    signal: "e,state,on";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off";
	    signal: "e,state,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** SHELF ***/
   /* Shelves are "panels" that  are placed around the edges of the screen
    * to hold useful gadgets to control things - like switch desktops
    * (the pager module and its gadget), launch programs, and anything else
    * someone wants to put in there. The way to add gadgets to a shelf is to
    * write a module that places a gadget there. This means that it might end
    * up containing all sorts of things and the artist needs to be aware of
    * that and make sure the shelf border and background etc. won't interfere
    * with all manner of things that may get placed there */
   group { name: "e/shelf/default/base";
      data {
	 /* this tells e the shelf is shaped, not rectangular */
//	 item: "shaped" "1";
	 /* this tells e the number of pixels of the shelf to leave "exposed"
	  * when auto-hiding the shelf */
	 item: "hidden_state_size" "1";
	 /* This makes the border hide instantly after the given amount of
	  * seconds - in this case 3 seconds. This means there will be no
	  * visible part of the shelf after this time at all as it will be
	  * totally hidden */
//	 item: "instant_delay" "3.0";
      }
      images {
	 image: "base_bg.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               color_class: "shelf_base";
	       image.normal: "base_bg.png";
	       image.border: 2 2 2 2;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 3 3;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -4 -4;
	       }
	    }
	 }
      }
      programs {
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top_left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top_right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom_left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom_right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left_top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left_bottom";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right_top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right_bottom";
//	 source: "e";
//      }
// tell us we became a visible shelf. not used here
//      program { name: "xx";
//	 signal: "e,state,visible";
//	 source: "e";
//      }
// tell us we became a hidden shelf. not used here
//      program { name: "xx";
//	 signal: "e,state,hidden";
//	 source: "e";
//      }
      }
   }
   /* This is put around gadgets in the shelf if they ask for an "inset" style
    * framing. This puts some sort of bordering around them to make them look
    * "inset" into the shelf or screen. this is meant to go with the default
    * shelf style as implied in the group name */
   group { name: "e/shelf/default/inset";
      images {
	 image: "inset_sunk.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "inset";
		  offset: 1 1;
	       }
	       rel2 {
		  to: "inset";
		  offset: -2 -2;
	       }
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to: "base";
		  offset: 1 1;
	       }
	       rel2 {
		  to: "base";
		  offset: -2 -2;
	       }
	    }
	 }
	 part { name: "inset";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	       image.normal: "inset_sunk.png";
	       image.middle: 0; /* here we say the "middle" part of the image
				 * between the borders is not filled - it's
				 * empty, so don't draw it - ignore it */
	       image.border: 7 7 7 7;
	       fill.smooth: 0;
	    }
	 }
      }
      programs {
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top_left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,top_right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom_left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,bottom_right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left_top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,left_bottom";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right_top";
//	 source: "e";
//      }
// tell us what oriantation we are in. not used here
//      program { name: "xx";
//	 signal: "e,state,orientation,right_bottom";
//	 source: "e";
//      }
      }
   }
   /* Same as inset, but meant to be with no decorations that are visible. here
    * we simply make the content swallow inset a bit from the edges to align
    * with any plain style inset boxes */
   group { name: "e/shelf/default/plain";
      parts {
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
      }
   }

   /* This is the "invisible" shelf. Yes. Even it has visual config in edje.
    * The idea is that it will remain invisible, BUT will allow the designer
    * to do some layout and padding. This gets the same signals as the
    * default shelf and can provide the same data items */
   group { name: "e/shelf/invisible/base";
      data.item: "shaped" "1";
      parts {
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	    }
	 }
      }
   }
   group { name: "e/shelf/invisible/inset";
      images {
	 image: "inset_sunk_dark.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "inset";
		  offset: 1 1;
	       }
	       rel2 {
		  to: "inset";
		  offset: -2 -2;
	       }
	       color: 0 0 0 32;
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to: "base";
		  offset: 1 1;
	       }
	       rel2 {
		  to: "base";
		  offset: -2 -2;
	       }
	    }
	 }
	 part { name: "inset";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	       image.normal: "inset_sunk_dark.png";
	       image.middle: 0;
	       image.border: 7 7 7 7;
	       fill.smooth: 0;
	    }
	 }
      }
   }
   group { name: "e/shelf/invisible/plain";
      parts {
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
      }
   }

   /* This is the alternate shelf. It provides a stylistic alternative to
    * make the shelf more dynamic to your tastes and wallpaper. It is
    * selected in the Shelf Configuration. More alternative shelfs can
    * be provided by using more group names. eg, "e/shelf/black/base" */
   group { name: "e/shelf/alternate/base";
      images {
	 image: "shelf_alt_bg.png" COMP;
// 	 image: "shelf_alt_bg_left.png" COMP;
// 	 image: "shelf_alt_bg_right.png" COMP;
	 image: "shelf_alt_over.png" COMP;
// 	 image: "shelf_alt_over_left.png" COMP;
// 	 image: "shelf_alt_over_right.png" COMP;
	 image: "shelf_alt_shine.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               color_class: "shelf_base";
	       image.normal: "shelf_alt_bg.png";
	       fill.smooth: 0;
	    }
// 	    description { state: "left" 0.0;
// 	       image.normal: "shelf_alt_bg_left.png";
// 	       fill.smooth: 0;
// 	    }
// 	    description { state: "right" 0.0;
// 	       image.normal: "shelf_alt_bg_right.png";
// 	       fill.smooth: 0;
// 	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 3 3;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -4 -4;
	       }
	    }
	 }
	 part { name: "shine";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "shelf_alt_shine.png";
	       rel2.relative: 1.0 0.5;
	       fill.smooth: 0;
	    }
// 	    description { state: "left" 0.0;
// 	       inherit: "default" 0.0;
// 	       color: 255 255 255 0;
// 	    }
// 	    description { state: "right" 0.0;
// 	       inherit: "default" 0.0;
// 	       color: 255 255 255 0;
// 	    }
	 }
	 part { name: "over";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "shelf_alt_over.png";
	       image.border: 5 5 5 5;
	       image.middle: 0;
	       fill.smooth: 0;
	    }
// 	    description { state: "left" 0.0;
// 	       image.normal: "shelf_alt_over_left.png";
// 	       image.border: 5 5 5 5;
// 	       image.middle: 0;
// 	       fill.smooth: 0;
// 	    }
// 	    description { state: "right" 0.0;
// 	       image.normal: "shelf_alt_over_right.png";
// 	       image.border: 5 5 5 5;
// 	       image.middle: 0;
// 	       fill.smooth: 0;
// 	    }
	 }
      }
      /* Because programs can not respond to 2 different types of signals,
       * the programs are split into individual programs that point towards
       * the base program for its orientation. */
      programs {
	 /* Left orientation */
// 	 program { name: "left";
// 	    signal: "e,state,orientation,left";
// 	    source: "e";
// 	    action: STATE_SET "left" 0.0;
// 	    target: "base";
// 	    target: "over";
// 	    target: "shine";
// 	 }
// 	 program { name: "left_top";
// 	    signal: "e,state,orientation,left_top";
// 	    source: "e";
// 	    after: "left";
// 	 }
// 	 program { name: "left_bottom";
// 	    signal: "e,state,orientation,left_bottom";
// 	    source: "e";
// 	    after: "left";
// 	 }
// 	 /* Right orientation */
// 	 program { name: "right";
// 	    signal: "e,state,orientation,right";
// 	    source: "e";
// 	    action: STATE_SET "right" 0.0;
// 	    target: "base";
// 	    target: "over";
// 	    target: "shine";
// 	 }
// 	 program { name: "right_top";
// 	    signal: "e,state,orientation,right_top";
// 	    source: "e";
// 	    after: "right";
// 	 }
// 	 program { name: "right_bottom";
// 	    signal: "e,state,orientation,right_bottom";
// 	    source: "e";
// 	    after: "right";
// 	 }
      }
   }
   group { name: "e/shelf/alternate/inset";
      images {
	 image: "inset_raised.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "inset";
		  offset: 4 4;
	       }
	       rel2 {
		  to: "inset";
		  offset: -5 -5;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to: "base";
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  offset: -1 -1;
	       }
	    }
	 }
	 part { name: "inset";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.offset: -1 -1;
	       rel2.offset: 0 0;
	       image.normal: "inset_raised.png";
	       image.middle: 0;
	       image.border: 7 7 7 7;
	       fill.smooth: 0;
	    }
	 }
      }
   }
   group { name: "e/shelf/alternate/plain";
      parts {
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: CONNMAN ***/
   /* inactive module right now - doesnt work, so this is a placeholder */
   group {
      name: "e/modules/connman/main"; // for gadget
      alias: "e/modules/connman/network"; // for icon in popup
      max: 128 128;
      min: 1 1;
      images {
	 image: "ball.png" COMP;
      }
      script {
       public message(Msg_Type:type, id, ...) {
	  if ((type == MSG_INT_SET) && (id == 0)) {
	     new sig;

	     sig = getarg(2);

	     if (sig <= 0)
	       run_program(PROGRAM:"sig_none");
	     else if (sig < 33)
	       run_program(PROGRAM:"sig_low");
	     else if (sig < 66)
	       run_program(PROGRAM:"sig_medium");
	     else if (sig >= 66)
	       run_program(PROGRAM:"sig_high");
	  }
       }
      }
      parts {
	 part { name: "base";
	    description { state: "default" 0.0;
	       aspect: 1 1;
	       aspect_preference: BOTH;
	       image.normal: "ball.png";
	    }
	 }
      }
      programs {
	 program { name: "sig_none";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sig_low";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sig_medium";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sig_high";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sec0";
	    signal: "e,state,security,open";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sec1";
	    signal: "e,state,security,wep";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sec2";
	    signal: "e,state,security,wpa";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sec3";
	    signal: "e,state,security,rsn";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sav0";
	    signal: "e,state,saved,on";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "sav1";
	    signal: "e,state,saved,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: CONF_EDGEBINDINGS ***/
   /* This group draws the edge and corners for the user to pick.
    * XXX: Needs some love from masters of the brush! */
   group {
      name: "e/modules/conf_edgebindings/selection"; // for gadget
      parts {
         part { name: "e.swallow.background";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 210 150;
               rel1.offset: 4 4;
               rel2 {
                  relative: 0.5 1;
                  offset: -2 -5;
               }
            }
         }
         part { name: "e.edge.top_left";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 0;
                  offset: 20 20;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part { name: "e.edge.top";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  offset: 20 0;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 0;
                  offset: -20 15;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part { name: "e.edge.top_right";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: -20 0;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 0;
                  offset: 0 20;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part { name: "e.edge.right";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: -15 20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: 0 -20;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part { name: "e.edge.bottom_right";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: -20 -20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: 0 0;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part { name: "e.edge.bottom";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0 1;
                  offset: 20 -15;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: -20 0;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part { name: "e.edge.bottom_left";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0 1;
                  offset: 0 -20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 1;
                  offset: 20 0;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part { name: "e.edge.left";
            type: RECT;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0 0;
                  offset: 0 20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 1;
                  offset: 15 -20;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part { name: "e.swallow.slider";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: 5 4;
                  to_x: "e.swallow.background";
                  to_y: "e.text.description";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 -5;
                  to_y: "e.swallow.background";
               }
            }
         }
         part { name: "e.text.description";
            type: TEXTBLOCK;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: 5 4;
                  to_x: "e.swallow.background";
               }
	       rel2 {
                  relative: 1 1;
                  offset: -5 -45;
               }
	       text {
		  style:    "dialog_style";
		  min:      1 1;
	       }
	    }
         }
         part { name: "e.text.selection";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description { state: "default" 0.0;
	       align: 0.5 0.5;
	       rel1 {
                  relative: 1 1;
		  offset: 5 5;
                  to: "e.edge.top_left";
	       }
	       rel2 {
                  relative: 0 0;
		  offset: -5 -5;
                  to: "e.edge.bottom_right";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
                  font: "Sans:style=Bold";
		  size: 12;
                  align: 0.5 0.5;
                  fit: 1 1;
	       }
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: START ***/
   /* This is for the "start" module - i.e. a "start" button. It simply
    * provides such a button/gadget in a shelf that pops up E's main
    * menu - a nice familiarity feature for those from the windows world.
    * Other than that it really does nothing, so this button can be quite
    * imaginative as it has few functional requirements */
   group { name: "e/modules/start/main";
      max: 128 128;
      images {
	 image: "logo_white_128.png" COMP;
	 image: "logo_black_128.png" COMP;
      }
      parts {
	 part { name: "base";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "logo_white_128.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "over";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.relative: -0.5 -0.5;
	       rel2.relative: 1.5 1.5;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "logo_black_128.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 1.0 1.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program { name: "on";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "active" 0.0;
            transition: LINEAR 0.2;
	    target: "base";
	    target: "over";
	 }
	 program { name: "off";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
	    target: "base";
	    target: "over";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: PAGER ***/
   group { name: "e/modules/pager/popup";
      images {
	 image: "base_bg.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png";
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 15;
	       }
	       image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 4 0;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 1.0;
		  offset: -5 -4;
	       }
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    effect: SOFT_SHADOW;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 0;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.5 0.0;
		  min: 1 1;
	       }
	    }
	 }
	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "e.text.label";
		  relative: 0.0 1.0;
		  offset: 12 11;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -13 -13;
	       }
	    }
	 }
      }
   }
   group { name: "e/modules/pager/desk";
      images {
	 image: "pager_base1.png" COMP;
	 image: "pager_base2.png" COMP;
	 image: "pager_hi1.png" COMP;
	 image: "pager_hi2.png" COMP;
	 image: "pager_base_pattern.png" COMP;
      }
      parts {
	 part { name: "zoom";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -3;
	       rel2.offset: 2 2;
	    }
	 }
	 part { name: "base";
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  to: "zoom";
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "zoom";
		  offset: 0 0;
	       }
	       image.normal: "pager_base2.png";
	       image.border: 5 5 5 5;
	       fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "base2";
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "zoom";
		  offset: -11 -11;
	       }
	       rel2 {
		  to: "zoom";
		  offset: 10 10;
	       }
	       image.normal: "pager_base1.png";
	       image.border: 5 5 5 5;
	       fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: -1 -1;
	       rel2.offset: 0 0;
	    }
	 }
	 part { name: "pattern";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
               rel1.to: "over2";
               rel2.to: "over2";
	       image.normal: "pager_base_pattern.png";
	       fill.size.relative: 0.0 0.0;
	       fill.size.offset: 12 12;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 255 255 255 128;
	       rel1 {
		  to: "base";
		  offset: 4 4;
	       }
	       rel2 {
		  to: "base";
		  offset: -5 -5;
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1.to: "clip";
	       rel2.to: "clip";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.to: "clip";
	       rel2.to: "clip";
	       color: 0 0 0 0;
	       color_class: "module_label";
	       text {
		  font: "Sans:style=Bold";
		  size: 8;
		  align: 0.5 0.5;
		  text_class: "module_small";
	       }
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	    }
	 }
	 part { name: "over";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       image.normal: "pager_hi2.png";
	       rel1 {
		  to: "base";
		  offset: 3 3;
	       }
	       rel2 {
		  to: "base";
		  offset: -4 -4;
	       }
	       image.border: 2 2 2 2;
	       image.middle: 0;
	       fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       image.normal: "pager_hi1.png";
	       rel1 {
		  to: "base2";
		  offset: 3 3;
	       }
	       rel2 {
		  to: "base2";
		  offset: -4 -4;
	       }
	       image.border: 2 2 2 2;
	       image.middle: 0;
	       fill.smooth: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.eventarea";
	    type: RECT;
	    mouse_events: 1;
	    repeat_events: 1;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "on";
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "active" 0.0;
            transition: LINEAR 0.2;
	    target: "base";
	    target: "base2";
	    target: "pattern";
	    target: "clip";
	    target: "over";
	    target: "over2";
	 }
	 program { name: "off";
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
	    target: "base";
	    target: "base2";
	    target: "pattern";
	    target: "clip";
	    target: "over";
	    target: "over2";
	 }
	 program { name: "drg";
	    signal: "e,action,drag,in";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    transition: SINUSOIDAL 0.2;
            target: "zoom";
	    after: "drg2";
	 }
	 program { name: "drg2";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.2;
            target: "zoom";
	    after: "drg";
	 }
	 program { name: "ndrg";
	    signal: "e,action,drag,out";
	    source: "e";
            action: ACTION_STOP;
	    target: "drg";
	    target: "drg2";
	    after: "ndrg2";
	 }
	 program { name: "ndrg2";
	    action: STATE_SET "default" 0.0;
            target: "zoom";
	 }

	 program { name: "name_show";
	    signal: "mouse,in";
	    source: "e.eventarea";
	    action: STATE_SET "active" 0.0;
	    transition: SINUSOIDAL 0.1;
            target: "e.text.label";
	 }
	 program { name: "name_hide";
	    signal: "mouse,out";
	    source: "e.eventarea";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.2;
            target: "e.text.label";
	 }
// don't have any states/anim for urgent windows on a desktop
//	 program { name: "xx";
//	    signal: "e,state,urgent";
//	    source: "e";
//	 }
// don't have any states/anim for urgent windows on a desktop
//	 program { name: "xx";
//	    signal: "e,state,not_urgent";
//	    source: "e";
//	 }
      }
   }
   group { name: "e/modules/pager/window";
      images {
	 image: "pager_window.png" COMP;
	 image: "pager_window_unsel.png" COMP;
         image: "exclam.png" COMP;
      }
      parts {
	 part { name: "icon_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon_area2";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "icon_area2";
		  offset: -3 -3;
	       }
	       rel2 {
		  to: "icon_area2";
		  offset: 2 2;
	       }
	       image.normal: "pager_window_unsel.png";
	       image.border: 9 9 7 6;
	    }
	    description { state: "focused" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "pager_window.png";
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 1.0 1.0;
	       max: 24  24;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1 {
		  to: "base";
		  offset: 4 7;
	       }
	       rel2 {
		  to: "base";
		  offset: -5 -7;
	       }
	    }
	 }
         part {
	    name: "urgent";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
         part {
	    name: "urgent2";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "exclam.png";
	    }
	    description {
	       state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -1.0 -1.0;
	       rel2.relative: 2.0 2.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "focus_in";
	    signal: "e,state,focused";
	    source: "e";
	    action: STATE_SET "focused" 0.0;
	    target: "base";
	 }
	 program { name: "focus_out";
	    signal: "e,state,unfocused";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	 }
	 program { name: "urgent";
	    signal: "e,state,urgent";
	    source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
	    target: "urgent";
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: LINEAR 0.5;
	    target: "urgent2";
	    after: "urgent3";
	 }
	 program { name: "urgent3";
            action: STATE_SET "visible" 0.0;
	    target: "urgent2";
	    after: "urgent2";
	 }
	 program { name: "urgentw0";
	    signal: "e,state,urgent";
	    source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw1";
	 }
	 program { name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw2";
	 }
	 program { name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
	    target: "icon_area2";
            transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program { name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw4";
	 }
	 program { name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            transition: DECELERATE 0.1;
	    target: "icon_area2";
	    after: "urgentw0";
	 }
	 program { name: "not_urgent";
	    signal: "e,state,not_urgent";
	    source: "e";
            action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    target: "urgent";
	    target: "urgent2";
	    target: "urgent3";
	    after: "not_urgent2";
	 }
	 program { name: "not_urgent2";
            action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent2";
	    target: "icon_area2";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: BATTERY ***/
   group { name: "e/modules/battery/main";
      images {
	 image: "bat_content1.png" COMP;
	 image: "bat_content2.png" COMP;
	 image: "bat_content3.png" COMP;
	 image: "bat_content1b.png" COMP;
	 image: "bat_content2b.png" COMP;
	 image: "bat_content3b.png" COMP;
	 image: "bat_over.png" COMP;
	 image: "bat_shadow.png" COMP;
	 image: "power.png" COMP;
	 image: "power_glow.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
       public message(Msg_Type:type, id, ...) {
	  if ((type == MSG_FLOAT) && (id == 1)) {
	     new Float:val;
	     new r;
	     new g;
	     new b;

	     val = getfarg(2);

	     if (val < 0.35)
	       {
		  new Float:val1;
		  new Float:val2;

		  val1 = val - 0.10;
		  if (val1 < 0.0) val1 = 0.0;

		  val2 = 0.125 - val1;
		  if (val2 < 0.0) val2 = 0.0;
		  val2 = val2 / 0.125;
		  r = round(val2 * 255.0, ROUND);

		  val2 = val1;
		  if (val2 > 0.125) val2 = 0.125;
		  val2 = val2 / 0.125;
		  g = round(val2 * 255.0, ROUND);

		  b = 0;
	       }
	     else
	       {
		  r = 0; g = 255; b = 0;
	       }

	     custom_state(PART:"fill", "default", 0.0);
	     set_state_val(PART:"fill", STATE_REL1, 0.0, 1.0 - val);
	     set_state(PART:"fill", "custom", 0.0);

	     custom_state(PART:"bfill1", "default", 0.0);
	     custom_state(PART:"bfill2", "default", 0.0);
	     custom_state(PART:"bfill3", "default", 0.0);

	     set_state_val(PART:"bfill1", STATE_COLOR, r, g, b, 255);
	     set_state_val(PART:"bfill2", STATE_COLOR, r, g, b, 255);
	     set_state_val(PART:"bfill3", STATE_COLOR, r, g, b, 255);

	     set_state(PART:"bfill1", "custom", 0.0);
	     set_state(PART:"bfill2", "custom", 0.0);
	     set_state(PART:"bfill3", "custom", 0.0);
	  }
       }
      }
      parts {
	 part { name: "fill_zone";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "over";
		  relative: 0.0 0.25;
	       }
	       rel2 {
		  to: "over";
		  relative: 1.0 0.84375;
	       }
	    }
	 }
	 part { name: "fill";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "fill_zone";
	       rel1.relative: 0.0 0.5;
	       rel2.to: "fill_zone";
	    }
	 }
	 part { name: "fade_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description { state: "faded" 0.0;
	       color: 255 255 255 160;
	    }
	 }
	 part { name: "pulse_clip";
	    type: RECT;
	    clip_to: "fade_clip";
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description { state: "faded" 1.0;
	       color: 255 255 255 255;
	    }
	    description { state: "faded" 0.0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "shadow";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "bat_shadow.png";
	    }
	 }
	 part { name: "bfill1";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       aspect: 3.0 3.0;
	       aspect_preference: HORIZONTAL;
	       align: 0.5 1.0;
	       rel1 {
		  to: "fill";
		  relative: 0.125 0.0;
		  offset: 0 -1;
	       }
	       rel2 {
		  to: "fill";
		  relative: 0.875 0.0;
		  offset: -1 -1;
	       }
	       image.normal: "bat_content1.png";
	    }
	 }
	 part { name: "bfill2";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to: "fill";
		  relative: 0.125 0.0;
	       }
	       rel2 {
		  to: "fill";
		  relative: 0.875 1.0;
	       }
	       image.normal: "bat_content2.png";
	    }
	 }
	 part { name: "bfill3";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to: "fill";
		  relative: 0.125 1.0;
	       }
	       rel2 {
		  to: "over";
		  relative: 0.875 0.96875;
	       }
	       image.normal: "bat_content3.png";
	    }
	 }
	 part { name: "bfill1b";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1.to: "bfill1";
	       rel2.to: "bfill1";
	       image.normal: "bat_content1b.png";
	    }
	 }
	 part { name: "bfill2b";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1.to: "bfill2";
	       rel2.to: "bfill2";
	       image.normal: "bat_content2b.png";
	    }
	 }
	 part { name: "bfill3b";
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1.to: "bfill3";
	       rel2.to: "bfill3";
	       image.normal: "bat_content3b.png";
	    }
	 }
	 part { name: "over";
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "bat_over.png";
	    }
	 }
	 part { name: "power_glow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "power";
	       rel2.to: "power";
	       image.normal: "power_glow.png";
	       visible: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 0;
	    }
	    description { state: "active2" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "power";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1 {
		  to: "over";
		  relative: 0.0 0.35;
	       }
	       rel2 {
		  to: "over";
		  relative: 1.0 0.86875;
	       }
	       image.normal: "power.png";
	       visible: 0;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "e.text.reading";
	    mouse_events: 0;
	    type: TEXT;
	    scale: 1;
	    effect: OUTLINE;
	    clip_to: "fade_clip";
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.5 0.0;
	       }
	       rel2 {
		  relative: 0.5 0.0;
	       }
	       color: 255 255 255 0;
	       color2: 0 0 0 0;
	       color3: 0 0 0 0;
	       color_class: "module_label";
	       text {
		  font: "Sans:style=Bold";
		  size: 8;
		  min: 1 1;
		  align: 0.5 0.0;
		  text_class: "module_small";
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	       color2: 0 0 0 128;
	       color3: 0 0 0 32;
	    }
	 }
	 part { name: "e.text.time";
	    mouse_events: 0;
	    type: TEXT;
	    scale: 1;
	    effect: OUTLINE;
	    clip_to: "fade_clip";
	    description {
	       state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1 {
		  relative: 0.5 1.0;
	       }
	       rel2 {
		  relative: 0.5 1.0;
	       }
	       color: 255 255 255 0;
	       color2: 0 0 0 0;
	       color3: 0 0 0 0;
	       color_class: "module_label";
	       text {
		  font: "Sans:style=Bold";
		  size: 8;
		  min: 1 1;
		  align: 0.5 1.0;
		  text_class: "module_small";
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	       color2: 0 0 0 128;
	       color3: 0 0 0 32;
	    }
	 }
      }
      programs {
         program {
	    name: "hover1";
	    signal: "mouse,in";
	    source: "over";
	    action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
	    target: "e.text.reading";
	    target: "e.text.time";
	 }
         program {
	    name: "hover2";
	    signal: "mouse,out";
	    source: "over";
	    action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
	    target: "e.text.reading";
	    target: "e.text.time";
	 }
         program {
	    name: "charge";
	    signal: "e,state,charging";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "fade_clip";
	 }
         program {
	    name: "charge2";
	    signal: "e,state,charging";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    target: "power";
	    target: "power_glow";
	    after: "charge3";
	 }
         program {
	    name: "charge3";
	    action: STATE_SET "active2" 0.0;
	    in: 1.0 0.0;
	    target: "power_glow";
	    after: "charge4";
	 }
         program {
	    name: "charge4";
	    action: STATE_SET "active" 0.0;
	    in: 1.0 0.0;
	    target: "power_glow";
	    after: "charge3";
	 }
         program {
	    name: "discharge";
	    signal: "e,state,discharging";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "fade_clip";
	 }
         program {
	    name: "discharge2";
	    signal: "e,state,discharging";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "power";
	    target: "power_glow";
	 }
         program {
	    name: "discharge3";
	    signal: "e,state,discharging";
	    source: "e";
	    action: ACTION_STOP;
	    target: "charge3";
	    target: "charge4";
	 }
         program {
	    name: "unknown";
	    signal: "e,state,unknown";
	    source: "e";
	    action: STATE_SET "faded" 0.0;
	    target: "fade_clip";
	 }
         program {
	    name: "pulse";
	    signal: "e,action,pulse,start";
	    source: "e";
	    action: STATE_SET "faded" 0.0;
	    transition: ACCELERATE 0.3;
	    after: "pulse2";
	    target: "pulse_clip";
	 }
         program {
	    name: "pulse2";
	    signal: "pulse2";
	    source: "e";
	    action: STATE_SET "faded" 1.0;
	    transition: ACCELERATE 0.1;
	    target: "pulse_clip";
	 }
         program {
	    name: "pulsestop";
	    signal: "e,action,pulse,stop";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "pulse_clip";
	 }
      }
   }

   group { name: "e/modules/battery/popup";
      min:  240 64;
      parts {
	 part { name: "battery";
	    type: SWALLOW;
	    mouse_events: 1;
	    repeat_events: 1;
	    description { state: "default" 0.0;
	       min: 1 1;
	       max: 120 120;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       align: 0.0 0.5;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 1.0 1.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  to_x: battery;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 -1;
	       }
	       color: 0 0 0 255;
	       text { text: "Your battery is low!";
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "module_large";
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.5;
		  to_x: battery;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       color: 0 0 0 255;
	       text { text: "AC power is recommended.";
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "module_normal";
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: TEMPERATURE ***/
   group { name: "e/modules/temperature/main";
      images {
	 image: "temp_base.png" COMP;
         image: "temp_mid.png" COMP;
         image: "temp_over.png" COMP;
      }
      min: 16 16;
      max:  128 128;
      script {
       public message(Msg_Type:type, id, ...) {
	  if ((type == MSG_FLOAT) && (id == 1)) {
	     new Float:val;
	     val = getfarg(2);
	     set_drag(PART:"temp_top", 0.0, val);
	  }
       }
      }
      parts {
	 part {
	    name: "base";
	    clip_to: "fade_clip";
	    description {
	       state: "default" 0.0;
	       aspect: 0.387 0.387;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       max: 48 124;
	       rel1 {
		  relative: 0.0 0.0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	       image {
		  normal: "temp_base.png";
	       }
	    }
	 }
	 part {
	    name: "temp";
	    clip_to: "temp_clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  to: "base";
	       }
	       rel2 {
		  to: "base";
	       }
	       image {
		  normal: "temp_mid.png";
	       }
	    }
	 }
	 part {
	    name: "overlay";
	    clip_to: "fade_clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  to: "base";
	       }
	       rel2 {
		  to: "base";
	       }
	       image {
		  normal: "temp_over.png";
	       }
	    }
	 }
	 part {
	    name:           "e.text.reading";
	    type:           TEXT;
	    scale:          1;
	    effect:         OUTLINE_SOFT_SHADOW;
	    clip_to:        "fade_clip";
	    description {
	       state: "default" 0.0;
	       align: 1.0 0.0;
	       rel1 {
		  relative: 1.0  0.0;
		  to_x:     "temp";
	       }
	       rel2 {
		  relative: 1.0  0.0;
	       }
	       color: 255 255 255 0;
	       color2: 0 0 0 0;
	       color3: 0 0 0 0;
	       color_class: "module_label";
	       text {
		  font: "Sans:style=Bold";
		  size: 8;
		  min: 1 1;
		  align: 0.0 0.0;
		  text_class: "module_small";
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	       color2: 0 0 0 128;
	       color3: 0 0 0 32;
	    }
	 }
	 part {
	    name:           "fade_clip";
	    type:           RECT;
	    mouse_events:   0;
	    description {
	       state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description {
	       state: "faded" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part {
	    name:           "temp_clip";
	    type:           RECT;
	    clip_to:        "fade_clip";
	    mouse_events:   0;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  to_x: "base";
		  to_y: "temp_top";
	       }
	       rel2 {
		  to: "base";
	       }
	    }
	 }
	 part {
	    name:           "temp_top";
	    type:           RECT;
	    dragable {
	       x: 0 0 0;
	       y: -1 1 0;
	       confine: "temp_limit";
	    }
	    mouse_events:   0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part {
	    name:           "temp_limit";
	    type:           RECT;
	    mouse_events:   0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.081;
		  to: "base";
	       }
	       rel2 {
		  relative: 1.0 0.637;
		  to: "base";
	       }
	    }
	 }
	 part {
	    name:           "over";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
         program {
	    name: "hover1";
	    signal: "mouse,in";
	    source: "over";
	    action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
	    target: "e.text.reading";
	 }
         program {
	    name: "hover2";
	    signal: "mouse,out";
	    source: "over";
	    action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
	    target: "e.text.reading";
	 }
	 program {
	    name: "known";
	    signal: "e,state,known";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "fade_clip";
	 }
	 program {
	    name: "unknown";
	    signal: "e,state,unknown";
	    source: "e";
	    action: STATE_SET "faded" 0.0;
	    target: "fade_clip";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: CLOCK ***/
   group { name: "e/modules/clock/main";
      images {
	 image: "clock_base.png" COMP;
	 image: "tacho_fg.png" COMP;
	 image: "ch-00.png" COMP;
	 image: "ch-01.png" COMP;
	 image: "ch-02.png" COMP;
	 image: "ch-03.png" COMP;
	 image: "ch-04.png" COMP;
	 image: "ch-05.png" COMP;
	 image: "ch-06.png" COMP;
	 image: "ch-07.png" COMP;
	 image: "ch-08.png" COMP;
	 image: "ch-09.png" COMP;
	 image: "ch-10.png" COMP;
	 image: "ch-11.png" COMP;
	 image: "ch-12.png" COMP;
	 image: "ch-13.png" COMP;
	 image: "ch-14.png" COMP;
	 image: "ch-15.png" COMP;
	 image: "ch-16.png" COMP;
	 image: "ch-17.png" COMP;
	 image: "ch-18.png" COMP;
	 image: "ch-19.png" COMP;
	 image: "ch-20.png" COMP;
	 image: "ch-21.png" COMP;
	 image: "ch-22.png" COMP;
	 image: "ch-23.png" COMP;
	 image: "ch-24.png" COMP;
	 image: "ch-25.png" COMP;
	 image: "ch-26.png" COMP;
	 image: "ch-27.png" COMP;
	 image: "ch-28.png" COMP;
	 image: "ch-29.png" COMP;
	 image: "ch-30.png" COMP;
	 image: "ch-31.png" COMP;
	 image: "ch-32.png" COMP;
	 image: "ch-33.png" COMP;
	 image: "ch-34.png" COMP;
	 image: "ch-35.png" COMP;
	 image: "ch-36.png" COMP;
	 image: "ch-37.png" COMP;
	 image: "ch-38.png" COMP;
	 image: "ch-39.png" COMP;
	 image: "ch-40.png" COMP;
	 image: "ch-41.png" COMP;
	 image: "ch-42.png" COMP;
	 image: "ch-43.png" COMP;
	 image: "ch-44.png" COMP;
	 image: "ch-45.png" COMP;
	 image: "ch-46.png" COMP;
	 image: "ch-47.png" COMP;
	 image: "ch-48.png" COMP;
	 image: "ch-49.png" COMP;
	 image: "ch-50.png" COMP;
	 image: "ch-51.png" COMP;
	 image: "ch-52.png" COMP;
	 image: "ch-53.png" COMP;
	 image: "ch-54.png" COMP;
	 image: "ch-55.png" COMP;
	 image: "ch-56.png" COMP;
	 image: "ch-57.png" COMP;
	 image: "ch-58.png" COMP;
	 image: "ch-59.png" COMP;
	 image: "cm-00.png" COMP;
	 image: "cm-01.png" COMP;
	 image: "cm-02.png" COMP;
	 image: "cm-03.png" COMP;
	 image: "cm-04.png" COMP;
	 image: "cm-05.png" COMP;
	 image: "cm-06.png" COMP;
	 image: "cm-07.png" COMP;
	 image: "cm-08.png" COMP;
	 image: "cm-09.png" COMP;
	 image: "cm-10.png" COMP;
	 image: "cm-11.png" COMP;
	 image: "cm-12.png" COMP;
	 image: "cm-13.png" COMP;
	 image: "cm-14.png" COMP;
	 image: "cm-15.png" COMP;
	 image: "cm-16.png" COMP;
	 image: "cm-17.png" COMP;
	 image: "cm-18.png" COMP;
	 image: "cm-19.png" COMP;
	 image: "cm-20.png" COMP;
	 image: "cm-21.png" COMP;
	 image: "cm-22.png" COMP;
	 image: "cm-23.png" COMP;
	 image: "cm-24.png" COMP;
	 image: "cm-25.png" COMP;
	 image: "cm-26.png" COMP;
	 image: "cm-27.png" COMP;
	 image: "cm-28.png" COMP;
	 image: "cm-29.png" COMP;
	 image: "cm-30.png" COMP;
	 image: "cm-31.png" COMP;
	 image: "cm-32.png" COMP;
	 image: "cm-33.png" COMP;
	 image: "cm-34.png" COMP;
	 image: "cm-35.png" COMP;
	 image: "cm-36.png" COMP;
	 image: "cm-37.png" COMP;
	 image: "cm-38.png" COMP;
	 image: "cm-39.png" COMP;
	 image: "cm-40.png" COMP;
	 image: "cm-41.png" COMP;
	 image: "cm-42.png" COMP;
	 image: "cm-43.png" COMP;
	 image: "cm-44.png" COMP;
	 image: "cm-45.png" COMP;
	 image: "cm-46.png" COMP;
	 image: "cm-47.png" COMP;
	 image: "cm-48.png" COMP;
	 image: "cm-49.png" COMP;
	 image: "cm-50.png" COMP;
	 image: "cm-51.png" COMP;
	 image: "cm-52.png" COMP;
	 image: "cm-53.png" COMP;
	 image: "cm-54.png" COMP;
	 image: "cm-55.png" COMP;
	 image: "cm-56.png" COMP;
	 image: "cm-57.png" COMP;
	 image: "cm-58.png" COMP;
	 image: "cm-59.png" COMP;
#ifdef CLOCK_SECONDS
	 image: "cs-00.png" COMP;
	 image: "cs-01.png" COMP;
	 image: "cs-02.png" COMP;
	 image: "cs-03.png" COMP;
	 image: "cs-04.png" COMP;
	 image: "cs-05.png" COMP;
	 image: "cs-06.png" COMP;
	 image: "cs-07.png" COMP;
	 image: "cs-08.png" COMP;
	 image: "cs-09.png" COMP;
	 image: "cs-10.png" COMP;
	 image: "cs-11.png" COMP;
	 image: "cs-12.png" COMP;
	 image: "cs-13.png" COMP;
	 image: "cs-14.png" COMP;
	 image: "cs-15.png" COMP;
	 image: "cs-16.png" COMP;
	 image: "cs-17.png" COMP;
	 image: "cs-18.png" COMP;
	 image: "cs-19.png" COMP;
	 image: "cs-20.png" COMP;
	 image: "cs-21.png" COMP;
	 image: "cs-22.png" COMP;
	 image: "cs-23.png" COMP;
	 image: "cs-24.png" COMP;
	 image: "cs-25.png" COMP;
	 image: "cs-26.png" COMP;
	 image: "cs-27.png" COMP;
	 image: "cs-28.png" COMP;
	 image: "cs-29.png" COMP;
	 image: "cs-30.png" COMP;
	 image: "cs-31.png" COMP;
	 image: "cs-32.png" COMP;
	 image: "cs-33.png" COMP;
	 image: "cs-34.png" COMP;
	 image: "cs-35.png" COMP;
	 image: "cs-36.png" COMP;
	 image: "cs-37.png" COMP;
	 image: "cs-38.png" COMP;
	 image: "cs-39.png" COMP;
	 image: "cs-40.png" COMP;
	 image: "cs-41.png" COMP;
	 image: "cs-42.png" COMP;
	 image: "cs-43.png" COMP;
	 image: "cs-44.png" COMP;
	 image: "cs-45.png" COMP;
	 image: "cs-46.png" COMP;
	 image: "cs-47.png" COMP;
	 image: "cs-48.png" COMP;
	 image: "cs-49.png" COMP;
	 image: "cs-50.png" COMP;
	 image: "cs-51.png" COMP;
	 image: "cs-52.png" COMP;
	 image: "cs-53.png" COMP;
	 image: "cs-54.png" COMP;
	 image: "cs-55.png" COMP;
	 image: "cs-56.png" COMP;
	 image: "cs-57.png" COMP;
	 image: "cs-58.png" COMP;
	 image: "cs-59.png" COMP;
#endif
      }
      min: 16 16;
      max:  128 128;
      script {
	 public clock_cb(val) {
	    new buf[11];
	    new year, month, day, yearday, weekday, hour, minute;
	    new Float:second;
	    new v;

	    date(year, month, day, yearday, weekday, hour, minute, second);
#ifdef CLOCK_SECONDS
	    v = round(second);
	    timer(1.0 - (second - v), "clock_cb", 1);
	    buf[0] = 0;
	    if (v < 10) {snprintf(buf, 10, "0%i", v);}
	    else        {snprintf(buf, 10, "%i", v);}
	    set_state(PART:"seconds", buf, 0.0);
#else
	    timer(60.0 - (second), "clock_cb", 1);
#endif
	    v = minute;
	    buf[0] = 0;
	    if (v < 10) {snprintf(buf, 10, "0%i", v);}
	    else        {snprintf(buf, 10, "%i", v);}
	    set_state(PART:"minutes", buf, 0.0);

	    v = ((hour % 12) * 5) + ((minute * 5) / 60);
	    buf[0] = 0;
	    if (v < 10) {snprintf(buf, 10, "0%i", v);}
	    else        {snprintf(buf, 10, "%i", v);}
	    set_state(PART:"hour", buf, 0.0);
	 }
      }
      parts {
	 part { name: "base";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "clock_base.png";
	    }
	 }
#ifdef CLOCK_SECONDS
	 part { name: "seconds";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base"; rel2.to: "base";
	       image.normal: "cs-00.png";
	    }
	    description { state: "00" 0.0; inherit: "default" 0.0; image.normal: "cs-00.png";}
	    description { state: "01" 0.0; inherit: "default" 0.0; image.normal: "cs-01.png";}
	    description { state: "02" 0.0; inherit: "default" 0.0; image.normal: "cs-02.png";}
	    description { state: "03" 0.0; inherit: "default" 0.0; image.normal: "cs-03.png";}
	    description { state: "04" 0.0; inherit: "default" 0.0; image.normal: "cs-04.png";}
	    description { state: "05" 0.0; inherit: "default" 0.0; image.normal: "cs-05.png";}
	    description { state: "06" 0.0; inherit: "default" 0.0; image.normal: "cs-06.png";}
	    description { state: "07" 0.0; inherit: "default" 0.0; image.normal: "cs-07.png";}
	    description { state: "08" 0.0; inherit: "default" 0.0; image.normal: "cs-08.png";}
	    description { state: "09" 0.0; inherit: "default" 0.0; image.normal: "cs-09.png";}
	    description { state: "10" 0.0; inherit: "default" 0.0; image.normal: "cs-10.png";}
	    description { state: "11" 0.0; inherit: "default" 0.0; image.normal: "cs-11.png";}
	    description { state: "12" 0.0; inherit: "default" 0.0; image.normal: "cs-12.png";}
	    description { state: "13" 0.0; inherit: "default" 0.0; image.normal: "cs-13.png";}
	    description { state: "14" 0.0; inherit: "default" 0.0; image.normal: "cs-14.png";}
	    description { state: "15" 0.0; inherit: "default" 0.0; image.normal: "cs-15.png";}
	    description { state: "16" 0.0; inherit: "default" 0.0; image.normal: "cs-16.png";}
	    description { state: "17" 0.0; inherit: "default" 0.0; image.normal: "cs-17.png";}
	    description { state: "18" 0.0; inherit: "default" 0.0; image.normal: "cs-18.png";}
	    description { state: "19" 0.0; inherit: "default" 0.0; image.normal: "cs-19.png";}
	    description { state: "20" 0.0; inherit: "default" 0.0; image.normal: "cs-20.png";}
	    description { state: "21" 0.0; inherit: "default" 0.0; image.normal: "cs-21.png";}
	    description { state: "22" 0.0; inherit: "default" 0.0; image.normal: "cs-22.png";}
	    description { state: "23" 0.0; inherit: "default" 0.0; image.normal: "cs-23.png";}
	    description { state: "24" 0.0; inherit: "default" 0.0; image.normal: "cs-24.png";}
	    description { state: "25" 0.0; inherit: "default" 0.0; image.normal: "cs-25.png";}
	    description { state: "26" 0.0; inherit: "default" 0.0; image.normal: "cs-26.png";}
	    description { state: "27" 0.0; inherit: "default" 0.0; image.normal: "cs-27.png";}
	    description { state: "28" 0.0; inherit: "default" 0.0; image.normal: "cs-28.png";}
	    description { state: "29" 0.0; inherit: "default" 0.0; image.normal: "cs-29.png";}
	    description { state: "30" 0.0; inherit: "default" 0.0; image.normal: "cs-30.png";}
	    description { state: "31" 0.0; inherit: "default" 0.0; image.normal: "cs-31.png";}
	    description { state: "32" 0.0; inherit: "default" 0.0; image.normal: "cs-32.png";}
	    description { state: "33" 0.0; inherit: "default" 0.0; image.normal: "cs-33.png";}
	    description { state: "34" 0.0; inherit: "default" 0.0; image.normal: "cs-34.png";}
	    description { state: "35" 0.0; inherit: "default" 0.0; image.normal: "cs-35.png";}
	    description { state: "36" 0.0; inherit: "default" 0.0; image.normal: "cs-36.png";}
	    description { state: "37" 0.0; inherit: "default" 0.0; image.normal: "cs-37.png";}
	    description { state: "38" 0.0; inherit: "default" 0.0; image.normal: "cs-38.png";}
	    description { state: "39" 0.0; inherit: "default" 0.0; image.normal: "cs-39.png";}
	    description { state: "40" 0.0; inherit: "default" 0.0; image.normal: "cs-40.png";}
	    description { state: "41" 0.0; inherit: "default" 0.0; image.normal: "cs-41.png";}
	    description { state: "42" 0.0; inherit: "default" 0.0; image.normal: "cs-42.png";}
	    description { state: "43" 0.0; inherit: "default" 0.0; image.normal: "cs-43.png";}
	    description { state: "44" 0.0; inherit: "default" 0.0; image.normal: "cs-44.png";}
	    description { state: "45" 0.0; inherit: "default" 0.0; image.normal: "cs-45.png";}
	    description { state: "46" 0.0; inherit: "default" 0.0; image.normal: "cs-46.png";}
	    description { state: "47" 0.0; inherit: "default" 0.0; image.normal: "cs-47.png";}
	    description { state: "48" 0.0; inherit: "default" 0.0; image.normal: "cs-48.png";}
	    description { state: "49" 0.0; inherit: "default" 0.0; image.normal: "cs-49.png";}
	    description { state: "50" 0.0; inherit: "default" 0.0; image.normal: "cs-50.png";}
	    description { state: "51" 0.0; inherit: "default" 0.0; image.normal: "cs-51.png";}
	    description { state: "52" 0.0; inherit: "default" 0.0; image.normal: "cs-52.png";}
	    description { state: "53" 0.0; inherit: "default" 0.0; image.normal: "cs-53.png";}
	    description { state: "54" 0.0; inherit: "default" 0.0; image.normal: "cs-54.png";}
	    description { state: "55" 0.0; inherit: "default" 0.0; image.normal: "cs-55.png";}
	    description { state: "56" 0.0; inherit: "default" 0.0; image.normal: "cs-56.png";}
	    description { state: "57" 0.0; inherit: "default" 0.0; image.normal: "cs-57.png";}
	    description { state: "58" 0.0; inherit: "default" 0.0; image.normal: "cs-58.png";}
	    description { state: "59" 0.0; inherit: "default" 0.0; image.normal: "cs-59.png";}
	 }
#endif
	 part { name: "minutes";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base"; rel2.to: "base";
	       image.normal: "ch-00.png";
	    }
	    description { state: "00" 0.0; inherit: "default" 0.0; image.normal: "ch-00.png";}
	    description { state: "01" 0.0; inherit: "default" 0.0; image.normal: "ch-01.png";}
	    description { state: "02" 0.0; inherit: "default" 0.0; image.normal: "ch-02.png";}
	    description { state: "03" 0.0; inherit: "default" 0.0; image.normal: "ch-03.png";}
	    description { state: "04" 0.0; inherit: "default" 0.0; image.normal: "ch-04.png";}
	    description { state: "05" 0.0; inherit: "default" 0.0; image.normal: "ch-05.png";}
	    description { state: "06" 0.0; inherit: "default" 0.0; image.normal: "ch-06.png";}
	    description { state: "07" 0.0; inherit: "default" 0.0; image.normal: "ch-07.png";}
	    description { state: "08" 0.0; inherit: "default" 0.0; image.normal: "ch-08.png";}
	    description { state: "09" 0.0; inherit: "default" 0.0; image.normal: "ch-09.png";}
	    description { state: "10" 0.0; inherit: "default" 0.0; image.normal: "ch-10.png";}
	    description { state: "11" 0.0; inherit: "default" 0.0; image.normal: "ch-11.png";}
	    description { state: "12" 0.0; inherit: "default" 0.0; image.normal: "ch-12.png";}
	    description { state: "13" 0.0; inherit: "default" 0.0; image.normal: "ch-13.png";}
	    description { state: "14" 0.0; inherit: "default" 0.0; image.normal: "ch-14.png";}
	    description { state: "15" 0.0; inherit: "default" 0.0; image.normal: "ch-15.png";}
	    description { state: "16" 0.0; inherit: "default" 0.0; image.normal: "ch-16.png";}
	    description { state: "17" 0.0; inherit: "default" 0.0; image.normal: "ch-17.png";}
	    description { state: "18" 0.0; inherit: "default" 0.0; image.normal: "ch-18.png";}
	    description { state: "19" 0.0; inherit: "default" 0.0; image.normal: "ch-19.png";}
	    description { state: "20" 0.0; inherit: "default" 0.0; image.normal: "ch-20.png";}
	    description { state: "21" 0.0; inherit: "default" 0.0; image.normal: "ch-21.png";}
	    description { state: "22" 0.0; inherit: "default" 0.0; image.normal: "ch-22.png";}
	    description { state: "23" 0.0; inherit: "default" 0.0; image.normal: "ch-23.png";}
	    description { state: "24" 0.0; inherit: "default" 0.0; image.normal: "ch-24.png";}
	    description { state: "25" 0.0; inherit: "default" 0.0; image.normal: "ch-25.png";}
	    description { state: "26" 0.0; inherit: "default" 0.0; image.normal: "ch-26.png";}
	    description { state: "27" 0.0; inherit: "default" 0.0; image.normal: "ch-27.png";}
	    description { state: "28" 0.0; inherit: "default" 0.0; image.normal: "ch-28.png";}
	    description { state: "29" 0.0; inherit: "default" 0.0; image.normal: "ch-29.png";}
	    description { state: "30" 0.0; inherit: "default" 0.0; image.normal: "ch-30.png";}
	    description { state: "31" 0.0; inherit: "default" 0.0; image.normal: "ch-31.png";}
	    description { state: "32" 0.0; inherit: "default" 0.0; image.normal: "ch-32.png";}
	    description { state: "33" 0.0; inherit: "default" 0.0; image.normal: "ch-33.png";}
	    description { state: "34" 0.0; inherit: "default" 0.0; image.normal: "ch-34.png";}
	    description { state: "35" 0.0; inherit: "default" 0.0; image.normal: "ch-35.png";}
	    description { state: "36" 0.0; inherit: "default" 0.0; image.normal: "ch-36.png";}
	    description { state: "37" 0.0; inherit: "default" 0.0; image.normal: "ch-37.png";}
	    description { state: "38" 0.0; inherit: "default" 0.0; image.normal: "ch-38.png";}
	    description { state: "39" 0.0; inherit: "default" 0.0; image.normal: "ch-39.png";}
	    description { state: "40" 0.0; inherit: "default" 0.0; image.normal: "ch-40.png";}
	    description { state: "41" 0.0; inherit: "default" 0.0; image.normal: "ch-41.png";}
	    description { state: "42" 0.0; inherit: "default" 0.0; image.normal: "ch-42.png";}
	    description { state: "43" 0.0; inherit: "default" 0.0; image.normal: "ch-43.png";}
	    description { state: "44" 0.0; inherit: "default" 0.0; image.normal: "ch-44.png";}
	    description { state: "45" 0.0; inherit: "default" 0.0; image.normal: "ch-45.png";}
	    description { state: "46" 0.0; inherit: "default" 0.0; image.normal: "ch-46.png";}
	    description { state: "47" 0.0; inherit: "default" 0.0; image.normal: "ch-47.png";}
	    description { state: "48" 0.0; inherit: "default" 0.0; image.normal: "ch-48.png";}
	    description { state: "49" 0.0; inherit: "default" 0.0; image.normal: "ch-49.png";}
	    description { state: "50" 0.0; inherit: "default" 0.0; image.normal: "ch-50.png";}
	    description { state: "51" 0.0; inherit: "default" 0.0; image.normal: "ch-51.png";}
	    description { state: "52" 0.0; inherit: "default" 0.0; image.normal: "ch-52.png";}
	    description { state: "53" 0.0; inherit: "default" 0.0; image.normal: "ch-53.png";}
	    description { state: "54" 0.0; inherit: "default" 0.0; image.normal: "ch-54.png";}
	    description { state: "55" 0.0; inherit: "default" 0.0; image.normal: "ch-55.png";}
	    description { state: "56" 0.0; inherit: "default" 0.0; image.normal: "ch-56.png";}
	    description { state: "57" 0.0; inherit: "default" 0.0; image.normal: "ch-57.png";}
	    description { state: "58" 0.0; inherit: "default" 0.0; image.normal: "ch-58.png";}
	    description { state: "59" 0.0; inherit: "default" 0.0; image.normal: "ch-59.png";}
	 }
	 part { name: "hour";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base"; rel2.to: "base";
	       image.normal: "cm-00.png";
	    }
	    description { state: "00" 0.0; inherit: "default" 0.0; image.normal: "cm-00.png";}
	    description { state: "01" 0.0; inherit: "default" 0.0; image.normal: "cm-01.png";}
	    description { state: "02" 0.0; inherit: "default" 0.0; image.normal: "cm-02.png";}
	    description { state: "03" 0.0; inherit: "default" 0.0; image.normal: "cm-03.png";}
	    description { state: "04" 0.0; inherit: "default" 0.0; image.normal: "cm-04.png";}
	    description { state: "05" 0.0; inherit: "default" 0.0; image.normal: "cm-05.png";}
	    description { state: "06" 0.0; inherit: "default" 0.0; image.normal: "cm-06.png";}
	    description { state: "07" 0.0; inherit: "default" 0.0; image.normal: "cm-07.png";}
	    description { state: "08" 0.0; inherit: "default" 0.0; image.normal: "cm-08.png";}
	    description { state: "09" 0.0; inherit: "default" 0.0; image.normal: "cm-09.png";}
	    description { state: "10" 0.0; inherit: "default" 0.0; image.normal: "cm-10.png";}
	    description { state: "11" 0.0; inherit: "default" 0.0; image.normal: "cm-11.png";}
	    description { state: "12" 0.0; inherit: "default" 0.0; image.normal: "cm-12.png";}
	    description { state: "13" 0.0; inherit: "default" 0.0; image.normal: "cm-13.png";}
	    description { state: "14" 0.0; inherit: "default" 0.0; image.normal: "cm-14.png";}
	    description { state: "15" 0.0; inherit: "default" 0.0; image.normal: "cm-15.png";}
	    description { state: "16" 0.0; inherit: "default" 0.0; image.normal: "cm-16.png";}
	    description { state: "17" 0.0; inherit: "default" 0.0; image.normal: "cm-17.png";}
	    description { state: "18" 0.0; inherit: "default" 0.0; image.normal: "cm-18.png";}
	    description { state: "19" 0.0; inherit: "default" 0.0; image.normal: "cm-19.png";}
	    description { state: "20" 0.0; inherit: "default" 0.0; image.normal: "cm-20.png";}
	    description { state: "21" 0.0; inherit: "default" 0.0; image.normal: "cm-21.png";}
	    description { state: "22" 0.0; inherit: "default" 0.0; image.normal: "cm-22.png";}
	    description { state: "23" 0.0; inherit: "default" 0.0; image.normal: "cm-23.png";}
	    description { state: "24" 0.0; inherit: "default" 0.0; image.normal: "cm-24.png";}
	    description { state: "25" 0.0; inherit: "default" 0.0; image.normal: "cm-25.png";}
	    description { state: "26" 0.0; inherit: "default" 0.0; image.normal: "cm-26.png";}
	    description { state: "27" 0.0; inherit: "default" 0.0; image.normal: "cm-27.png";}
	    description { state: "28" 0.0; inherit: "default" 0.0; image.normal: "cm-28.png";}
	    description { state: "29" 0.0; inherit: "default" 0.0; image.normal: "cm-29.png";}
	    description { state: "30" 0.0; inherit: "default" 0.0; image.normal: "cm-30.png";}
	    description { state: "31" 0.0; inherit: "default" 0.0; image.normal: "cm-31.png";}
	    description { state: "32" 0.0; inherit: "default" 0.0; image.normal: "cm-32.png";}
	    description { state: "33" 0.0; inherit: "default" 0.0; image.normal: "cm-33.png";}
	    description { state: "34" 0.0; inherit: "default" 0.0; image.normal: "cm-34.png";}
	    description { state: "35" 0.0; inherit: "default" 0.0; image.normal: "cm-35.png";}
	    description { state: "36" 0.0; inherit: "default" 0.0; image.normal: "cm-36.png";}
	    description { state: "37" 0.0; inherit: "default" 0.0; image.normal: "cm-37.png";}
	    description { state: "38" 0.0; inherit: "default" 0.0; image.normal: "cm-38.png";}
	    description { state: "39" 0.0; inherit: "default" 0.0; image.normal: "cm-39.png";}
	    description { state: "40" 0.0; inherit: "default" 0.0; image.normal: "cm-40.png";}
	    description { state: "41" 0.0; inherit: "default" 0.0; image.normal: "cm-41.png";}
	    description { state: "42" 0.0; inherit: "default" 0.0; image.normal: "cm-42.png";}
	    description { state: "43" 0.0; inherit: "default" 0.0; image.normal: "cm-43.png";}
	    description { state: "44" 0.0; inherit: "default" 0.0; image.normal: "cm-44.png";}
	    description { state: "45" 0.0; inherit: "default" 0.0; image.normal: "cm-45.png";}
	    description { state: "46" 0.0; inherit: "default" 0.0; image.normal: "cm-46.png";}
	    description { state: "47" 0.0; inherit: "default" 0.0; image.normal: "cm-47.png";}
	    description { state: "48" 0.0; inherit: "default" 0.0; image.normal: "cm-48.png";}
	    description { state: "49" 0.0; inherit: "default" 0.0; image.normal: "cm-49.png";}
	    description { state: "50" 0.0; inherit: "default" 0.0; image.normal: "cm-50.png";}
	    description { state: "51" 0.0; inherit: "default" 0.0; image.normal: "cm-51.png";}
	    description { state: "52" 0.0; inherit: "default" 0.0; image.normal: "cm-52.png";}
	    description { state: "53" 0.0; inherit: "default" 0.0; image.normal: "cm-53.png";}
	    description { state: "54" 0.0; inherit: "default" 0.0; image.normal: "cm-54.png";}
	    description { state: "55" 0.0; inherit: "default" 0.0; image.normal: "cm-55.png";}
	    description { state: "56" 0.0; inherit: "default" 0.0; image.normal: "cm-56.png";}
	    description { state: "57" 0.0; inherit: "default" 0.0; image.normal: "cm-57.png";}
	    description { state: "58" 0.0; inherit: "default" 0.0; image.normal: "cm-58.png";}
	    description { state: "59" 0.0; inherit: "default" 0.0; image.normal: "cm-59.png";}
	 }
	 part { name: "over";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base"; rel2.to: "base";
	       image.normal: "tacho_fg.png";
	    }
	 }
      }
      programs {
         program { name: "init";
	    signal: "load";
	    source: "";
	    script {
	       clock_cb(0);
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: CPUFREQ ***/
   group { name: "e/modules/cpufreq/main";
      images {
	 image: "tacho_bg.png" COMP;
	 image: "tacho_fg.png" COMP;
	 image: "tacho_dial_00.png" COMP;
	 image: "tacho_dial_01.png" COMP;
	 image: "tacho_dial_02.png" COMP;
	 image: "tacho_dial_03.png" COMP;
	 image: "tacho_dial_04.png" COMP;
	 image: "tacho_dial_05.png" COMP;
	 image: "tacho_dial_06.png" COMP;
	 image: "tacho_dial_07.png" COMP;
	 image: "tacho_dial_08.png" COMP;
	 image: "tacho_dial_09.png" COMP;
	 image: "tacho_dial_10.png" COMP;
	 image: "tacho_dial_11.png" COMP;
	 image: "tacho_dial_12.png" COMP;
	 image: "tacho_dial_13.png" COMP;
	 image: "tacho_dial_14.png" COMP;
	 image: "tacho_dial_15.png" COMP;
      }
      min: 16 16;
      max:  128 128;
      script {
	 public available_frequencies;
	 public available_governors;

       public message(Msg_Type:type, id, ...) {
	  if ((type == MSG_INT_SET) && (id == 1)) {
	     while (count(available_frequencies) > 0) {
		remove(available_frequencies, 0);
	     }
	     for (new i = 2; i < numargs(); i++) {
		append_int(available_frequencies, getarg(i));
	     }
	  } else if ((type == MSG_STRING_SET) && (id == 2)) {
	     new text[100];

	     while (count(available_governors) > 0) {
		remove(available_governors, 0);
	     }

	     for (new i = 2; i < numargs(); i++) {
		snprintf(text, 100, "%s", getarg(i));
		append_str(available_governors, text);
	     }
	  } else if ((type == MSG_INT_SET) && (id == 3)) {
	     new f = getarg(2);
	     new use_buttons = getarg(3);
	     new Float:freq, Float:min_freq, Float:max_freq;
	     new text[100];

	     freq = f;
	     min_freq = fetch_int(available_frequencies, 0);
	     max_freq = fetch_int(available_frequencies,
				  count(available_frequencies) - 1);

	     freq = (freq - min_freq) / (max_freq - min_freq);
	     set_state(PART:"meter", "default", freq);

	     if (f < 1000000) {
		snprintf(text, 100, "%i", f / 1000);
	     } else {
		snprintf(text, 100, "%i.%i", f / 1000000,
			 (f % 1000000) / 100000);
	     }
	     set_text(PART:"readout", text);

	     if (use_buttons == 0) {
//		set_state(PART:"increase_button", "inactive", 0.0);
//		set_state(PART:"decrease_button", "inactive", 0.0);
//		set_state(PART:"increase", "inactive", 0.0);
//		set_state(PART:"decrease", "inactive", 0.0);
	     } else {
//		set_state(PART:"increase_button", "default", 0.0);
//		set_state(PART:"decrease_button", "default", 0.0);
//		set_state(PART:"increase", "default", 0.0);
//		set_state(PART:"decrease", "default", 0.0);
	     }
	  } else if((type == MSG_STRING) && (id == 4)) {
	     new text[100];
	     snprintf(text, 100, "%s", getarg(2));
	  }
       }
      }
      parts {
	 part { name: "fade_clip";
	    type: RECT;
	    mouse_events:   0;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description { state: "faded" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "base";
	    clip_to: "fade_clip";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image.normal: "tacho_bg.png";
	    }
	 }
	 part {
	    name: "readout";
	    type: TEXT;
	    scale: 1;
//	    effect: OUTLINE_SOFT_SHADOW;
	    mouse_events: 0;
	    clip_to: "fade_clip";
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0.6 0.7;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 0.6 0.7;
		  offset: 0 0;
	       }
	       color: 255 255 255 255;
	       color2: 0 0 0 128;
	       color3: 0 0 0 32;
	       color_class: "module_label";
	       text {
		  text: "??? Ghz";
		  font: "Sans:style=Bold";
		  size: 6;
		  align: 0.5 0.5;
		  min: 1 1;
		  text_class: "module_small";
	       }
	    }
	 }
	 part { name: "meter";
	    clip_to: "fade_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0000; image.normal: "tacho_dial_00.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.0666; image.normal: "tacho_dial_01.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.1333; image.normal: "tacho_dial_02.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.2000; image.normal: "tacho_dial_03.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.2666; image.normal: "tacho_dial_04.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.3333; image.normal: "tacho_dial_05.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.4000; image.normal: "tacho_dial_06.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.4666; image.normal: "tacho_dial_07.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.5333; image.normal: "tacho_dial_08.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.6000; image.normal: "tacho_dial_09.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.6666; image.normal: "tacho_dial_10.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.7333; image.normal: "tacho_dial_11.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.8000; image.normal: "tacho_dial_12.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.8666; image.normal: "tacho_dial_13.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 0.9333; image.normal: "tacho_dial_14.png"; rel1.to: "base"; rel2.to: "base"; }
	    description { state: "default" 1.0000; image.normal: "tacho_dial_15.png"; rel1.to: "base"; rel2.to: "base"; }
	 }
	 part { name: "over";
	    clip_to: "fade_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "base";
	       rel2.to: "base";
	       image.normal: "tacho_fg.png";
	    }
	 }
      }
      programs {
/*
	 program {
	    name: "next_governor";
	    signal: "mouse,down,1";
	    source: "cpu";
	    action: SIGNAL_EMIT "e,action,governor,next" "";
	 }
	 program {
	    name: "next_governor2";
	    signal: "mouse,down,1";
	    source: "cpu";
	    action: STATE_SET "clicked" 0.0;
	    target: "cpu";
	 }
	 program {
	    name: "next_governor3";
	    signal: "mouse,up,1";
	    source: "cpu";
	    action: STATE_SET "default" 0.0;
	    target: "cpu";
	 }
	 program {
	    name: "increase_frequency";
	    signal: "mouse,down,1";
	    source: "increase";
	    action: SIGNAL_EMIT "e,action,frequency,increase" "";
	 }
	 program {
	    name: "increase_frequency2";
	    signal: "mouse,down,1";
	    source: "increase";
	    action: STATE_SET "clicked" 0.0;
	    target: "increase_button";
	 }
	 program {
	    name: "increase_frequency3";
	    signal: "mouse,up,1";
	    source: "increase";
	    action: STATE_SET "default" 0.0;
	    target: "increase_button";
	 }
	 program {
	    name: "decrease_frequency";
	    signal: "mouse,down,1";
	    source: "decrease";
	    action: SIGNAL_EMIT "e,action,frequency,decrease" "";
	 }
	 program {
	    name: "decrease_frequency2";
	    signal: "mouse,down,1";
	    source: "decrease";
	    action: STATE_SET "clicked" 0.0;
	    target: "decrease_button";
	 }
	 program {
	    name: "decrease_frequency3";
	    signal: "mouse,up,1";
	    source: "decrease";
	    action: STATE_SET "default" 0.0;
	    target: "decrease_button";
	 }
 */
	 program {
	    name: "enabled";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "fade_clip";
	 }
	 program {
	    name: "disabled";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "faded" 0.0;
	    target: "fade_clip";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: IBOX / IBAR ***/

   group { name: "e/modules/ibox/icon";
      alias: "e/modules/ibar/icon";
      data {
	 // FIXME: Explain these a little better
	 item: "raise_on_hilight" "0"; // 1 or 0 if u want an icon holder to raise when the mouse (or keyboard) hilights it
	 //	 item: "item_list" "item item2 item3";
      }
      parts {
	 part { name: "item_clip";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "item_clip";
	    description { state: "default" 0.0;
	       rel1.offset:   2   2;
	       rel2.offset:   -3   -3;
	    }
	    description { state: "bigger" 0.0; }
	 }
         part { name: "urgent_area";
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "uw0" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -3 -2;
	       rel2.offset: -4 -3;
	    }
	    description { state: "uw1" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 5 -2;
	       rel2.offset: 4 -3;
	    }
	    description { state: "uw2" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 4;
	       rel2.offset: -2 3;
	    }
	    description { state: "uw3" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -2 -1;
	       rel2.offset: -3 -2;
	    }
	    description { state: "uw4" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -4 1;
	       rel2.offset: -5 0;
	    }
	 }
	 part { name: "urgent";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "urgent_area";
	       rel2.to: "urgent_area";
	       image.normal: "exclam.png";
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel1 {
		  relative: -0.5  -0.5;
	       }
	       rel2 {
		  relative: 1.5  1.5;
	       }
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "over";
	    type: RECT;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program { name: "hover_in";
	    signal:  "mouse,in";
	    source:  "over";
	    action:  STATE_SET "bigger" 0.0;
	    transition: LINEAR 0.1;
	    target:  "e.swallow.content";
	 }
	 program { name: "hover_out";
	    signal:  "mouse,out";
	    source:  "over";
	    action:  STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target:  "e.swallow.content";
	 }
	 program { name: "set_urgent";
	    signal: "e,state,urgent";
	    source: "e";
	    action:  STATE_SET "visible" 0.0;
	    transition: LINEAR 0.2;
	    target: "urgent";
	 }
	 program { name: "set_not_urgent";
	    signal: "e,state,not_urgent";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    transition: LINEAR 0.6;
	    target: "urgent";
	 }
        program {
	   name:    "urgentw0";
	   signal:  "e,state,urgent";
	   source:  "e";
	   action: STATE_SET "default" 0.0;
	   target: "urgent_area";
	   transition: DECELERATE 0.1;
	   after: "urgentw1";
	}
	 program {
	    name:    "urgentw1";
	    action: STATE_SET "uw1" 0.0;
	    target: "urgent_area";
	    transition: DECELERATE 0.1;
	    after: "urgentw2";
	 }
	 program {
	    name:    "urgentw2";
	    action: STATE_SET "uw2" 0.0;
	    target: "urgent_area";
	    transition: DECELERATE 0.1;
	    after: "urgentw3";
	 }
	 program {
	    name:    "urgentw3";
	    action: STATE_SET "uw3" 0.0;
	    target: "urgent_area";
	    transition: DECELERATE 0.1;
	    after: "urgentw4";
	 }
	 program {
	    name:    "urgentw4";
	    action: STATE_SET "uw4" 0.0;
	    target: "urgent_area";
	    transition: DECELERATE 0.1;
	    after: "urgentw0";
	 }
         program {
	    name:    "not_urgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
	    action: ACTION_STOP;
	    target: "urgentw0";
	    target: "urgentw1";
	    target: "urgentw2";
	    target: "urgentw3";
	    target: "urgentw4";
	    after: "not_urgent2";
	 }
	 program {
	    name:    "not_urgent2";
	    action: STATE_SET "default" 0.0;
	    target: "urgent";
	    target: "urgent_area";
	 }
      }
   }

// FIXME: Use urgent effect from Pager.
// FIXME: Something fishy is going on here. When Urgent is set, the icon_overlay vanishes. Happens in bling too.

   group { name: "e/modules/ibox/icon_overlay";
      alias: "e/modules/ibar/icon_overlay";
      data {
	 //	 item: "item_list", "item item2 item3";
      }
      script {
	 public urgent;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "background";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "base";
	       rel2.to: "base";
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       visible: 1;
	       rel1.to: "base";
	       rel2.to: "base";
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       visible: 1;
	       rel1 {
		  relative: -0.5  -0.5;
		  to: "base";
	       }
	       rel2 {
		  relative: 1.5  1.5;
		  to: "base";
	       }
	       color: 255 255 255 0;
	    }
	    description { state: "huge" 0.0;
	       visible: 1;
	       rel1 {
		  relative: -2.0  -2.0;
		  to: "base";
	       }
	       rel2 {
		  relative: 3.0  3.0;
		  to: "base";
	       }
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "background";
	    description { state: "default" 0.0;
	       rel1.to: "background";
	       rel2.to: "background";
	    }
	 }
	 part { name: "urgent";
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to: "base";
	       rel2.to: "base";
	       image.normal: "exclam.png";
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       rel1 {
		  relative: -0.5  -0.5;
		  to: "base";
	       }
	       rel2 {
		  relative: 1.5  1.5;
		  to: "base";
	       }
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0    -1;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -1    -1;
	       }
	       color: 255 255 255 0;
	       color3: 0 0 0 0;
	       color_class: "module_label";
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min:  1 1;
		  align: 0.5 0.5;
		  text_class: "module_normal";
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -1    -1;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 42;
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,focused";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "background";
	    after:   "go_active2";
	 }
	 program { name: "go_activeB";
	    signal:  "e,action,show,label";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    transition: SINUSOIDAL 0.5;
	    target:  "e.text.label";
	 }
	 program { name: "go_active2";
	    action:  STATE_SET "hidden" 0.0;
	    transition: LINEAR 0.5;
	    target:  "background";
	    after:   "go_active";
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unfocused";
	    source:  "e";
	    action:  ACTION_STOP;
	    target:  "go_active";
	    target:  "go_active2";
	    after:   "go_passive2";
	 }
	 program { name: "go_passiveB";
	    signal:  "e,action,hide,label";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target:  "e.text.label";
	 }
	 program { name: "go_passive2";
	    action:  STATE_SET "default" 0.0;
	    target:  "background";
	    script {
		if (get_int(urgent) == 1) {
		    run_program(PROGRAM:"go_urgent");
		}
	    }
	 }
	 program { name: "init";
	    signal: "load";
	    source: "";
	    script {
	       set_int(urgent, 0);
	    }
	 }
	 program { name: "set_urgent";
	    signal: "e,state,urgent";
	    source: "e";
	    script {
	       set_int(urgent, 1);
	    }
	 }
	 program { name: "go_urgent";
	    action:  STATE_SET "visible" 0.0;
	    target:  "background";
	    target:  "urgent";
	    after:   "go_urgent2";
	 }
	 program { name: "go_urgent2";
	    action:  STATE_SET "hidden" 0.0;
	    transition: LINEAR 0.5;
	    target:  "background";
	    target:  "urgent";
	    after:   "go_urgent";
	 }
	 program { name: "unset_urgent";
	    signal: "e,state,not_urgent";
	    source: "e";
	    script {
	       set_int(urgent, 0);
	    }
	 }
	 program { name: "go_unurgent";
	    signal:  "e,state,not_urgent";
	    source:  "e";
	    action:  ACTION_STOP;
	    target:  "go_urgent";
	    target:  "go_urgent2";
	    after:   "go_unurgent2";
	 }
	 program { name: "go_unurgent2";
	    action:  STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.3;
	    target:  "background";
	    target:  "urgent";
	 }
	 program { name: "exec_exec";
	    signal:  "e,action,exec";
	    source:  "e";
	    after:   "exec_start";
	 }
	 program { name: "exec_start";
	    signal:  "e,action,start";
	    source:  "e";
	    action:  ACTION_STOP;
	    target:  "go_active";
	    target:  "go_active2";
	    target:  "go_passive";
	    target:  "go_passive2";
	    target:  "go_big";
	    target:  "go_big2";
	    after:   "go_big";
	 }
	 program { name: "go_big";
	    action:  STATE_SET "visible" 0.0;
	    target:  "background";
	    after:   "go_big2";
	 }
	 program { name: "go_big2";
	    action:  STATE_SET "huge" 0.0;
	    transition: LINEAR 0.5;
	    target:  "background";
	 }
      }
   }

   group { name: "e/modules/ibox/drop";
      alias: "e/modules/ibar/drop";
      images.image: "inset_raised.png" COMP;
      parts {
	 part { name: "bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "inset_raised.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	    }
	 }
      }
   }

   group { name: "e/modules/ibox/drop_overlay";
      alias: "e/modules/ibar/drop_overlay";
      images {
	 image: "gadman_top.png" COMP;
	 image: "gadman_bottom.png" COMP;
	 image: "gadman_left.png" COMP;
	 image: "gadman_right.png" COMP;
      }
      parts {
	 part { name: "left_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1.relative: -1.0 0.5;
	       rel2.relative: -1.0 0.5;
	       image.normal: "gadman_right.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -0.8 0.2;
	       rel2.relative: -0.7 0.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 0.5;
	       rel2.relative: 0.2 0.5;
	    }
	 }
	 part { name: "left_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1.relative: -1.0 0.5;
	       rel2.relative: -1.0 0.5;
	       image.normal: "gadman_right.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: -0.8 0.2;
	       rel2.relative: -0.7 0.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 0.5;
	       rel2.relative: 0.2 0.5;
	    }
	 }
	 part { name: "right_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1.relative: 2.0 0.5;
	       rel2.relative: 2.0 0.5;
	       image.normal: "gadman_left.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 1.8 0.2;
	       rel2.relative: 1.7 0.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.8 0.5;
	       rel2.relative: 0.8 0.5;
	    }
	 }
	 part { name: "right_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1.relative: 2.0 0.5;
	       rel2.relative: 2.0 0.5;
	       image.normal: "gadman_left.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 1.8 0.2;
	       rel2.relative: 1.7 0.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.8 0.5;
	       rel2.relative: 0.8 0.5;
	    }
	 }
	 part { name: "top_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       rel1.relative: 0.5 -1.0;
	       rel2.relative: 0.5 -1.0;
	       image.normal: "gadman_bottom.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 -0.8;
	       rel2.relative: 0.8 -0.7;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.5 0.2;
	       rel2.relative: 0.5 0.2;
	    }
	 }
	 part { name: "top_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       rel1.relative: 0.5 -1.0;
	       rel2.relative: 0.5 -1.0;
	       image.normal: "gadman_bottom.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 -0.8;
	       rel2.relative: 0.8 -0.7;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.5 0.2;
	       rel2.relative: 0.5 0.2;
	    }
	 }
	 part { name: "bottom_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       rel1.relative: 0.5 2.0;
	       rel2.relative: 0.5 2.0;
	       image.normal: "gadman_top.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 1.7;
	       rel2.relative: 0.8 1.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.5 0.8;
	       rel2.relative: 0.5 0.8;
	    }
	 }
	 part { name: "bottom_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       rel1.relative: 0.5 2.0;
	       rel2.relative: 0.5 2.0;
	       image.normal: "gadman_top.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.2 1.7;
	       rel2.relative: 0.8 1.8;
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.5 0.8;
	       rel2.relative: 0.5 0.8;
	    }
	 }
      }
      programs {
	 program { name: "start1";
	    signal: "show";
	    source: "";
	    after: "left1_1";
	    after: "right1_1";
	    after: "top1_1";
	    after: "bottom1_1";
	 }
	 program { name: "start2";
	    signal: "show";
	    source: "";
	    in: 0.4 0.0;
	    after: "left2_1";
	    after: "right2_1";
	    after: "top2_1";
	    after: "bottom2_1";
	 }

      // LEFT ARROW
	 program { name: "left1_1";
	    action: STATE_SET "1" 0.0;
	    target: "left_arrow1";
	    transition: LINEAR 0.4;
	    after: "left1_2";
	 }
	 program { name: "left1_2";
	    action: STATE_SET "2" 0.0;
	    target: "left_arrow1";
	    transition: LINEAR 0.4;
	    after: "left1_r";
	 }
	 program { name: "left1_r";
	    action: STATE_SET "default" 0.0;
	    target: "left_arrow1";
	    after: "left1_1";
	 }
	 program { name: "left2_1";
	    action: STATE_SET "1" 0.0;
	    target: "left_arrow2";
	    transition: LINEAR 0.4;
	    after: "left2_2";
	 }
	 program { name: "left2_2";
	    action: STATE_SET "2" 0.0;
	    target: "left_arrow2";
	    transition: LINEAR 0.4;
	    after: "left2_r";
	 }
	 program { name: "left2_r";
	    action: STATE_SET "default" 0.0;
	    target: "left_arrow2";
	    after: "left2_1";
	 }

      // RIGHT ARROW
	 program { name: "right1_1";
	    action: STATE_SET "1" 0.0;
	    target: "right_arrow1";
	    transition: LINEAR 0.4;
	    after: "right1_2";
	 }
	 program { name: "right1_2";
	    action: STATE_SET "2" 0.0;
	    target: "right_arrow1";
	    transition: LINEAR 0.4;
	    after: "right1_r";
	 }
	 program { name: "right1_r";
	    action: STATE_SET "default" 0.0;
	    target: "right_arrow1";
	    after: "right1_1";
	 }
	 program { name: "right2_1";
	    action: STATE_SET "1" 0.0;
	    target: "right_arrow2";
	    transition: LINEAR 0.4;
	    after: "right2_2";
	 }
	 program { name: "right2_2";
	    action: STATE_SET "2" 0.0;
	    target: "right_arrow2";
	    transition: LINEAR 0.4;
	    after: "right2_r";
	 }
	 program { name: "right2_r";
	    action: STATE_SET "default" 0.0;
	    target: "right_arrow2";
	    after: "right2_1";
	 }

      // TOP ARROW
	 program { name: "top1_1";
	    action: STATE_SET "1" 0.0;
	    target: "top_arrow1";
	    transition: LINEAR 0.4;
	    after: "top1_2";
	 }
	 program { name: "top1_2";
	    action: STATE_SET "2" 0.0;
	    target: "top_arrow1";
	    transition: LINEAR 0.4;
	    after: "top1_r";
	 }
	 program { name: "top1_r";
	    action: STATE_SET "default" 0.0;
	    target: "top_arrow1";
	    after: "top1_1";
	 }
	 program { name: "top2_1";
	    action: STATE_SET "1" 0.0;
	    target: "top_arrow2";
	    transition: LINEAR 0.4;
	    after: "top2_2";
	 }
	 program { name: "top2_2";
	    action: STATE_SET "2" 0.0;
	    target: "top_arrow2";
	    transition: LINEAR 0.4;
	    after: "top2_r";
	 }
	 program { name: "top2_r";
	    action: STATE_SET "default" 0.0;
	    target: "top_arrow2";
	    after: "top2_1";
	 }

      // BOTTOM ARROW
	 program { name: "bottom1_1";
	    action: STATE_SET "1" 0.0;
	    target: "bottom_arrow1";
	    transition: LINEAR 0.4;
	    after: "bottom1_2";
	 }
	 program { name: "bottom1_2";
	    action: STATE_SET "2" 0.0;
	    target: "bottom_arrow1";
	    transition: LINEAR 0.4;
	    after: "bottom1_r";
	 }
	 program { name: "bottom1_r";
	    action: STATE_SET "default" 0.0;
	    target: "bottom_arrow1";
	    after: "bottom1_1";
	 }
	 program { name: "bottom2_1";
	    action: STATE_SET "1" 0.0;
	    target: "bottom_arrow2";
	    transition: LINEAR 0.4;
	    after: "bottom2_2";
	 }
	 program { name: "bottom2_2";
	    action: STATE_SET "2" 0.0;
	    target: "bottom_arrow2";
	    transition: LINEAR 0.4;
	    after: "bottom2_r";
	 }
	 program { name: "bottom2_r";
	    action: STATE_SET "default" 0.0;
	    target: "bottom_arrow2";
	    after: "bottom2_1";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: SYSTRAY ***/
   group { name: "e/modules/systray/main";
      alias: "e/modules/systray/main/default";
      alias: "e/modules/systray/main/invisible";
      data {
         item: "inset" "255 255 255";
         item: "plain" "230 230 230";
         item: "default" "255 255 255";
      }
      parts {
         part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 128;
            }
         }
         part { name: "e.size";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
            }
         }
         part { name: "e.box";
            type: BOX;
            description { state: "default" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "horizontal";
                  padding: 2 0;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
            description { state: "vertical" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "vertical";
                  padding: 0 2;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
         }
         programs {
            program { name: "e,action,disable";
               signal: "e,action,disable";
               source: "e";
               action: STATE_SET "disabled" 0.0;
               target: "base";
            }
            program { name: "e,action,enable";
               signal: "e,action,enable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "base";
            }
            program { name: "e,action,orient,float";
               signal: "e,action,orient,float";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,horiz";
               signal: "e,action,orient,horiz";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,vert";
               signal: "e,action,orient,vert";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,left";
               signal: "e,action,orient,left";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,right";
               signal: "e,action,orient,right";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,top";
               signal: "e,action,orient,top";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,bottom";
               signal: "e,action,orient,bottom";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tl";
               signal: "e,action,orient,corner_tl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tr";
               signal: "e,action,orient,corner_tr";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_bl";
               signal: "e,action,orient,corner_bl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_br";
               signal: "e,action,orient,corner_br";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lt";
               signal: "e,action,orient,corner_lt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rt";
               signal: "e,action,orient,corner_rt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lb";
               signal: "e,action,orient,corner_lb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rb";
               signal: "e,action,orient,corner_rb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
         }
      }
   }

   group { name: "e/modules/systray/main/alternate";
      data {
         item: "inset" "255 255 255";
         item: "plain" "255 255 255";
         item: "default" "255 255 255";
      }
      images.image: "systray_rounded_corners.png" COMP;
      parts {
         part { name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "rounded_corners";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -3 -3;
                  to: "e.size";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 2 2;
                  to: "e.size";
               }
               image {
                  normal: "systray_rounded_corners.png";
                  border: 3 3 3 3;
                  middle: SOLID;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 128;
            }
         }
         part { name: "e.size";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
            }
         }
         part { name: "e.box";
            type: BOX;
            description {
               state: "default" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "horizontal";
                  padding: 2 0;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
            description { state: "vertical" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "vertical";
                  padding: 0 2;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
         }
         programs {
            program { name: "e,action,disable";
               signal: "e,action,disable";
               source: "e";
               action: STATE_SET "disabled" 0.0;
               target: "rounded_corners";
            }
            program { name: "e,action,enable";
               signal: "e,action,enable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "rounded_corners";
            }
            program { name: "e,action,orient,float";
               signal: "e,action,orient,float";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,horiz";
               signal: "e,action,orient,horiz";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,vert";
               signal: "e,action,orient,vert";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,left";
               signal: "e,action,orient,left";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,right";
               signal: "e,action,orient,right";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,top";
               signal: "e,action,orient,top";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,bottom";
               signal: "e,action,orient,bottom";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tl";
               signal: "e,action,orient,corner_tl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tr";
               signal: "e,action,orient,corner_tr";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_bl";
               signal: "e,action,orient,corner_bl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_br";
               signal: "e,action,orient,corner_br";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lt";
               signal: "e,action,orient,corner_lt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rt";
               signal: "e,action,orient,corner_rt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lb";
               signal: "e,action,orient,corner_lb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rb";
               signal: "e,action,orient,corner_rb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
         }
      }
   }

   group { name: "e/modules/systray/main/alternate/inset";
      data {
         item: "inset" "255 255 255";
         item: "plain" "255 255 255";
         item: "default" "255 255 255";
      }
      parts {
         part { name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 128;
            }
         }
         part { name: "e.size";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
            }
         }
         part { name: "e.box";
            type: BOX;
            description {
               state: "default" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "horizontal";
                  padding: 2 0;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
            description { state: "vertical" 0.0;
               rel1.to: "e.size";
               rel2.to: "e.size";
               box {
                  layout: "vertical";
                  padding: 0 2;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
         }
         programs {
            program { name: "e,action,disable";
               signal: "e,action,disable";
               source: "e";
               action: STATE_SET "disabled" 0.0;
               target: "base";
            }
            program { name: "e,action,enable";
               signal: "e,action,enable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "base";
            }
            program { name: "e,action,orient,float";
               signal: "e,action,orient,float";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,horiz";
               signal: "e,action,orient,horiz";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,vert";
               signal: "e,action,orient,vert";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,left";
               signal: "e,action,orient,left";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,right";
               signal: "e,action,orient,right";
               source: "e";
               action: STATE_SET "vertical" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,top";
               signal: "e,action,orient,top";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,bottom";
               signal: "e,action,orient,bottom";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tl";
               signal: "e,action,orient,corner_tl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_tr";
               signal: "e,action,orient,corner_tr";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_bl";
               signal: "e,action,orient,corner_bl";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_br";
               signal: "e,action,orient,corner_br";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lt";
               signal: "e,action,orient,corner_lt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rt";
               signal: "e,action,orient,corner_rt";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_lb";
               signal: "e,action,orient,corner_lb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
            program { name: "e,action,orient,corner_rb";
               signal: "e,action,orient,corner_rb";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.box";
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: WINLIST ***/

   group { name: "e/widgets/winlist/main";
      images {
	 image: "base_bg.png" COMP;
	 image: "bd_top_hilight.png" COMP;
	 image: "bd_title_bg.png" COMP;
	 image: "bd_title_over.png";
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "top_hilight";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 15;
	       image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
	    }
	 }
	 part { name: "title_back";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.offset: 4 0;
	       rel2.offset: -5 -4;
	       rel2.to_y: "e.text.title";
	       image {
		  normal: "bd_title_bg.png";
		  border: 7 7 2 7;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       align: 0.5 0.0;
	       min: 32 32;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   1     6;
		  to_y: "title_back";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -2    6;
		  to_y: "title_back";
	       }
	    }
	 }
	 part { name: "separator";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 16 2;
	       rel1 {
		  offset: 16 2;
		  relative: 0.0 1.0;
		  to_y: "e.text.label";
	       }
	       rel2 {
		  offset: -17 4;
		  relative: 1.0 1.0;
		  to_y: "e.text.label";
	       }
	       image {
		  normal: "menu_sep.png";
		  border: 2 2 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.list";
	    type: SWALLOW;
	    clip_to: "list_clip";
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:  12   12;
		  to_y:  "e.text.label";
	       }
	       rel2.offset:  -13  -12;
	    }
	 }
	 part { name: "list_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	       rel1.to_y: "e.swallow.list";
	       rel2.to_y: "e.swallow.list";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: NONE;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:  16   16;
		  to_y: "e.swallow.icon";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -17 16;
		  to_y: "e.swallow.icon";
	       }
	       color: 0 0 0 255;
	       color_class: "winlist_label";
	       text {
		  text: "Title goes here";
		  font: "Sans:style=Bold";
		  size: 10;
		  min:  0 1;
		  align: 0.5 0.5;
		  text_class: "winlist_label";
	       }
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    effect: SOFT_SHADOW;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -1 0;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
                  align: 0.5 0.0;
		  min: 1 1;
	       }
	    }
	 }
	 part { name: "title_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "title_back";
	       rel2.to: "title_back";
	       image {
		  normal: "bd_title_over.png";
		  border: 7 7 2 7;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
   }

   group {
      name: "e/widgets/winlist/item";
      images {
	 image: "menu_sel_bg.png" COMP;
	 image: "menu_sel_fg.png" COMP;
	 image: "pager_window.png" COMP;
	 image: "pager_window_shaded.png" COMP;
	 image: "pager_base2.png";
      }
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -3;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 5;
	       }
	       image {
		  normal: "menu_sel_bg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 2;
	       }
	    }
	 }
	 part { name: "fg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "menu_sel_fg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   4  3;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   4   -1;
		  to_y: "e.text.label";
	       }
	    }
	 }
	 part { name: "type";
	    description { state: "default" 0.0;
	       min: 23 24;
	       max: 23 24;
	       align: 1.0 0.5;
	       rel1 {
		  relative: 1.0 0.5;
		  offset:   -23  -12;
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset:   -1  11;
		  to_y: "e.text.label";
	       }
	       image.normal: "pager_window.png";
	    }
	    description { state: "iconified" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "invisible" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "pager_base2.png";
	    }
	    description { state: "shaded" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "pager_window_shaded.png";
	    }
	 }
	 part { name:           "e.text.label";
	    type:           TEXT;
	    effect:         SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 3 5;
		  to_x: "e.swallow.icon";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: -4 -4;
		  to_x: "type";
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "winlist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min:  0 1;
		  align: 0.0 0.5;
		  text_class: "winlist_title";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	    }
	 }
	 part { name: "e.event.winlist.item";
	    type:          RECT;
	    mouse_events:  1;
	    description { state: "default" 0.0;
	       min:      12 12;
	       visible:  1;
	       color: 0 0 0 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	    }
	 }
      }
      programs {
	 program { name:    "type1";
	    signal:  "e,state,iconified";
	    source:  "e";
	    action:  STATE_SET "iconified" 0.0;
	    target:  "type";
	 }
	 program { name:    "type2";
	    signal:  "e,state,invisible";
	    source:  "e";
	    action:  STATE_SET "invisible" 0.0;
	    target:  "type";
	 }
	 program { name:    "type3";
	    signal:  "e,state,shaded";
	    source:  "e";
	    action:  STATE_SET "shaded" 0.0;
	    target:  "type";
	 }
	 program { name: "sel";
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    transition: LINEAR 0.2;
	    target: "bg";
	    target: "fg";
	    target: "e.text.label";
	 }
	 program { name: "unsel";
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.1;
	    target: "bg";
	    target: "fg";
	    target: "e.text.label";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: EXEBUF ***/

   group { name: "e/widgets/exebuf/main";
      images {
	 image: "base_bg.png" COMP;
	 image: "inset_sunk.png" COMP;
	 image: "menu_sel_bg.png" COMP;
	 image: "menu_sel_fg.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "eap_bg";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "e.swallow.eap_list";
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.eap_list";
		  offset: 0  0;
	       }
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.eap_list";
	    type: SWALLOW;
	    clip_to: "eap_list_clip";
	    description { state: "default" 0.0;
	       min: 32 64;
	       align: 0.5 0.0;
	       rel1.offset:  12  12;
	       rel2 {
		  offset:   -13  -13;
		  relative: 1.0 0.0;
		  to_y: "bg";
	       }
	    }
	 }
	 part { name: "eap_list_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	       rel1.to_y: "e.swallow.eap_list";
	       rel2.to_y: "e.swallow.eap_list";
	    }
	 }
	 part { name: "eap_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  offset: -1 -1;
		  to: "eap_bg";
	       }
	       rel2 {
		  offset: 0 0;
		  to: "eap_bg";
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "exe_bg";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "e.swallow.exe_list";
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.exe_list";
		  offset: 0  0;
	       }
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.exe_list";
	    type: SWALLOW;
	    clip_to: "exe_list_clip";
	    description { state: "default" 0.0;
	       min: 32 64;
	       align: 0.5 1.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   12  12;
		  to_y: "bg";
	       }
	       rel2.offset:   -13  -13;
	    }
	 }
	 part { name: "exe_list_clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	       rel1.to_y: "e.swallow.exe_list";
	       rel2.to_y: "e.swallow.exe_list";
	    }
	 }
	 part { name: "exe_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  offset: -1 -1;
		  to: "exe_bg";
	       }
	       rel2 {
		  offset: 0 0;
		  to: "exe_bg";
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 0 42;
	       max: 99999 42;
	       rel1.offset: 20 0;
	       rel2.offset: -21 -1;
	       image {
		  normal: "menu_sel_bg.png";
		  border: 8 8 5 9;
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SHADOW;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 0 1;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 1.0 0.5;
		  offset:   4   0;
		  to_x:     "e.swallow.icons";
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset:   4  0;
		  to_x:     "e.swallow.icons";
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 64;
	       text {
		  font: "Sans:style=Bold";
		  size: 16;
		  align: 0.0 0.5;
		  min: 1 1;
		  text_class: "exebuf_command";
	       }
	    }
	 }
	 part { name:  "cursor";
	    type:  RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       min: 1 18;
	       max: 1 18;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   1    0;
		  to: "e.text.label";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   1    -1;
		  to: "e.text.label";
	       }
	       color: 255 255 255 220;
	    }
	    description { state:    "faded" 0.0;
	       inherit:  "default" 0.0;
	       color:    255 255 255 0;
	    }
	 }
	 part { name: "e.swallow.icons";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       min: 32 32;
	       max: 32 32;
	       align: 0.0 0.5;
	       rel1 {
		  offset:  6  4;
		  to: "bg";
	       }
	       rel2 {
		  offset:   -7  -5;
		  to: "bg";
	       }
	    }
	 }
	 part { name: "fg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "menu_sel_fg.png";
		  border: 8 8 5 9;
	       }
	    }
	 }
      }
      programs {
	 program { name: "blink_off";
	    signal:  "show";
	    source:  "";
	    action:  STATE_SET "faded" 0.0;
	    transition: SINUSOIDAL 0.5;
	    target:  "cursor";
	    after:   "blink_on";
	 }
	 program { name: "blink_on";
	    action:  STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 0.25;
	    target:  "cursor";
	    after:   "blink_off";
	 }
      }
   }

   group { name: "e/widgets/exebuf/item";
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.offset: -5 -3;
	       rel2.offset: 4 5;
	       image {
		  normal: "menu_sel_bg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: -2 0;
	       rel2.offset: 1 2;
	    }
	 }
         part { name: "e.text.title";
	    type: TEXT;
	    effect: SOFT_SHADOW;
            mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  offset: 2 1;
		  relative: 1.0 0.0;
		  to_x: "e.swallow.icons";
	       }
	       rel2.offset: -3 -2;
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "menu_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.5;
		  text_class: "menu_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	       color3: 0 0 0 64;
	       color_class: "menu_item";
	    }
	 }
	 part {
	    name: "e.swallow.icons";
	    type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       max: 18 18;
	       aspect: 1.0 1.0;
	       align: 0.0 0.5;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   3   1;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   -3   -2;
	       }
	    }
	 }
	 part { name: "fg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "menu_sel_fg.png";
		  border: 8 8 5 9;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part {
	    name:          "e.event.exebuf.item";
	    type:          RECT;
	    mouse_events:  1;
	    description {
	       state:    "default" 0.0;
	       min:      14 14;
	       visible:  1;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   1    -1;
		  to_x: "e.swallow.icons";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -1   -1;
	       }
	    }
	 }
      }
      programs {
	 program { name: "sel";
	    signal: "e,state,selected";
	    source: "e";
	    action: STATE_SET "selected" 0.0;
	    transition: LINEAR 0.2;
	    target: "bg";
	    target: "fg";
	    target: "e.text.title";
	 }
	 program { name: "unsel";
	    signal: "e,state,unselected";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.1;
	    target: "bg";
	    target: "fg";
	    target: "e.text.title";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: SYSCON ***/

   group { name: "e/widgets/syscon/main";
      images {
	 image: "base_bg.png" COMP;
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.main";
	    type: SWALLOW;
	    description { state: "default" 0.0;
//               fixed: 1 1;
               align: 0.5 0.0;
	       rel1.offset: 12 12;
               rel2.relative: 1.0 0.0;
	       rel2.offset: -13 12;
	    }
	 }
	 part { name: "e.swallow.secondary";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       min: 32 32;
               rel1.to: "e.swallow.main";
               rel1.relative: 0.0 1.0;
	       rel1.offset: 0 12;
               rel2.to: "e.swallow.extra";
               rel2.relative: 1.0 0.0;
	       rel2.offset: -1 -13;
	    }
	 }
	 part { name: "e.swallow.extra";
	    type: SWALLOW;
	    description { state: "default" 0.0;
//               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 1.0;
	       rel1.offset: 12 -13;
               rel2.to_y: "button_image";
               rel2.relative: 1.0 0.0;
	       rel2.offset: -13 -13;
	    }
	 }
	 part { name: "button_image";
	    mouse_events: 1;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 1.0;
	       rel1.relative: 0.5 1.0;
	       rel1.offset: 0 -13;
	       rel2.relative: 0.5 1.0;
	       rel2.offset: 0 -13;
	       min: 64 32;
	       max: 64 32;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "button_image";
		  relative: 0.0  0.0;
		  offset:   3    3;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  text:     "Cancel";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "button";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       color_class: "button_text_disabled";
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
            description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 12 12 12 12;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program { name: "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program { name: "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program { name: "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,close" "";
	 }
      }
   }

   group { name: "e/widgets/syscon/item/button";
      images {
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
	 image: "bt_glow.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "button_image";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 32 16;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.5 1.0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   3    -4;
		  to:     "button_image";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 1.0;
		  text_class: "button";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       color_class: "button_text_disabled";
	    }
	 }
	 part {
	    name: "e.swallow.icon";
	    type: SWALLOW;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   3  3;
		  to: "button_image";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -4   -1;
		  to_x: "button_image";
		  to_y: "e.text.label";
	       }
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 12 12 12 12;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program {
	    name:   "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
	    target: "over3";
	 }
	 program {
	    name:   "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	    target: "over3";
	 }
	 program {
	    name:   "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,click" "";
	 }
	 program {
	    name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "button_image";
	    target: "over1";
	    target: "disabler";
	 }
	 program {
	    name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	    target: "over1";
	    target: "disabler";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: MIXER ***/

// FIXME: Add code for making sound circles fade between states.

   group { name: "e/modules/mixer/main";
      images {
	 image: "mixer.png" COMP;
	 image: "mixer_low_left.png" COMP;
	 image: "mixer_low_right.png" COMP;
	 image: "mixer_med_left.png" COMP;
	 image: "mixer_med_right.png" COMP;
	 image: "mixer_high_left.png" COMP;
	 image: "mixer_high_right.png" COMP;
      }
      max: 128 128;
      min: 1 1;
      script {
	 public message(Msg_Type:type, id, ...) {
	    if ((type == MSG_INT_SET) && (id == 0)) {
	       new mute, left, right;

	       mute = getarg(2);
	       left = getarg(3);
	       right = getarg(4);

	       if (mute)
		  run_program(PROGRAM:"mute");
	       else
		  run_program(PROGRAM:"unmute");

	       if (left <= 0)
		  run_program(PROGRAM:"left_none");
	       else if (left < 33)
		  run_program(PROGRAM:"left_low");
	       else if (left < 66)
		  run_program(PROGRAM:"left_medium");
	       else if (left >= 66)
		  run_program(PROGRAM:"left_high");

	       if (right <= 0)
		  run_program(PROGRAM:"right_none");
	       else if (right < 33)
		  run_program(PROGRAM:"right_low");
	       else if (right < 66)
		  run_program(PROGRAM:"right_medium");
	       else if (right >= 66)
		  run_program(PROGRAM:"right_high");
	    }
	 }
      }
      parts {
	 part { name: "speaker";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1 1;
	       aspect_preference: BOTH;
	       image.normal: "mixer.png";
	    }
	 }
	 part { name: "left";
	    type: IMAGE;
	    clip_to: "mute";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       aspect: 1 1;
	       aspect_preference: BOTH;
	       rel1.to: "speaker";
	       rel2.to: "speaker";
	       image.normal: "mixer_low_left.png";
	    }
	    description { state: "low" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	    description { state: "medium" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       image.normal: "mixer_med_left.png";
	    }
	    description { state: "high" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       image.normal: "mixer_high_left.png";
	    }
	 }
	 part { name: "right";
	    type: IMAGE;
	    clip_to: "mute";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       aspect: 1 1;
	       aspect_preference: BOTH;
	       rel1.to: "speaker";
	       rel2.to: "speaker";
	       image.normal: "mixer_low_right.png";
	    }
	    description { state: "low" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	    description { state: "medium" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       image.normal: "mixer_med_right.png";
	    }
	    description { state: "high" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       image.normal: "mixer_high_right.png";
	    }
	 }
	 part { name: "mute";
	    mouse_events: 0;
	    type: RECT;
	    description { state: "default" 0.0; color: 255 255 255 255; }
	    description { state: "active" 0.0; color: 255 255 255 64; }
	 }
	 part {
	    name: "over";
	    type: RECT;
	    description {  state: "default" 0.0;
	       rel1.to: "speaker";
	       rel2.to: "speaker";
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "mute";
	    action: STATE_SET "active" 0.0;
	    transition: LINEAR 0.3;
	    target: "mute";
	 }
	 program { name: "unmute";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mute";
	 }

	 program { name: "left_none"; action: STATE_SET "default" 0.0; target: "left"; }
	 program { name: "left_low"; action: STATE_SET "low" 0.0; target: "left"; }
	 program { name: "left_medium"; action: STATE_SET "medium" 0.0; target: "left"; }
	 program { name: "left_high"; action: STATE_SET "high" 0.0; target: "left"; }

	 program { name: "right_none"; action: STATE_SET "default" 0.0; target: "right"; }
	 program { name: "right_low"; action: STATE_SET "low" 0.0; target: "right"; }
	 program { name: "right_medium"; action: STATE_SET "medium" 0.0; target: "right"; }
	 program { name: "right_high"; action: STATE_SET "high" 0.0; target: "right"; }

      }
   }


/////////////////////////////////////////////////////////////////////////////
   /*** FILEMAN ***/

   group { name: "e/fileman/default/window/main";
      images {
	 image: "dia_grad.png" COMP;
	 image: "dia_topshad.png" COMP;
	 image: "dia_botshad.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               color_class: "fileman_base";
	       image.normal: "dia_grad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "e.swallow.bg";
	    type: SWALLOW;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	 }
         part { name: "shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 31;
	       image.normal: "dia_topshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -4;
	       image.normal: "dia_botshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
      }
   }
   group { name: "e/fileman/default/progress";
      min: 250 40;
      images {
	 image: "icon_efm_file_del.png" COMP;
      }
      parts {
	 part { name: "bg";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "bt_dis_base.png";
	       image.border: 5 5 5 5;
	    }
	    description { state: "need_attention" 0.0;
	       inherit: "default" 0.0;
	       color: 200 0 0 150;
	    }
	 }
	 part { name: "shadow";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "bt_dis_shine.png";
	       image.border: 5 5 5 5;
	       rel1.to: "bg";
	       rel2.to: "bg";
	    }
	 }
	 part { name: "icon";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 32 32;
	       max: 32 32;
	       align: 0.01 0.5;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image.normal: "icon_efm_dnd_ask.png";
	    }
	    description { state: "copy" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "icon_efm_dnd_copy.png";
	    }
	    description { state: "move" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "icon_efm_dnd_move.png";
	    }
	    description { state: "delete" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "icon_efm_file_del.png";
	    }
	 }
	 part { name: "gauge_bg";
	    type: IMAGE;
	    scale: 1;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "icon";
	       rel1.relative: 1.0 0.60;
	       rel2.to: "bg";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -4 -5;
	       image.normal: "inset_sunk.png";
	       image.border: 6 6 6 6;
	    }
	 }
	 part { name: "gauge_confine";
	    type: RECT;
	    scale: 1;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "gauge_bg";
	       rel1.offset: 1 1;
	       rel2.to: "gauge_bg";
	       rel2.offset: -2 -2;
	       color: 0 255 0 0;
	    }
	 }
	 part { name: "e.gauge.bar";
	    mouse_events: 0;
	    scale: 1;
	    type: RECT;
	    description { state: "default" 0.0;
	       min: 0 0;
	       color: 55 55 55 100;
	    }
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine:"gauge_confine";
	    }
	 }
	 part { name: "e.text.info";
	    type: TEXT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
	         relative: 1.0 0.0;
	         to_x: "icon";
	         to_y: "bg";
	       }
	       rel2 {
	          relative: 0.0 0.6;
	          to_x: "bt_abort";
	          to_y: "icon";
	       }
	       color: 0 0 0 255;
	       text {
		  font: "Sans";
		  size: 10;
		  align: 0.0 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	 }
	 part { name: "bt_abort";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 1.0 0.5;
	       min: 19 19;
	       max: 19 19;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 1.0 0.0;
		  to_x: "e.text.info";
		  to_y: "bg";
	       }
	       rel2 {
		  relative: 0.99 1.0;
		  to_x: "bg";
		  to_y: "e.text.info";
	       }
	       image.normal: "bd_button_close_shadow.png";
	    }
	 }
	 part { name: "bt_abort_unfoc";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.to: "bt_abort";
	       rel2.to: "bt_abort";
	       image.normal: "bd_button_close_unfocused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "bt_abort_foc";
	    type: IMAGE;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bt_abort";
	       rel2.to: "bt_abort";
	       image.normal: "bd_button_close_focused.png";
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
	 part { name: "e.event.abort";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "bt_abort";
	       rel2.to: "bt_abort";
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program { name: "set_need_attention";
	    signal: "e,action,set,need_attention";
	    source: "e";
	    action:  STATE_SET "need_attention" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target: "bg";
            after: "need_loop";
	 }
         program { name: "need_loop";
	    action:  STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target: "bg";
            after: "set_need_attention";
	 }
	 program { name: "set_normal";
	    signal: "e,action,set,normal";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target: "bg";
	 }
	 program { name: "set_icon_unknow";
	    signal: "e,action,icon,unknow";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "icon";
	 }
	 program { name: "set_icon_copy";
	    signal: "e,action,icon,copy";
	    source: "e";
	    action:  STATE_SET "copy" 0.0;
	    target: "icon";
	 }
	 program { name: "set_icon_move";
	    signal: "e,action,icon,move";
	    source: "e";
	    action:  STATE_SET "move" 0.0;
	    target: "icon";
	 }
	 program { name: "set_icon_delete";
	    signal: "e,action,icon,delete";
	    source: "e";
	    action:  STATE_SET "delete" 0.0;
	    target: "icon";
	 }
	 program { name: "bt_abort_down";
	    signal: "mouse,down,*";
	    source: "e.event.abort";
	    action: STATE_SET "active" 0.0;
	    target: "bt_abort_unfoc";
	    target: "bt_abort_foc";
	 }
	 program { name: "bt_abort_up";
	    signal: "mouse,up,*";
	    source: "e.event.abort";
	    action: STATE_SET "default" 0.0;
	    target: "bt_abort_unfoc";
	    target: "bt_abort_foc";
	 }
	 program { name: "bt_abort_click";
	    signal: "mouse,clicked,*";
	    source: "e.event.abort";
	    action: SIGNAL_EMIT "e,fm,operation,abort" "";
	 }
      }
   }
   group { name: "e/fileman/default/scrollframe";
      images {
	 image: "inset_sunk.png" COMP;
	 image: "arrow_left.png" COMP;
	 image: "arrow_right.png" COMP;
	 image: "arrow_up.png" COMP;
	 image: "arrow_down.png" COMP;
	 image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_base2.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "sb_runnerh.png" COMP;
	 image: "sb_runnerv.png" COMP;
      }
      parts {
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2 {
		  relative: 0.0  0.0;
		  offset:   -1   -1;
		  to_x: "sb_vbar";
		  to_y: "sb_hbar";
	       }
	    }
	 }
	 part { name: "conf_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.offset: -1 -1;
	       rel2.offset: 0 0;
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "sb_vbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -2 1;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -2 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       max: 0 99999;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -1 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_base";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0	 -2;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0  0.0;
		  offset:   -1	 1;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "sb_vbar_runner";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 3 99999;
	       rel1.to:       "sb_vbar_base";
	       rel1.offset:   1 0;
	       rel2.to:       "sb_vbar_base";
	       image {
		  normal: "sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_vbar_p1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.vbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_p2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.vbar";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.vbar";
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 0 0 0;
	       y: 1 1 0;
	       confine: "sb_vbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_vbar_over1";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_vbar_over2";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_vbar_a1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 { to: "sb_vbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 { to: "sb_vbar";
		  relative: 1.0  0.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a1_arrow";
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a1";
	       rel2.to: "sb_vbar_a1";
	       image.normal: "arrow_up.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -1;
	       rel2.offset: -1 -2;
	    }
	 }

	 part { name: "sb_vbar_a2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 1.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_vbar";
		  relative: 0.0  1.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_vbar";
		  relative: 1.0  1.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a2";
	       rel2.to: "sb_vbar_a2";
	       image.normal: "arrow_down.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "sb_hbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 1.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   1 -2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   -1 -2;
		  to_x:     "sb_vbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0    -1;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   -1   -1;
		  to_x:     "sb_vbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_base";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   -2   0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   1   -1;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "sb_hbar_runner";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 99999 3;
	       rel1.to:       "sb_hbar_base";
	       rel1.offset:   0 1;
	       rel2.to:       "sb_hbar_base";
	       image {
		  normal: "sb_runnerh.png";
		  border: 4 4 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_hbar_p1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.hbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_p2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.hbar";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.hbar";
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "sb_hbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_hbar_over1";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_hbar_over2";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_hbar_a1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 0.0  1.0;
		  offset:   0   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a1_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a1";
	       rel2.to: "sb_hbar_a1";
	       image.normal: "arrow_left.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 0;
	       rel2.offset: -2 -1;
	    }
	 }

	 part { name: "sb_hbar_a2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 1.0  0.0;
		  offset:   -1    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 1.0  1.0;
		  offset:   -1   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a2";
	       rel2.to: "sb_hbar_a2";
	       image.normal: "arrow_right.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 1 0;
	       rel2.offset: 0 -1;
	    }
	 }
	 part { name: "e.box.operations";
	    type: BOX;
	    description { state: "default" 0.0;
	       rel2.to_x: "sb_vbar";
	       rel2.to_y: "sb_hbar";
	       rel2.relative: 0.0 0.0;
	       box {
		  layout: "vertical";
		  padding: 0 0;
		  align: 1.0 1.0;
	       }
	    }
	 }
      }
      programs {
	 program { name: "sb_vbar_show";
	    signal: "e,action,show,vbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_vbar_hide";
	    signal: "e,action,hide,vbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_hbar_show";
	    signal: "e,action,show,hbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar";
	 }
	 program { name: "sb_hbar_hide";
	    signal: "e,action,hide,hbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_hbar";
	 }

	 program { name: "sb_vbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  DRAG_VAL_STEP 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  DRAG_VAL_STEP 0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p1";
	    action:  DRAG_VAL_PAGE 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p2";
	    action:  DRAG_VAL_PAGE  0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_hbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  DRAG_VAL_STEP -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  DRAG_VAL_STEP 1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p1";
	    action:  DRAG_VAL_PAGE -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p2";
	    action:  DRAG_VAL_PAGE  1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.hbar";
	 }
      }
   }
   group { name: "e/fileman/desktop/scrollframe";
      images {
	 image: "arrow_left.png" COMP;
	 image: "arrow_right.png" COMP;
	 image: "arrow_up.png" COMP;
	 image: "arrow_down.png" COMP;
	 image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_base2.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "sb_runnerh.png" COMP;
	 image: "sb_runnerv.png" COMP;
      }
      parts {
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 0 0;
	       rel2 {
		  relative: 0.0  0.0;
		  offset:   -1   -1;
		  to_x: "sb_vbar";
		  to_y: "sb_hbar";
	       }
	    }
	 }
	 part { name: "sb_vbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -1 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       max: 0 99999;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -1 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_base";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0	 -1;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0  0.0;
		  offset:   -1	 0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "sb_vbar_runner";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 3 99999;
	       rel1.to:       "sb_vbar_base";
	       rel1.offset:   1 0;
	       rel2.to:       "sb_vbar_base";
	       image {
		  normal: "sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_vbar_p1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.vbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_p2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.vbar";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.vbar";
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 0 0 0;
	       y: 1 1 0;
	       confine: "sb_vbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_vbar_over1";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_vbar_over2";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_vbar_a1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 { to: "sb_vbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 { to: "sb_vbar";
		  relative: 1.0  0.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a1_arrow";
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a1";
	       rel2.to: "sb_vbar_a1";
	       image.normal: "arrow_up.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -1;
	       rel2.offset: -1 -2;
	    }
	 }

	 part { name: "sb_vbar_a2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 1.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_vbar";
		  relative: 0.0  1.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_vbar";
		  relative: 1.0  1.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a2";
	       rel2.to: "sb_vbar_a2";
	       image.normal: "arrow_down.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "sb_hbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 1.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   1 -2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   -1 -2;
		  to_x:     "sb_vbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0    -1;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   -1   -1;
		  to_x:     "sb_vbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_base";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   -1   0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   0   -1;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "sb_hbar_runner";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 99999 3;
	       rel1.to:       "sb_hbar_base";
	       rel1.offset:   0 1;
	       rel2.to:       "sb_hbar_base";
	       image {
		  normal: "sb_runnerh.png";
		  border: 4 4 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_hbar_p1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.hbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_p2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.hbar";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.hbar";
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "sb_hbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_hbar_over1";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_hbar_over2";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_hbar_a1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 0.0  1.0;
		  offset:   0   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a1_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a1";
	       rel2.to: "sb_hbar_a1";
	       image.normal: "arrow_left.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 0;
	       rel2.offset: -2 -1;
	    }
	 }

	 part { name: "sb_hbar_a2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 1.0  0.0;
		  offset:   -1    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 1.0  1.0;
		  offset:   -1   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a2";
	       rel2.to: "sb_hbar_a2";
	       image.normal: "arrow_right.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 1 0;
	       rel2.offset: 0 -1;
	    }
	 }
      }
      programs {
	 program { name: "sb_vbar_show";
	    signal: "e,action,show,vbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_vbar_hide";
	    signal: "e,action,hide,vbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_hbar_show";
	    signal: "e,action,show,hbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar";
	 }
	 program { name: "sb_hbar_hide";
	    signal: "e,action,hide,hbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_hbar";
	 }

	 program { name: "sb_vbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  DRAG_VAL_STEP 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  DRAG_VAL_STEP 0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p1";
	    action:  DRAG_VAL_PAGE 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p2";
	    action:  DRAG_VAL_PAGE  0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_hbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  DRAG_VAL_STEP -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  DRAG_VAL_STEP 1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p1";
	    action:  DRAG_VAL_PAGE -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p2";
	    action:  DRAG_VAL_PAGE  1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.hbar";
	 }
      }
   }

   group { name: "e/fileman/default/list/drop_in";
      alias: "e/fileman/default/list/drop_between";
      alias: "e/fileman/desktop/list/drop_in";
      alias: "e/fileman/desktop/list/drop_between";
      images {
	 image: "gadman_frame.png" COMP;
	 image: "gadman_border.png" COMP;
      }
      parts {
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.offset: -10 -10;
	       rel2.offset: 9 9;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "overlay";
	    mouse_events:  0;
	    clip_to: "clipper";
	    description { state: "default" 0.0;
	       rel1 { to: "border"; offset: 4 4; }
	       rel2 { to: "border"; offset: -5 -5; }
	       image.normal: "gadman_frame.png";
	       fill.size.relative: 0 0;
	       fill.size.offset: 24 24;
	    }
	 }
	 part { name: "border";
	    mouse_events:  0;
	    clip_to: "clipper";
	    description { state: "default" 0.0;
	       rel1.offset: -5 -5;
	       rel2.offset: 4 4;
	       image {
		  normal: "gadman_border.png";
		  border: 10 10 10 10;
		  middle: 0;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
      programs {
	 program { name: "visible";
	    signal: "e,state,selected";
	    source: "e";
	    action:  STATE_SET "visible" 0.0;
	    target: "clipper";
	 }
	 program { name: "hidden";
	    signal: "e,state,unselected";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "clipper";
	 }
      }
   }

   group { name: "e/fileman/default/rubberband";
      images {
	 image: "gadman_frame.png" COMP;
	 image: "gadman_border.png" COMP;
      }
      parts {
	 part { name: "overlay";
	    mouse_events:  1;
	    description { state: "default" 0.0;
	       rel1 { to: "border"; offset: 4 4; }
	       rel2 { to: "border"; offset: -5 -5; }
	       image.normal: "gadman_frame.png";
	       fill.size.relative: 0 0;
	       fill.size.offset: 24 24;
	    }
	 }
	 part { name: "border";
	    mouse_events:  1;
	    repeat_events:  1;
	    description { state: "default" 0.0;
	       rel1.offset: -5 -5;
	       rel2.offset: 4 4;
	       image {
		  normal: "gadman_border.png";
		  border: 10 10 10 10;
		  middle: 0;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
   }

   group { name: "e/fileman/default/overlay";
      alias: "e/fileman/desktop/overlay";
      images {
	 image: "busy-1.png" COMP;
	 image: "busy-2.png" COMP;
	 image: "busy-3.png" COMP;
	 image: "busy-4.png" COMP;
	 image: "busy-5.png" COMP;
	 image: "busy-6.png" COMP;
	 image: "busy-7.png" COMP;
	 image: "busy-8.png" COMP;
	 image: "busy-9.png" COMP;
	 image: "gadman_frame.png" COMP;
	 image: "gadman_border.png" COMP;
      }
      parts {
	 part { name: "busy_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "active" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "overlay";
	    mouse_events: 0;
	    clip_to: "busy_clip";
	    description { state: "default" 0.0;
	       rel1 { to: "border"; offset: 4 4; }
	       rel2 { to: "border"; offset: -5 -5; }
	       image.normal: "gadman_frame.png";
	       fill.size.relative: 0 0;
	       fill.size.offset: 24 24;
	    }
	 }
	 part { name: "border";
	    mouse_events: 0;
	    clip_to: "busy_clip";
	    description { state: "default" 0.0;
	       rel1 {
		  to_x: "e.text.busy_label";
		  to_y: "busy";
		  offset: -20 -20;
	       }
	       rel2 {
		  to: "e.text.busy_label";
		  offset: 19 9;
	       }
	       image {
		  normal: "gadman_border.png";
		  border: 10 10 10 10;
		  middle: 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "busy";
	    clip_to: "busy_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       align: 0.5 0.5;
	       aspect_preference: BOTH;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   8 8;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -9 -9;
	       }
	       image {
		  normal: "busy-9.png";
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
	       }
	    }
	 }
	 part { name: "e.text.busy_label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    clip_to: "busy_clip";
	    mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1 {
		  to: "busy";
		  relative: 0.0 1.0;
		  offset: 0 4;
	       }
	       rel2 {
		  to: "busy";
		  relative: 1.0 1.0;
		  offset: -1 4;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.0;
		  text_class: "fileman_notice";
	       }
	    }
	 }
	 part { name: "typebuf_clip";
	    type: RECT;
	    mouse_events:  0;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	    description {
	       state: "active" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.text.typebuf_label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    clip_to: "typebuf_clip";
	    mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       align: 0.5 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -5 -5;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 0;
		  align: 0.5 0.5;
		  elipsis: 1.0;
		  text_class: "fileman_typebuf";
	       }
	    }
	 }

      }
      programs {
         program { name: "go1";
	    signal: "e,state,busy,start";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target:  "busy_clip";
	 }
         program { name: "go2";
	    signal: "e,state,busy,start";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.5;
	    target: "busy";
	    after:  "go2";
	 }
         program { name: "stop1";
	    signal: "e,state,busy,stop";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target: "busy_clip";
	    after: "stop2";
	 }
         program { name: "stop2";
	    action: ACTION_STOP;
	    target: "go2";
	 }
         program { name: "gob1";
	    signal: "e,state,typebuf,start";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    transition: SINUSOIDAL 0.25;
	    target:  "typebuf_clip";
	 }
         program { name: "stopb1";
	    signal: "e,state,typebuf,stop";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target: "typebuf_clip";
	 }
      }
   }

   group { name: "e/fileman/default/icon/variable";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part { name: "label2";
	    type: TEXT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	       color: 0 0 0 255;
	       text {
                  font: "Sans";
		  text_source: "e.text.label";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image.normal: "pager_base2.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon0";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1.to: "icon0";
	       rel2.to: "icon0";
	       color: 0 0 0 0;
	    }
	    description { state: "min" 0.0;
	       inherit: "default" 0.0;
	       max: 0 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description { state: "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       //          fixed:    1 1;
	       rel1.to: "icon";
	       rel2.to: "icon";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -3 -2;
	       }
	       visible: 0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 16 16;
	       rel1 {
	          relative: 0.75 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type: IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 24 24;
	       rel1.relative: 0.75 0.0;
	       rel2.relative: 1.0 1.0;
	    }
	    description { state: "copy" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_copy.png";
	    }
	    description { state: "ask" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_ask.png";
	    }
	    description { state: "move" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_move.png";
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/default/icon/fixed";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part { name: "label2";
	    type: TEXT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	       color: 0 0 0 255;
	       text {
                  font: "Sans";
		  text_source: "e.text.label";
		  size: 10;
		  min: 0 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image.normal: "pager_base2.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon0";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1.to: "icon0";
	       rel2.to: "icon0";
	       color: 0 0 0 0;
	    }
	    description { state: "min" 0.0;
	       inherit: "default" 0.0;
	       max: 0 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description { state: "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       //          fixed:    1 1;
	       rel1.to: "icon";
	       rel2.to: "icon";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -3 -2;
	       }
	       visible: 0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.5 0.5;
		  text_class: "fileman_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 16 16;
	       rel1 {
	          relative: 0.75 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type: IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 24 24;
	       rel1.relative: 0.75 0.0;
	       rel2.relative: 1.0 1.0;
	    }
	    description { state: "copy" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_copy.png";
	    }
	    description { state: "ask" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_ask.png";
	    }
	    description { state: "move" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_move.png";
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/desktop/icon/variable";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image.normal: "pager_base2.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon0";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1.to: "icon0";
	       rel2.to: "icon0";
	       color: 0 0 0 0;
	    }
	    description { state: "min" 0.0;
	       inherit: "default" 0.0;
	       max: 0 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description { state: "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       //          fixed:    1 1;
	       rel1.to: "icon";
	       rel2.to: "icon";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -3 -2;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "desktop_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	    }
	 }
	 part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 16 16;
	       rel1 {
	          relative: 0.75 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type: IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 24 24;
	       rel1.relative: 0.75 0.0;
	       rel2.relative: 1.0 1.0;
	    }
	    description { state: "copy" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_copy.png";
	    }
	    description { state: "ask" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_ask.png";
	    }
	    description { state: "move" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_move.png";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/desktop/icon/fixed";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image.normal: "pager_base2.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon0";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible: 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1.to: "icon0";
	       rel2.to: "icon0";
	       color: 0 0 0 0;
	    }
	    description { state: "min" 0.0;
	       inherit: "default" 0.0;
	       max: 0 0;
	    }
	    description { state: "max" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description { state: "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       //          fixed:    1 1;
	       rel1.to: "icon";
	       rel2.to: "icon";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -3 -2;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 0 1;
		  align: 0.5 0.5;
		  text_class: "desktop_icon";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	    }
	 }
	 part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 16 16;
	       rel1 {
	          relative: 0.75 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type: IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       min: 24 24;
	       rel1.relative: 0.75 0.0;
	       rel2.relative: 1.0 1.0;
	    }
	    description { state: "copy" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_copy.png";
	    }
	    description { state: "ask" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_ask.png";
	    }
	    description { state: "move" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_dnd_move.png";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/default/list/variable";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_1.png" COMP;
	 image: "ilist_item_shadow.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_1.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 ////
	 part { name: "icon_box_shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;

	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image {
		  normal: "e17_fileman_thumb_bg.png";
	       }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon0";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible:  0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.5 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1 {
		  to: "icon0";
	       }
	       rel2 {
		  to: "icon0";
	       }
	       color: 0 0 0 0;
	    }
	    description {
	       state:    "min" 0.0;
	       inherit:  "default" 0.0;
	       max:      0 0;
	    }
	    description {
	       state:    "max" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description {
	       state:    "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align:    0.5 0.5;
	       //          fixed:    1 1;
	       rel1 {
		  to:      "icon";
	       }
	       rel2 {
		  to:      "icon";
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "icon0";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
	          relative: 0.5 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type:          IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description {
	       state:      "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description {
	       state:      "visible" 0.0;
	       aspect:     1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
		  relative: 0.75 0.0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	    }
	    description {
	       state:      "copy" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_copy.png";
	       }
	    }
	    description {
	       state:      "ask" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_ask.png";
	       }
	    }
	    description {
	       state:      "move" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_move.png";
	       }
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/default/list_odd/variable";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_2.png" COMP;
	 image: "ilist_item_shadow.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_2.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 ////
	 part { name: "icon_box_shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;

	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image {
		  normal: "e17_fileman_thumb_bg.png";
	       }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon0";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible:  0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.5 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1 {
		  to: "icon0";
	       }
	       rel2 {
		  to: "icon0";
	       }
	       color: 0 0 0 0;
	    }
	    description {
	       state:    "min" 0.0;
	       inherit:  "default" 0.0;
	       max:      0 0;
	    }
	    description {
	       state:    "max" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description {
	       state:    "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align:    0.5 0.5;
	       //          fixed:    1 1;
	       rel1 {
		  to:      "icon";
	       }
	       rel2 {
		  to:      "icon";
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "icon0";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
	          relative: 0.5 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type:          IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description {
	       state:      "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description {
	       state:      "visible" 0.0;
	       aspect:     1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
		  relative: 0.75 0.0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	    }
	    description {
	       state:      "copy" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_copy.png";
	       }
	    }
	    description {
	       state:      "ask" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_ask.png";
	       }
	    }
	    description {
	       state:      "move" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_move.png";
	       }
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/default/list/fixed";
      alias: "e/fileman/desktop/list/fixed";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_1.png" COMP;
	 image: "ilist_item_shadow.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
               fixed: 1 1;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_1.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 ////
	 part { name: "icon_box_shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;

	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image {
		  normal: "e17_fileman_thumb_bg.png";
	       }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon0";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible:  0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.5 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1 {
		  to: "icon0";
	       }
	       rel2 {
		  to: "icon0";
	       }
	       color: 0 0 0 0;
	    }
	    description {
	       state:    "min" 0.0;
	       inherit:  "default" 0.0;
	       max:      0 0;
	    }
	    description {
	       state:    "max" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description {
	       state:    "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align:    0.5 0.5;
	       //          fixed:    1 1;
	       rel1 {
		  to:      "icon";
	       }
	       rel2 {
		  to:      "icon";
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "icon0";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
	          relative: 0.5 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type:          IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description {
	       state:      "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description {
	       state:      "visible" 0.0;
	       aspect:     1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
		  relative: 0.75 0.0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	    }
	    description {
	       state:      "copy" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_copy.png";
	       }
	    }
	    description {
	       state:      "ask" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_ask.png";
	       }
	    }
	    description {
	       state:      "move" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_move.png";
	       }
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

   group { name: "e/fileman/default/list_odd/fixed";
      alias: "e/fileman/desktop/list_odd/fixed";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_2.png" COMP;
	 image: "ilist_item_shadow.png" COMP;

	 image: "e17_mini_button_shadow2.png" COMP;
	 image: "e17_fileman_thumb_bg.png" COMP;
	 image: "icon_efm_dnd_copy.png" COMP;
	 image: "icon_efm_dnd_ask.png" COMP;
	 image: "icon_efm_dnd_move.png" COMP;

	 image: "icon_efm_vol_unmounted.png" COMP;
	 image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_2.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 ////
	 part { name: "icon_box_shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: 2 2;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "e.swallow.icon";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "e.swallow.icon";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon_box_bg";
	    mouse_events:  0;
	    description {
	       state:      "default" 0.0;
	       visible:    0;
	       rel1 {
		  to: "icon_box";
		  relative: 0.0 0.0;
		  offset: 1 1;

	       }
	       rel2 {
		  to: "icon_box";
		  relative: 1.0 1.0;
		  offset: -2 -2;
	       }
	       image {
		  normal: "e17_fileman_thumb_bg.png";
	       }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 0;
		     offset:   32 32;
		  }
	       }
	    }
	    description {
	       state:      "visible" 0.0;
	       inherit:    "default" 0.0;
	       visible:    1;
	    }
	 }
	 part { name: "icon0";
	    type:          RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       visible:  0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "icon";
	    type: RECT;
	    mouse_events:  0;
	    description {
	       state:    "default" 0.0;
	       align:    0.5 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: BOTH;
	       visible:  0;
	       rel1 {
		  to: "icon0";
	       }
	       rel2 {
		  to: "icon0";
	       }
	       color: 0 0 0 0;
	    }
	    description {
	       state:    "min" 0.0;
	       inherit:  "default" 0.0;
	       max:      0 0;
	    }
	    description {
	       state:    "max" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -4   -4;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   3    3;
	       }
	    }
	    description {
	       state:    "max2" 0.0;
	       inherit:  "default" 0.0;
	       rel1 {
		  to: "icon0";
		  relative: 0.0  0.0;
		  offset:   -2   -2;
	       }
	       rel2 {
		  to: "icon0";
		  relative: 1.0  1.0;
		  offset:   1    1;
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align:    0.5 0.5;
	       //          fixed:    1 1;
	       rel1 {
		  to:      "icon";
	       }
	       rel2 {
		  to:      "icon";
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "icon0";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "vol_state";
	    type: IMAGE;
	    mouse_events: 0;
	    repeat_events: 0;
	    description { state: "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
	          relative: 0.5 0.0;
	          to: "icon";
	       }
	       rel2 {
	          relative: 1.0 1.0;
	          to: "icon";
	       }
	    }
	    description { state: "unmounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_unmounted.png";
	    }
	    description { state: "mounted" 0.0;
	       inherit: "visible" 0.0;
	       image.normal:  "icon_efm_vol_mounted.png";
	    }
	 }
	 part { name: "dnd_action";
	    type:          IMAGE;
	    mouse_events:  0;
	    repeat_events: 0;
	    description {
	       state:      "default" 0.0;
	       color:      0 0 0 0;
	    }
	    description {
	       state:      "visible" 0.0;
	       aspect:     1.0 1.0;
	       aspect_preference: BOTH;
	       align: 1.0 1.0;
	       rel1 {
		  relative: 0.75 0.0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
	       }
	    }
	    description {
	       state:      "copy" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_copy.png";
	       }
	    }
	    description {
	       state:      "ask" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_ask.png";
	       }
	    }
	    description {
	       state:      "move" 0.0;
	       inherit:    "visible" 0.0;
	       image {
		  normal:  "icon_efm_dnd_move.png";
	       }
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.swallow.entry";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
	 program { name: "ask";
	    signal: "e,state,ask";
	    source: "e";
	    action: STATE_SET "ask" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "move";
	    signal: "e,state,move";
	    source: "e";
	    action: STATE_SET "move" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "copy";
	    signal: "e,state,copy";
	    source: "e";
	    action: STATE_SET "copy" 0.0;
	    target: "dnd_action";
	 }
	 program { name: "vol_off";
	    signal: "e,state,volume,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_unmounted";
	    signal: "e,state,volume,unmounted";
	    source: "e";
	    action: STATE_SET "unmounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "vol_mounted";
	    signal: "e,state,volume,mounted";
	    source: "e";
	    action: STATE_SET "mounted" 0.0;
	    target: "vol_state";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen-";
	    signal:  "e,action,thumb,gen,alpha";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "icon_box_bg";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon";
	    transition: SINUSOIDAL 0.3;
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** SYSTEM ***/

   group { name: "e/sys/logout";
      alias: "e/sys/halt";
      alias: "e/sys/reboot";
      alias: "e/sys/suspend";
      alias: "e/sys/hibernate";
      data.item: "borderless" "1";
//      data.item: "shaped" "1";
      images {
	 image: "vgrad_dark.png" COMP;
         image: "shelf_alt_over.png" COMP;
	 image: "logo_white_128.png" COMP;
	 image: "busy-1.png" COMP;
	 image: "busy-2.png" COMP;
	 image: "busy-3.png" COMP;
	 image: "busy-4.png" COMP;
	 image: "busy-5.png" COMP;
	 image: "busy-6.png" COMP;
	 image: "busy-7.png" COMP;
	 image: "busy-8.png" COMP;
	 image: "busy-9.png" COMP;
      }
      styles {
	 style {
	    name: "sys_style";
	    base: "font=Sans:style=Bold font_size=12 text_class=tb_plain align=center color=#fff style=soft_shadow shadow_color=#0000001f wrap=word";
	    tag:  "br" "\n";
	    tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light";
	 }
      }
      parts {
	 part { name:          "base";
	    mouse_events:  0;
	    description { state:    "default" 0.0;
      	       min: 250 250;
	       image.normal: "vgrad_dark.png";
	       fill {
		  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
         part { name: "over";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "shelf_alt_over.png";
	       image.border: 5 5 5 5;
	       image.middle: 0;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "busy";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       min: 32 32;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       align: 0.5 0.0;
	       aspect_preference: BOTH;
	       rel1 {
		  to_y:     "logo";
		  relative: 0.0 1.0;
		  offset:   0 1;
	       }
               rel2 {
		  relative: 1.0 1.0;
		  offset:   -1 1;
	       }
	       image {
		  normal: "busy-9.png";
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
	       }
	    }
	 }
	 part { name: "logo";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 128 128;
	       max: 128 128;
	       align: 0.5 0.0;
	       image.normal: "logo_white_128.png";
	    }
	    description { state: "done" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.textblock.message";
	    type: TEXTBLOCK;
	    mouse_events:  0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  offset: 8 8;
		  relative: 0.0 1.0;
		  to_y: "busy";
	       }
	       rel2.offset: -9 -9;
	       text {
		  style:    "sys_style";
		  min:      1 1;
	       }
	    }
	 }
      }
      programs {
	 program { name: "busy_anim";
	    signal: "show";
	    source: "";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** DIALOG ***/
   group { name: "e/widgets/dialog/main";
      images {
	 image: "dia_grad.png" COMP;
	 image: "dia_topshad.png" COMP;
	 image: "dia_botshad.png" COMP;
	 image: "menu_sep.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "dialog_base";
	       image.normal: "dia_grad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 31;
	       image.normal: "dia_topshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -4;
	       image.normal: "dia_botshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       align: 0.0 0.5;
	       fixed: 1 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   2  2;
	       }
	       rel2 {
		  relative: 0.0 0.0;
		  offset:   2  -5;
		  to_y: "e.swallow.buttons";
	       }
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   2   2;
		  to_x:     "e.swallow.icon";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -3  -5;
		  to_y: "e.swallow.buttons";
	       }
	    }
	 }
	 part { name: "separator";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 16 2;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   4    -1;
		  to_y:     "e.swallow.content";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5   0;
		  to_y:     "e.swallow.content";
	       }
	       image {
		  normal: "menu_sep.png";
		  border: 2 2 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part {
	    name: "e.swallow.buttons";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   4   -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -5  -5;
	       }
	    }
	 }
      }
   }

   group { name: "e/widgets/dialog/text";
      styles {
	 style {
	    name: "dialog_style";
	    base: "font=Sans font_size=10 text_class=tb_plain align=center color=#000 style=shadow shadow_color=#ffffff80 wrap=word";
	    tag:  "br" "\n";
	    tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light";
	 }
      }
      parts {
	 part { name: "e.textblock.message";
	    type: TEXTBLOCK;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.offset: 4 4;
	       rel2.offset: -5 -5;
	       text {
		  style:    "dialog_style";
		  min:      1 1;
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** CONFIGURATION PANEL ***/

   group { name: "e/widgets/configure/main";
      images {
	 image: "dia_grad.png" COMP;
	 image: "dia_topshad.png" COMP;
	 image: "dia_botshad.png" COMP;
	 image: "menu_sep.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "configure_base";
	       image.normal: "dia_grad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 31;
	       image.normal: "dia_topshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -4;
	       image.normal: "dia_botshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "separator";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 16 2;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   4    -1;
		  to_y:     "e.swallow.content";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5   0;
		  to_y:     "e.swallow.content";
	       }
	       image {
		  normal: "menu_sep.png";
		  border: 2 2 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part {
	    name:          "e.swallow.content";
	    type:          SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       min: 100 200;
	       rel1.offset: 2 2;
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -3 -5;
		  to_y: "e.swallow.button";
	       }
	    }
	 }
	 part {
	    name: "e.swallow.button";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 1 1;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       rel1.relative: 0.5 0.0;
	       rel2.relative: 0.5 1.0;
	       rel2.offset:   0  -5;
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOVE/RESIZE BOX ***/

   group { name: "e/widgets/border/default/move";
      images {
	 image: "base_bg.png" COMP;
	 image: "move.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "icon";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       min: 21 21;
	       max: 21 21;
               fixed: 1 1;
	       rel1.offset: 2 2;
	       rel2.relative: 0.0 1.0;
	       rel2.offset: 2 -3;
	       image.normal: "move.png";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.to_x: "icon";
	       rel1.offset: 2 4;
	       rel1.relative: 1.0 0.0;
	       rel2.offset: -5 -5;
	       color: 0 0 0 255;
	       color_class: "move_text";
	       text { text: "X Y";
		  font: "Sans";
		  size: 10;
		  align: 0.5 0.5;
		  min: 1 1;
		  text_class: "move_text";
	       }
	    }
	 }
      }
   }

   group { name: "e/widgets/border/default/resize";
      images {
	 image: "base_bg.png" COMP;
	 image: "resize.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       align: 0.5 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "icon";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       align: 0.0 0.5;
	       min: 21 21;
	       max: 21 21;
               fixed: 1 1;
	       rel1.offset: 2 2;
	       rel2.relative: 0.0 1.0;
	       rel2.offset: 2 -3;
	       image.normal: "resize.png";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.to_x: "icon";
	       rel1.offset: 2 4;
	       rel1.relative: 1.0 0.0;
	       rel2.offset: -5 -5;
	       color: 0 0 0 255;
	       color_class: "resize_text";
	       text { text: "WxH";
		  font: "Sans";
		  size: 10;
		  align: 0.5 0.5;
		  min: 1 1;
		  text_class: "resize_text";
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** FILE MANAGER TOOLBAR ***/

group { name: "e/toolbar/default/base";
   images {
      image: "toolbar_top.png" COMP;
      image: "toolbar_bottom.png" COMP;
   }
   parts {
      part { name: "base";
	 mouse_events: 0;
	 description { state: "default" 0.0;
	    max: 99999 48;
	    image.normal: "toolbar_top.png";
	    image.border: 4 4 4 4;
	    fill.smooth: 0;
	 }
	 description { state: "bottom" 0.0;
	    inherit: "default" 0.0;
	    image.normal: "toolbar_bottom.png";
	 }
      }
      part { name: "e.swallow.content";
	 type: SWALLOW;
	 description { state: "default" 0.0;
	    rel1.offset: 2 2;
	    rel2.offset: -3 -3;
	 }
	 description { state: "bottom" 0.0;
	    inherit: "default" 0.0;
	 }
      }
   }
   programs {
      program { name: "orient1";
	 signal: "e,state,orientation,top";
	 source: "e";
	 action: STATE_SET "default" 0.0;
	 target: "base";
	 target: "e.swallow.content";
      }
      program { name: "orient2";
	 signal: "e,state,orientation,bottom";
	 source: "e";
	 action: STATE_SET "bottom" 0.0;
	 target: "base";
	 target: "e.swallow.content";
      }
   }
}

/////////////////////////////////////////////////////////////////////////////
   /*** TRANSITIONS ***/

   images {
      image: "vgrad_dark.png" COMP;
      image: "vgrad_light.png" COMP;
      image: "logo_black_128.png" COMP;
      image: "logo_white_128.png" COMP;
   }

   group { name: "e/transpreview/0";
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "vgrad_dark.png";
	       fill {
                  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part { name: "logo";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "logo_white_128.png";
	       min: 32 32;
	       max: 128 128;
	    }
	 }
      }
   }

   group { name: "e/transpreview/1";
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "vgrad_light.png";
	       fill {
                  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part { name: "logo";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "logo_black_128.png";
	       min: 32 32;
	       max: 128 128;
	    }
	 }
      }
   }

   group { name: "e/transitions/crossfade";
      parts {
	 part { name:	"e.swallow.bg.old";
	    type:	SWALLOW;
	    description { state: "default" 0.0;
	    }
	 }
	 part { name:	"e.swallow.bg.new";
	    type:	SWALLOW;
	    clip_to:	"bg_new_clip";
	    description { state: "default" 0.0;
	    }
	 }
	 part { name:	"bg_new_clip";
	    type:	RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       color: 255 255 255 0;
	    }
	    description { state: "done" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program { name:	"go";
	    signal:  "e,action,start";
	    source:  "e";
	    action:  STATE_SET "done" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target:  "bg_new_clip";
	    after:   "go2";
	 }
	 program { name:    "go2";
	    action:  SIGNAL_EMIT "e,state,done" "";
	 }
      }
   }

   group { name: "e/transitions/vswipe";
      images.image: "transition_vswipe.png" COMP;
      parts {
	 part { name:	"e.swallow.bg.old";
	    type:	SWALLOW;
	    clip_to:	"bg_prev_clip";
	    description { state: "default" 0.0;
	    }
	 }
	 part { name:	"e.swallow.bg.new";
	    type:	SWALLOW;
	    clip_to:	"bg_new_clip";
	    description { state: "default" 0.0;
	    }
	 }
	 part { name:	"bg_prev_clip";
	    type:	RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.offset:   0   -32;
	       rel2.offset:  -1    31;
	    }
	    description { state: "done" 0.0;
	       inherit: "default" 0.0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0    31;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -1   31;
	       }
	    }
	 }
	 part { name:	"bg_new_clip";
	    type:	RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   0    -32;
	       }
	       rel2 {
		  relative: 1.0  0.0;
		  offset:   -1   -32;
	       }
	    }
	    description {
	       state: "done" 0.0;
	       rel1.offset:   0   -32;
	       rel2.offset:  -1    31;
	    }
	 }
	 part { name: "swipe_gap";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 0 64;
	       max: 99999 64;
	       rel1 {
		  to: "bg_prev_clip";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "bg_prev_clip";
		  relative: 1.0  0.0;
		  offset:   -1   0;
	       }
	       image.normal: "transition_vswipe.png";
	    }
	 }
      }
      programs {
	 program { name:    "go";
	    signal:  "e,action,start";
	    source:  "e";
	    action:  STATE_SET "done" 0.0;
	    transition: SINUSOIDAL 1.0;
	    target:  "bg_new_clip";
	    target:  "bg_prev_clip";
	    after:   "go2";
	 }
	 program { name:    "go2";
	    action:  SIGNAL_EMIT "e,state,done" "";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** WIDGETS ***/
   group { name: "e/widgets/check";
      images {
	 image: "check_base.png" COMP;
	 image: "check_on.png" COMP;
	 image: "check_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   2    2;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   2   -3;
	       }
	       image.normal: "check_base.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "check_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "check_sel.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "base";
		  relative: 1.0  0.0;
		  offset:   2 2;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -2 -2;
	       }
	       color: 0 0 0 255;
	       color_class: "check_text";
	       text {
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.0 0.5;
		  text_class: "check_button";
	       }
	    }
	    description { state:    "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color:    0   0   0 128;
	       color_class: "check_text_disabled";
	    }
	 }
	 part { name: "event";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
      }
      programs {
	 program { name: "on"; /* if the checkmark is to be displayed */
	    signal: "e,state,checked";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off"; /* check mark is not to be displayed */
	    signal: "e,state,unchecked";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "event";
	    action: SIGNAL_EMIT "e,action,toggle" "";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
      }
   }
   group { name: "e/widgets/check_icon";
      images {
	 image: "check_base.png" COMP;
	 image: "check_on.png" COMP;
	 image: "check_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   2    2;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   2   -3;
	       }
	       image.normal: "check_base.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "check_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "check_sel.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    clip_to: "icon_clip";
	    description { state: "default" 0.0;
	       min: 16 16;
	       rel1 {
		  to_x: "base";
		  relative: 1.0  0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset: -2 -2;
	       }
	    }
	    description { state: "label_visible" 0.0;
	       inherit: "default" 0.0;
	       min: 16 16;
	       rel2 {
		  to_y: "base";
		  relative: 1.0  0.0;
		  offset:   -2 -2;
	       }
	    }
	 }
	 part { name: "icon_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "label_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "label_visible" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    clip_to: "label_clip";
	    description { state: "default" 0.0;
	       min: 16 16;
	       rel1 {
		  to_x: "base";
		  relative: 1.0  0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset: -2 -2;
	       }
	       color: 0 0 0 255;
	       color_class: "check_text";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "check_button";
	       }
	    }
	    description { state:    "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color:    0   0   0 128;
	       color_class: "check_text_disabled";
	    }
	 }
	 part { name: "event";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
      }
      programs {
	 program { name: "on"; /* if the checkmark is to be displayed */
	    signal: "e,state,checked";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off"; /* check mark is not to be displayed */
	    signal: "e,state,unchecked";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "event";
	    action: SIGNAL_EMIT "e,action,toggle" "";
	 }
	 program { name: "label_on";
	    signal: "e,state,labeled";
	    source: "e";
	    action: STATE_SET "label_visible" 0.0;
	    target: "e.swallow.icon";
	    target: "label_clip";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
      }
   }

   /* for a radio menu item - same as check, but only one of a group of radio
    * menu item can be selected at any one time */
   group { name: "e/widgets/radio";
      images {
	 image: "radio_base.png" COMP;
	 image: "radio_on.png" COMP;
	 image: "radio_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   2    2;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   2   -3;
	       }
	       image.normal: "radio_base.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "radio_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "radio_sel.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "base";
		  relative: 1.0  0.0;
		  offset:   2 2;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -2 -2;
	       }
	       color: 0 0 0 255;
	       color_class: "radio_text";
	       text {
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.0 0.5;
		  text_class: "radio_button";
	       }
	    }
	    description { state:    "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color:    0 0 0 128;
	       color_class: "radio_text_disabled";
	    }
	 }
	 part { name: "event";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
      }
      programs {
	 program { name: "on"; /* if the checkmark is to be displayed */
	    signal: "e,state,on";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off"; /* check mark is not to be displayed */
	    signal: "e,state,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "event";
	    action: SIGNAL_EMIT "e,action,toggle" "";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
      }
   }
   group { name: "e/widgets/radio_icon";
      images {
	 image: "radio_base.png" COMP;
	 image: "radio_on.png" COMP;
	 image: "radio_sel.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 16 16;
	       max: 16 16;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   2    2;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   2   -3;
	       }
	       image.normal: "radio_base.png";
	    }
	 }
	 part { name: "mark";
	    mouse_events: 0;
	    clip_to: "mark_hold";
	    description { state: "default" 0.0;
	       rel1.to: "mark_hold";
	       rel2.to: "mark_hold";
	       image.normal: "radio_on.png";
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "radio_sel.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "mark_hold";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  to: "base";
		  offset: -5 -5;
	       }
	       rel2 {
		  to: "base";
		  offset: 4 4;
	       }
	    }
	    description { state: "on" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    clip_to: "icon_clip";
	    description { state: "default" 0.0;
	       min: 16 16;
	       rel1 {
		  to_x: "base";
		  relative: 1.0  0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset: -2 -2;
	       }
	    }
	    description { state: "label_visible" 0.0;
	       inherit: "default" 0.0;
	       min: 16 16;
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0  0.0;
		  offset:   -2 -2;
	       }
	    }
	 }
 	 part { name: "icon_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "label_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	    }
	    description { state: "label_visible" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    clip_to: "label_clip";
	    description { state: "default" 0.0;
	       min: 16 16;
	       rel1 {
		  to_x: "base";
		  relative: 1.0  0.5;
		  offset: 2 1;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset: -2 -2;
	       }
	       color: 0 0 0 255;
	       color_class: "radio_text";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "radio_button";
	       }
	    }
	    description { state:    "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color:    0   0   0 128;
	       color_class: "radio_text_disabled";
	    }
	 }
	 part { name: "event";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
      }
      programs {
	 program { name: "on"; /* if the radiomark is to be displayed */
	    signal: "e,state,on";
	    source: "e";
	    action: STATE_SET "on" 0.0;
	    transition: LINEAR 0.15;
	    target: "mark_hold";
	 }
	 program { name: "off"; /* radio mark is not to be displayed */
	    signal: "e,state,off";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.2;
	    target: "mark_hold";
	 }
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "event";
	    action: SIGNAL_EMIT "e,action,toggle" "";
	 }
	 program { name: "label_on";
	    signal: "e,state,labeled";
	    source: "e";
	    action: STATE_SET "label_visible" 0.0;
	    target: "e.swallow.icon";
	    target: "label_clip";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "mark";
	    target: "event";
      target: "e.text.label";
	 }
      }
   }

   group { name: "e/widgets/button";
      images {
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
	 image: "bt_glow.png" COMP;
	 image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "button_image";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 32 16;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part {
	    name: "e.swallow.icon";
	    type: SWALLOW;
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   3   3;
		  to: "button_image";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   3  -4;
		  to: "button_image";
	       }
	    }
	    description {
	       state: "combo" 0.0;
	       inherit: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   3  3;
		  to: "button_image";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   3   -4;
		  to: "button_image";
	       }
	    }
	    description {
	       state: "icon" 0.0;
	       inherit: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       align: 0.5 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   3  3;
		  to: "button_image";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -4   -4;
		  to: "button_image";
	       }
	    }
	 }
	 part {
	    name:          "e.text.label";
	    type:          TEXT;
	    effect:        SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description {
	       state:    "default" 0.0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   2    3;
		  to_x:   "e.swallow.icon";
		  to_y:   "button_image";
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "button";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       color_class: "button_text_disabled";
	    }
	    description { state: "icon" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 7 7 9 9;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program {
	    name:   "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
	    target: "over3";
	 }
	 program {
	    name:   "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	    target: "over3";
	 }
	 program {
	    name:   "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,click" "";
	 }
	 program {
	    name: "text_state";
	    signal: "e,state,text";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "e.swallow.icon";
	    target: "e.text.label";
	 }
	 program {
	    name: "icon_state";
	    signal: "e,state,icon";
	    source: "e";
	    action: STATE_SET "icon" 0.0;
	    target: "e.swallow.icon";
	    target: "e.text.label";
	 }
	 program {
	    name: "combo_state";
	    signal: "e,state,combo";
	    source: "e";
	    action: STATE_SET "combo" 0.0;
	    target: "e.swallow.icon";
	    target: "e.text.label";
	 }
	 program {
	    name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "button_image";
	    target: "over1";
	    target: "e.text.label";
	    target: "disabler";
	 }
	 program {
	    name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	    target: "over1";
	    target: "e.text.label";
	    target: "disabler";
	 }
      }
   }

   group { name: "e/widgets/scrollframe";
      images {
	 image: "inset_sunk.png" COMP;
	 image: "arrow_left.png" COMP;
	 image: "arrow_right.png" COMP;
	 image: "arrow_up.png" COMP;
	 image: "arrow_down.png" COMP;
	 image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_base2.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "sb_runnerh.png" COMP;
	 image: "sb_runnerv.png" COMP;
      }
      parts {
         part { name: "bg";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description {
	       state: "default" 0.0;
	       rel1.offset: 0 0;
	       rel2 {
		  relative: 0.0  0.0;
		  offset:   -1   -1;
		  to_x: "sb_vbar";
		  to_y: "sb_hbar";
	       }
	    }
	 }
/*
         part { name: "tst";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.2;
	       color: 0 0 255 128;
	    }
	 }
 */
	 part { name: "conf_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "sb_vbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.0;
	       rel1 {
		  to: "bg";
		  relative: 1.0 0.0;
		  offset:   -2 1;
	       }
	       rel2 {
		  to: "bg";
		  relative: 1.0 0.0;
		  offset:   -2 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       max: 0 99999;
	       rel1 {
		  to: "bg";
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  to: "bg";
		  relative: 1.0 0.0;
		  offset:   -1 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_base";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0	 -2;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0  0.0;
		  offset:   -1	 1;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "sb_vbar_runner";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 3 99999;
	       rel1.to:       "sb_vbar_base";
	       rel1.offset:   1 0;
	       rel2.to:       "sb_vbar_base";
	       image {
		  normal: "sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_vbar_p1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.vbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_p2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.vbar";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.vbar";
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 0 0 0;
	       y: 1 1 0;
	       confine: "sb_vbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_vbar_over1";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_vbar_over2";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_vbar_a1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 { to: "sb_vbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 { to: "sb_vbar";
		  relative: 1.0  0.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a1_arrow";
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a1";
	       rel2.to: "sb_vbar_a1";
	       image.normal: "arrow_up.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -1;
	       rel2.offset: -1 -2;
	    }
	 }

	 part { name: "sb_vbar_a2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 1.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_vbar";
		  relative: 0.0  1.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_vbar";
		  relative: 1.0  1.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a2";
	       rel2.to: "sb_vbar_a2";
	       image.normal: "arrow_down.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }

	 part { name: "sb_hbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 1.0;
	       rel1 {
		  to: "bg";
		  relative: 0.0 1.0;
		  offset:   1 -2;
	       }
	       rel2 {
		  to: "bg";
		  relative: 0.0 1.0;
		  offset:   -1 -2;
		  to_x:     "sb_vbar";
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       rel1 {
		  to: "bg";
		  relative: 0.0  1.0;
		  offset:   0    -1;
	       }
	       rel2 {
		  to: "bg";
		  relative: 0.0  1.0;
		  offset:   -1   -1;
		  to_x:     "sb_vbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_base";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   -2   0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   1   -1;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "sb_hbar_runner";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 99999 2;
	       rel1.to:       "sb_hbar_base";
	       rel1.offset:   0 1;
	       rel2.to:       "sb_hbar_base";
	       image {
		  normal: "sb_runnerh.png";
		  border: 4 4 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_hbar_p1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "sb_hbar_a1";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.hbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_p2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.hbar";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  to:       "sb_hbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.hbar";
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "sb_hbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_hbar_over1";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_hbar_over2";
	    clip_to: "sb_hbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.hbar";
	       rel2.to: "e.dragable.hbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_hbar_a1";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 0.0  1.0;
		  offset:   0   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a1_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a1";
	       rel2.to: "sb_hbar_a1";
	       image.normal: "arrow_left.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: -1 0;
	       rel2.offset: -2 -1;
	    }
	 }

	 part { name: "sb_hbar_a2";
	    type: RECT;
	    clip_to: "sb_hbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_hbar";
		  relative: 1.0  0.0;
		  offset:   -1    0;
	       }
	       rel2 {
		  to: "sb_hbar";
		  relative: 1.0  1.0;
		  offset:   -1   -1;
	       }
	    }
	 }
	 part { name: "sb_hbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_hbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_hbar_a2";
	       rel2.to: "sb_hbar_a2";
	       image.normal: "arrow_right.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 1 0;
	       rel2.offset: 0 -1;
	    }
	 }
      }
      programs {
	 program { name: "sb_vbar_show";
	    signal: "e,action,show,vbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_vbar_hide";
	    signal: "e,action,hide,vbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_hbar_show";
	    signal: "e,action,show,hbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar";
	 }
	 program { name: "sb_hbar_hide";
	    signal: "e,action,hide,hbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_hbar";
	 }

	 program { name: "sb_vbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  DRAG_VAL_STEP 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  DRAG_VAL_STEP 0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p1";
	    action:  DRAG_VAL_PAGE 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p2";
	    action:  DRAG_VAL_PAGE  0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_hbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a1";
	    action:  DRAG_VAL_STEP -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a1_arrow";
	 }
	 program { name: "sb_hbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_hbar_a2";
	    action:  DRAG_VAL_STEP 1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_hbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_hbar_a2_arrow";
	 }
	 program { name: "sb_hbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p1";
	    action:  DRAG_VAL_PAGE -1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_hbar_p2";
	    action:  DRAG_VAL_PAGE  1.0 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.hbar";
	 }
	 program { name: "sb_hbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.hbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.hbar";
	 }
      }
   }

   group { name: "e/widgets/ilist";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_1.png" COMP;
	 image: "ilist_item_shadow.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
               fixed: 1 1;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_1.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {
	    name:          "e.swallow.icon";
	    type:          SWALLOW;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "e.swallow.icon";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name:    "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program {
	    name:    "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
      }
   }

   group { name: "e/widgets/ilist_odd";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_2.png" COMP;
      }
      parts {
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_2.png";
		  border: 2 2 2 2;
	       }
               fill.smooth: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {
	    name:          "e.swallow.icon";
	    type:          SWALLOW;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "e.swallow.icon";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 0 0 0 255;
	       color3: 0 0 0 0;
	       color_class: "ilist_item";
	       text {
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name:    "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program {
	    name:    "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
      }
   }

   group { name: "e/widgets/ilist_header";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_header_1.png" COMP;
	 image: "ilist_item_shadow.png" COMP;
      }
      parts {
	 part {
	    name: "base_sh";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
               fixed: 1 1;
//	       aspect: 6.4 6.4;
//	       aspect_preference: HORIZONTAL;
	       align: 0.0 0.0;
               min: 0 10;
	       rel1 {
		  to: "base";
		  relative: 0.0 1.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: -1 0;
	       }
	       image {
		  normal: "ilist_item_shadow.png";
	       }
               fill.smooth: 0;
	    }
	 }
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_header_1.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {
	    name:          "e.swallow.icon";
	    type:          SWALLOW;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "e.swallow.icon";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       color_class: "ilist_item";
	       text {
                  font: "Sans:style=Bold";
		  size: 16;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name:    "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program {
	    name:    "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
      }
   }

   group { name: "e/widgets/ilist_header_odd";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "ilist_header_2.png" COMP;
      }
      parts {
	 part {
	    name: "base";
	    mouse_events: 0;
	    description {
	       state: "default" 0.0;
	       image {
		  normal: "ilist_header_2.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -5 -5;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       image {
		  normal: "bt_sm_base1.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: -2 -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
	       }
	    }
	 }
	 part {
	    name:          "e.swallow.icon";
	    type:          SWALLOW;
	    description {
	       state:    "default" 0.0;
	       align:    0.0 0.5;
	       aspect:   1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0  0.0;
		  offset:   4    4;
	       }
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   4   -5;
	       }
	    }
	 }
	 part {
	    name:           "e.text.label";
	    type:           TEXT;
	    effect:         SOFT_SHADOW;
	    mouse_events:   0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       min:      16 16;
	       rel1 {
		  to_x:     "e.swallow.icon";
		  relative: 1.0  0.0;
		  offset:   4 4;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -5 -5;
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       color_class: "ilist_item";
	       text {
                  font: "Sans:style=Bold";
		  size: 16;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "ilist_item";
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "ilist_item";
	    }
	 }
         part { name: "fg1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "fg2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part {
	    name:           "event";
	    type:           RECT;
	    description {
	       state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	    name:    "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	 }
	 program {
	    name:    "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "fg1";
	    target:  "fg2";
	    target:  "e.text.label";
	    transition: LINEAR 0.1;
	 }
      }
   }

   group { name: "e/widgets/entry";
//      min: 12 12;
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name: "base";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2  -2;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.text";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  offset: 2 2;
		  to: "base";
	       }
	       rel2 {
		  offset: -3 -3;
		  to: "base";
	       }
	    }
	 }
	 part { name: "overlay";
	    description { state: "default" 0.0;
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
      }
   }

   group { name: "e/widgets/entry/text";
      parts {
	 part { name: "e.text.text";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 255;
	       color_class: "entry_text";
	       text {
		  text: "";
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.0;
		  text_class: "entry";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color: 164 164 164 255;
	    }
	 }
      }
      programs {
	 program { name: "disable";
	       signal: "e,state,disabled";
	       source: "e";
	       action: STATE_SET "disabled" 0.0;
	       target: "e.text.text";
	 }
	 program { name: "enable";
	       signal: "e,state,enabled";
	       source: "e";
	       action: STATE_SET "default" 0.0;
	       target: "e.text.text";
	 }
      }
   }

   group { name: "e/widgets/entry/cursor";
      min: 1 0;
      parts {
	 part { name: "cursor";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.offset: 1 0;
	       rel2.offset: 0 -1;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 255;
	    }
	 }
      }
      programs {
	 program { name: "on_cursor_show";
	    signal:  "e,action,show,cursor";
	    source:  "e";
	    action: ACTION_STOP;
	    target: "cursor_show";
	    target: "cursor_hide";
	    target: "cursor_show_timer";
	    target: "cursor_hide_timer";
	    after: "cursor_show";
	 }
	 program { name: "cursor_show";
	    action: STATE_SET "visible" 0.0;
	    target: "cursor";
	    after: "cursor_show_timer";
	 }
	 program { name: "cursor_hide";
	    action: STATE_SET "default" 0.0;
	    target: "cursor";
	    transition: SINUSOIDAL 0.2;
	    after: "cursor_hide_timer";
	 }
	 program { name: "cursor_show_timer";
	    in: 0.55 0.0;
	    after: "cursor_hide";
	 }
	 program { name: "cursor_hide_timer";
	    in: 0.2 0.0;
	    after: "cursor_show";
	 }
      }
   }

   group { name: "e/widgets/entry/selection";
      data.item: "on_foreground" "1";
      parts {
	 part { name: "selection";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.offset: 2 0;
	       rel2.offset: 1 -1;
	       color: 164 164 164 100;
	    }
	 }
      }
   }

   group { name: "e/widgets/preview";
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name: "clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.swallow.content";
	       rel2.to: "e.swallow.content";
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clip";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
	 part { name:          "border";
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
      }
   }

   group { name: "e/widgets/deskpreview/desk";
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name: "clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.swallow.content";
	       rel2.to: "e.swallow.content";
	    }
	 }
	 part { name: "e.swallow.content";
	    clip_to: "clip";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
	 part { name:          "border";
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "e.event.menu";
	    type: RECT;
	    description { state: "default" 0.0;
	      color: 0 0 0 0;
	    }
	 }
      }
   }

   group { name: "e/widgets/color_well";
      alias:  "e/widgets/gradpreview";
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name:  "content_clip";
	    type:  RECT;
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       rel1.to:  "e.swallow.content";
	       rel2.to:  "e.swallow.content";
	       color: 255 255 255 255;
	    }
	    description { state:    "disabled" 0.0;
	       inherit:  "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name:  "e.swallow.content";
	    type:  SWALLOW;
	    clip_to:  "content_clip";
	    description { state:    "default" 0.0;
	       rel1.offset:   4  4;
	       rel2.offset:   -5  -5;
	    }
	 }
	 part { name:          "border";
	    mouse_events:  1;
	    description { state:    "default" 0.0;
	       rel1 {
		  to:  "e.swallow.content";
		  offset: -1 -1;
	       }
	       rel2 {
		  to:  "e.swallow.content";
		  offset: 0 0;
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
     }
      programs {
	 program { name: "send_click";
	    signal: "mouse,clicked,1";
	    source: "border";
	    action: SIGNAL_EMIT "e,action,click" "";
	 }
	 program { name: "disable";
	     signal: "e,state,disabled";
	     source: "e";
	     action: STATE_SET "disabled" 0.0;
	     target: "content_clip";
	 }
	 program { name: "enable";
	     signal: "e,state,enabled";
	     source: "e";
	     action: STATE_SET "default" 0.0;
	     target: "content_clip";
	 }
      }
   }

   group { name: "e/widgets/spectrum";
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name:  "content_clip";
	    type:  RECT;
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       rel1.to:  "e.swallow.content";
	       rel2.to:  "e.swallow.content";
	       color: 255 255 255 255;
	    }
	 }
	 part { name:  "e.swallow.content";
	    type:  SWALLOW;
	    clip_to:  "content_clip";
	    description { state:    "default" 0.0;
	       rel1.offset:   4  4;
	       rel2.offset:   -5  -5;
	    }
	 }
	 part { name:          "border";
	    mouse_events:  1;
	    description { state:    "default" 0.0;
	       rel1 {
		  to:  "e.swallow.content";
		  offset: -1 -1;
	       }
	       rel2 {
		  to:  "e.swallow.content";
		  offset: 0 0;
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "e.dragable.cursor";
	    type: RECT;
	    dragable {
	       confine: "e.swallow.content";
	       x: 1 1 0;
	       y: 1 1 0;
	    }
	    description { state: "default" 0.0;
	       min: 1 1;
	       max: 1 1;
	       fixed: 1 1;
	       visible: 0;
	       rel1 {
		  to: "e.swallow.content";
		  relative: 0.5 0.5;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "e.swallow.content";
		  relative: 0.5 0.5;
		  offset: 0 0;
	       }
	    }
	 }
	 part { name: "cursor_x";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to_x: "e.dragable.cursor";
		  to_y: "e.swallow.content";
	       }
	       rel2 {
		  to_x: "e.dragable.cursor";
		  to_y: "e.swallow.content";
	       }
	       color: 255 255 255 150;
	    }
	 }
	 part { name: "cursor_y";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1 {
		  to_x: "e.swallow.content";
		  to_y: "e.dragable.cursor";
	       }
	       rel2 {
		  to_x: "e.swallow.content";
		  to_y: "e.dragable.cursor";
	       }
	       color: 255 255 255 150;
	    }
	 }
      }
   }

   group { name: "e/widgets/cslider";
      images.image: "inset_sunk.png" COMP;
      parts {
	 part { name:  "content_clip";
	    type:  RECT;
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       rel1.to:  "e.swallow.content";
	       rel2.to:  "e.swallow.content";
	       color: 255 255 255 255;
	    }
	 }
	 part { name:  "e.swallow.content";
	    type:  SWALLOW;
	    clip_to:  "content_clip";
	    description { state:    "default" 0.0;
	       min: 50 20;
	       rel1.offset:   4    4;
	       rel2.offset:   -5    -5;
	    }
	    description { state: "vertical" 0.0;
	       inherit: "default" 0.0;
	       min: 20 50;
	    }
	 }
	 part { name: "border";
	    mouse_events:  1;
	    description { state:    "default" 0.0;
	       rel1 {
		  to:  "e.swallow.content";
		  offset: -1 -1;
	       }
	       rel2 {
		  to:  "e.swallow.content";
		  offset: 0 0;
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "e.dragable.cursor";
	    type: RECT;
	    clip_to:       "content_clip";
	    dragable {
	       confine: "e.swallow.content";
	       x: 1 1 0;
	       y: -1 1 0;
	    }
	    description { state: "default" 0.0;
	       min: 1 24;
	       max: 1 9999;
	       fixed: 1 1;
	       rel1 {
		  to: "e.swallow.content";
		  relative: 0.5 0.0;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "e.swallow.content";
		  relative: 0.5 1.0;
		  offset: 0 -1;
	       }
	       color: 255 255 255 150;
	    }
	    description { state: "vertical" 0.0;
	       min: 24 1;
	       max: 9999 1;
	       fixed: 1 1;
	       rel1 {
		  to: "e.swallow.content";
		  relative: 0.0 0.5 ;
		  offset: 0 0;
	       }
	       rel2 {
		  to: "e.swallow.content";
		  relative: 1.0 0.5;
		  offset: -1 0;
	       }
	       color: 255 255 255 150;
	    }
	 }
      }
      programs {
	 program { name: "go_vertical";
	    signal: "e,state,direction,v";
	    source: "e";
	    action: STATE_SET "vertical" 0.0;
	    target: "e.dragable.cursor";
	    target: "e.swallow.content";
	 }
      }
   }

   group { name: "e/widgets/slider_vertical";
      images {
	 image: "slider.png" COMP;
	 image: "slider_clicked.png" COMP;
	 image: "sb_runnerv.png" COMP;
	 image: "inset_sunk.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       min: 22 0;
	       rel1.offset: 2 2;
	       rel2.offset: -3 -3;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  to_y: "label";
		  relative: 1.0  0.0;
		  offset:   -3   -1;
	       }
	    }
	 }
	 part { name: "runner";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       max: 3 99999;
	       rel1.to: "base";
	       rel2.to: "base";
	       image {
		  normal: "sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "label_base";
	    clip_to: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	       visible: 0;
	       rel1.to: "label";
	       rel1.offset: 1 1;
	       rel2.to: "label";
	       rel2.offset: -2 -2;
	    }
	    description { state:  "active" 0.0;
	       inherit: "default" 0.0;
	       visible:  1;
	    }
	 }
	 part { name:  "label";
	    mouse_events:  0;
	    clip_to: "clip";
	    description { state:  "default" 0.0;
	       visible:  0;
	    }
	    description { state:  "active" 0.0;
	       rel1 {
		  to:  "e.text.label";
		  offset:  -4  -2;
	       }
	       rel2 {
		  to:  "e.text.label";
		  offset:  3  1;
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name:  "e.text.label";
	    type:  TEXT;
	    mouse_events:   0;
	    clip_to: "clip";
	    scale: 1;
	    description { state:  "default" 0.0;
	       visible:  0;
	    }
	    description { state: "active" 0.0;
	       align: 0.5 1.0;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   7    -8;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -8  -8;
	       }
	       color: 0 0 0 255;
	       color_class: "slider_text";
	       text { text:     "0.0";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "slider";
	       }
	    }
	 }
	 part { name: "sld_p1";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel2 {
		  relative: 1.0 0.0;
		  to:  "e.dragable.slider";
	       }
	    }
	 }
	 part { name: "sld_p2";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:  "e.dragable.slider";
	       }
	    }
	 }
	 part { name: "e.dragable.slider";
	    type: RECT;
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 0 0 0;
	       y: -1 1 0;
	       confine: "base";
	    }
	    description { state: "default" 0.0;
	       min: 11 11;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "base";
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "button";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 22 22;
	       fixed: 1 1;
	       rel1.to: "e.dragable.slider";
	       rel2.to: "e.dragable.slider";
	       image.normal: "slider.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "slider_clicked.png";
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	    description {
	       state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "sld_p1_down";
	    signal: "mouse,down,1";
	    source: "sld_p1";
	    action:  DRAG_VAL_PAGE 0.0 -1.0;
	    target: "e.dragable.slider";
	 }
	 program { name: "sld_p2_down";
	    signal: "mouse,down,1";
	    source: "sld_p2";
	    action:  DRAG_VAL_PAGE  0.0 1.0;
	    target: "e.dragable.slider";
	 }
	 program { name: "button_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.slider";
	    action:  STATE_SET "clicked" 0.0;
	    target: "button";
	 }
	 program { name: "button_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.slider";
	    action:  STATE_SET "default" 0.0;
	    target: "button";
	 }
	 program { name: "show_label";
	    signal: "e,action,show,label";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    target: "base";
	    target: "label";
	    target: "label_base";
	    target: "e.text.label";
	 }
	 program { name: "hide_label";
	    signal: "e,action,hide,label";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	    target: "label";
	    target: "label_base";
	    target: "e.text.label";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "clip";
	    target: "event";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "clip";
	    target: "event";
	 }
      }
   }

   group { name: "e/widgets/slider_horizontal";
      images {
	 image: "slider.png" COMP;
	 image: "slider_clicked.png" COMP;
	 image: "sb_runnerh.png" COMP;
	 image: "inset_sunk.png" COMP;
      }
      parts {
	 part { name: "base";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       min: 0 22;
	       rel1.offset: 2 2;
	       rel2.offset: -3 -3;
	    }
	    description { state: "active" 0.0;
	       inherit: "default" 0.0;
	       rel2 {
		  to_x: "label";
		  relative: 0.0  1.0;
		  offset:   -1   -3;
	       }
	    }
	 }
	 part { name: "runner";
	    mouse_events: 0;
	    clip_to: "clip";
	    description { state: "default" 0.0;
	       max: 99999 3;
	       rel1.to:  "base";
	       rel2.to:  "base";
	       image {
		  normal: "sb_runnerh.png";
		  border: 4 4 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "label_base";
	    clip_to: "clip";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 255;
	       visible: 0;
	       rel1.to: "label";
	       rel1.offset: 1 1;
	       rel2.to: "label";
	       rel2.offset: -2 -2;
	    }
	    description { state:  "active" 0.0;
	       inherit: "default" 0.0;
	       visible:  1;
	    }
	 }
	 part { name:  "label";
	    mouse_events:  0;
	    clip_to: "clip";
	    description { state:  "default" 0.0;
	       visible:  0;
	    }
	    description { state:  "active" 0.0;
	       min: 20 0;
	       rel1 {
		  to:  "e.text.label";
		  offset:  -4 -2;
	       }
	       rel2 {
		  to:       "e.text.label";
		  offset:   2   1;
	       }
	       image {
		  normal: "inset_sunk.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name:  "e.text.label";
	    type:  TEXT;
	    mouse_events:  0;
	    clip_to: "clip";
	    scale: 1;
	    description { state:  "default" 0.0;
	       visible:  0;
	    }
	    description { state: "active" 0.0;
	       align: 1.0 0.5;
	       fixed: 1 0;
	       rel1 {
		  relative: 1.0  0.0;
		  offset:   -8   7;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -8 -8;
	       }
	       color: 0 0 0 255;
	       color_class: "slider_text";
	       text { text:  "0.0";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "slider";
	       }
	    }
	 }
	 part { name: "sld_p1";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel2 {
		  relative: 0.0 1.0;
		  to:  "e.dragable.slider";
	       }
	    }
	 }
	 part { name: "sld_p2";
	    type: RECT;
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 1.0 0.0;
		  to:  "e.dragable.slider";
	       }
	    }
	 }
	 part { name: "e.dragable.slider";
	    type: RECT;
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "base";
	    }
	    description { state: "default" 0.0;
	       min: 11 11;
	       fixed: 1 1;
	       rel1 {
		  relative: 0.5  0.5;
		  to: "base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "base";
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "slider";
	    mouse_events: 0;
	    clip_to: "clip";
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 22 22;
	       fixed: 1 1;
	       rel1.to: "e.dragable.slider";
	       rel2.to: "e.dragable.slider";
	       image.normal: "slider.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "slider_clicked.png";
	    }
	 }
	 part { name: "clip";
	    type: RECT;
	    description { state: "default" 0.0; }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
	    description {
	       state: "default" 0.0;
	       visible: 0;
	       color: 0 0 0 0;
	    }
	    description {
	       state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "sld_p1_down";
	    signal: "mouse,down,1";
	    source: "sld_p1";
	    action:  DRAG_VAL_PAGE -1.0 0.0;
	    target: "e.dragable.slider";
	 }
	 program { name: "sld_p2_down";
	    signal: "mouse,down,1";
	    source: "sld_p2";
	    action:  DRAG_VAL_PAGE  1.0 0.0;
	    target: "e.dragable.slider";
	 }
	 program { name: "sld_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.slider";
	    action:  STATE_SET "clicked" 0.0;
	    target: "slider";
	 }
	 program { name: "sld_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.slider";
	    action:  STATE_SET "default" 0.0;
	    target: "slider";
	 }
	 program { name: "show_label";
	    signal: "e,action,show,label";
	    source: "e";
	    action: STATE_SET "active" 0.0;
	    target: "base";
	    target: "label";
	    target: "label_base";
	    target: "e.text.label";
	 }
	 program { name: "hide_label";
	    signal: "e,action,hide,label";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "base";
	    target: "label";
	    target: "label_base";
	    target: "e.text.label";
	 }
	 program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "clip";
	    target: "event";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "clip";
	    target: "event";
	 }
      }
   }

   group { name: "e/widgets/frame";
      images {
	 image: "frame_1.png" COMP;
	 image: "frame_2.png" COMP;
         image: "dia_grad.png" COMP;
      }
      parts {
         part { name: "base0";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "frame_base";
	       image.normal: "dia_grad.png";
	       rel1.to: "over";
	       rel2.to: "over";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       image {
		  normal: "frame_2.png";
		  border: 5 5 32 26;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "e.text.label";
		  relative: 0.0 1.0;
		  offset: 8 2;
	       }
	       rel2.offset: -9 -9;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events:   0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 6 6;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -7 6;
	       }
	       color: 0 0 0 64;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  max: 1 1;
		  align: 0.0 0.0;
		  text_class: "frame";
	       }
	    }
	 }
	 part { name: "over";
	    mouse_events:  0;
	    description { state:    "default" 0.0;
	       rel1.offset: 4 4;
	       rel2.offset: -5 -5;
	       image {
		  normal: "frame_1.png";
		  border: 2 2 28 22;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
      }
   }

   group { name: "e/widgets/label";
      parts {
	 part { name: "e.text.label";
	    type: TEXT;
	    mouse_events:   0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.offset: 2 2;
	       rel2.offset: -3 -3;
	       color: 0 0 0 255;
	       color_class: "label_text";
	       text {
	          font: "Sans";
	          size: 10;
	          min: 1 1;
	          align: 0.0 0.5;
	          text_class: "label";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
               color_class: "label_text_disabled";
	    }
	 }
      }
      programs {
         program { name: "disable";
	    signal: "e,state,disabled";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
            target: "e.text.label";
	 }
	 program { name: "enable";
	    signal: "e,state,enabled";
	    source: "e";
	    action: STATE_SET "default" 0.0;
            target: "e.text.label";
	 }
      }
   }

   group { name: "e/widgets/fontpreview";
      parts {
	 part { name: "e.fontpreview.text";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 255;
	       color_class: "entry_text";
	       rel1.offset: 6 6;
	       rel2.offset: -7 -7;
	       text {
		  text: "The quick brown fox jumped over YA MUM!";
		  font: "Sans";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
		  text_class: "_e_font_preview";
	       }
	    }
	 }
      }
   }

   group { name: "e/widgets/textblock";
      styles {
	 style { name: "textblock_style";
	    base: "font=Sans font_size=10 align=left color=#000 style=shadow shadow_color=#ffffff80 wrap=word";
	    tag:  "title" "+ font=Sans:style=Bold font_size=12 style=soft_shadow color=#fff shadow_color=#00000021";
	    tag:  "hilight" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333333be glow_color=#0000005a";
	    tag:  "urgent" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333 glow_color=#b01010";
	    tag:  "b" "+ font=Sans:style=Bold";
	    tag:  "br" "\n";
	 }
      }
      parts {
	 part { name:	"e.textblock.text";
	    type:	TEXTBLOCK;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1.offset: 4 4;
	       rel2.offset: -5 -5;
	       text {
		  style:    "textblock_style";
		  min:      1 1;
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: DESKLOCK ***/

   group { name: "e/desklock/background";
      images {
	 image: "vgrad_dark.png" COMP;
	 image: "grill_dark_tiny_pattern.png" COMP;
      }
      parts {
	 part { name: "background_image";
	    description { state: "default" 0.0;
	       image.normal: "vgrad_dark.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part { name: "grill";
	    description { state: "default" 0.0;
	       image.normal: "grill_dark_tiny_pattern.png";
	       fill {
		  size {
		     relative: 0 0;
		     offset: 144 144;
		  }
	       }
	    }
	 }
	 part { name: "e.swallow.login_box";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	    }
	 }
      }
   }

   group { name: "e/desklock/login_box";
      images {
	 image: "logo_white_128.png" COMP;
	 image: "inset_sunk.png" COMP;
      }
      parts {
	 part { name: "logo";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 64 64;
	       max: 64 64;
	       image.normal: "logo_white_128.png";
	    }
	 }
	 part { name: "e.text.title";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 0 8;
		  to_y: "logo";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 8;
		  to_y: "logo";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       text {
		  text: "Enter Password";
		  font: "Sans:style=Bold";
		  size: 10;
		  align: 0.5 0.5;
		  min: 1 1;
		  text_class: "desklock_title";
	       }
	    }
	 }
	 part { name: "pulse_clip";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "passwd_border";
	       rel2.to: "passwd_border";
	    }
	    description { state: "pulse" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
	 part { name: "error";
	    type: RECT;
	    mouse_events: 0;
	    clip_to: "error_clip";
	    description { state: "default" 0.0;
	       rel1.to: "passwd_border";
	       rel2.to: "passwd_border";
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "error_clip";
	    type: RECT;
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       rel1.to: "passwd_border";
	       rel2.to: "passwd_border";
	       color: 255 255 255 255;
	    }
	    description { state: "invalid" 0.0;
	       inherit: "default" 0.0;
	       color: 255 128 128 255;	/*FIXME: Document how this works */
	    }
	 }
	 part { name: "passwd_entry_clip";
	    type: RECT;
	    mouse_events: 0;
	    clip_to: "pulse_clip";
	    description { state: "default" 0.0;
	       visible: 1;
	       rel1 {
		  offset: 6 3;
		  to: "passwd_border";
	       }
	       rel2 {
		  offset: -7 -4;
		  to: "passwd_border";
	       }
	    }
	 }
	 part { name: "e.text.password";
	    type: TEXT;
	    clip_to: "passwd_entry_clip";
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 0 1;
	       align: 0.0 0.5;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 0;
		  to: "passwd_entry_clip";
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 0 0;
		  to: "passwd_entry_clip";
	       }
	       color: 0 0 0 255;
	       text {
		  text: "****";
		  font: "Sans:style=Bold";
		  size: 16;
		  align: 0.0 0.5;
		  min: 1 1;
		  text_class: "desklock_passwd";
	       }
	    }
	 }
	 part { name: "cursor";
	    type: RECT;
	    mouse_events: 0;
	    clip_to: "passwd_entry_clip";
	    description { state: "default" 0.0;
	       min: 1 16;
	       max: 1 16;
	       align: 0.0 0.5;
	       fixed: 1 1;
	       rel1 {
		  relative: 1.0 0.0;
		  offset: 0 -3;
		  to: "e.text.password";
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: 1 1;
		  to: "e.text.password";
	       }
	       color: 0 0 0 255;
	    }
	 }
	 part { name: "passwd_border";
	    mouse_events: 0;
	    clip_to: "error_clip";
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.5 1.0;
		  offset: -80 2;
		  to_y: "e.text.title";
	       }
	       rel2 {
		  relative: 0.5 1.0;
		  offset: 79 20;
		  to_y: "e.text.title";
	       }
	       image {
		  normal: "inset_sunk.png";
		  middle: 0;
		  border: 7 7 7 7;
	       }
	       fill.smooth: 0;
	    }
	    description { state: "checking" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 128;
	    }
	 }
      }
      programs {
	 program { name: "pulse.1";
	    signal: "e,state,checking";
	    source: "e.desklock";
	    action: STATE_SET "pulse" 0.0;
	    target: "pulse_clip";
	    transition: SINUSOIDAL 0.5;
	    after: "pulse.2";
	 }
	 program { name: "pulse.2";
	    action: STATE_SET "default" 0.0;
	    target: "pulse_clip";
	    transition: SINUSOIDAL 0.5;
	    after: "pulse.1";
	 }
	 program { name: "pulse.stop";
	    signal: "e,state,invalid";
	    source: "e.desklock";
	    action: ACTION_STOP;
	    target: "pulse.1";
	    target: "pulse.2";
	    after: "pulse.reset";
	 }
	 program { name: "pulse.reset";
	    action: STATE_SET "default" 0.0;
	    target: "pulse_clip";
	    transition: SINUSOIDAL 0.5;
	 }
	 program { name: "go_invalid";
	    signal: "e,state,invalid";
	    source: "e.desklock";
	    action: STATE_SET "invalid" 0.0;
	    target: "error_clip";
	    transition: DECELERATE 0.5;
	 }
	 program { name: "stop_invalid";
	    action: STATE_SET "default" 0.0;
	    target: "error_clip";
	    transition: DECELERATE 1.5;
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** GADMAN ***/

   group { name: "e/gadman/popup";
      images.image: "base_bg.png" COMP;
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       image {
		  normal: "base_bg.png";
		  border: 2 2 2 2;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 3 3;
	       rel2.offset: -4 -4;
	    }
	 }
      }
   }

   group { name: "e/gadman/full_bg";
      parts {
	 part{ name: "bg";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	    description { state: "visible" 0.0;
	       color: 0 0 0 128;
	    }
	 }
	 part {
	    name: "custom_bg";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       color: 255 255 255 200;
	    }
	 }
	 part {
	    name: "e.swallow.bg";
	    type: SWALLOW;
	    clip_to: "custom_bg";
	    description {
	       state: "default" 0.0;
	    }
	 }
	 part {
	    name: "grabber";
	    type: RECT;
	    mouse_events:  1;
	    repeat_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	}
	programs {
	 program { name: "show";
	    signal: "e,state,visibility,show";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.4;
	    target: "bg";
	 }
	 program { name: "show_now";
	    signal: "e,state,visibility,show,now";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.0;
	    target: "bg";
	 }
	 program { name: "hide";
	    signal: "e,state,visibility,hide";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.4;
	    target: "bg";
            after: "hide_stop";
	 }
	 program { name: "hide_now";
	    signal: "e,state,visibility,hide,now";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.0;
	    target: "bg";
            after: "hide_stop";
	 }
	 program { name: "show_custom";
	    signal: "e,state,visibility,show,custom";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.4;
	    target: "custom_bg";
	 }
	 program { name: "show_custom_now";
	    signal: "e,state,visibility,show,custom,now";
	    source: "e";
	    action: STATE_SET "visible" 0.0;
	    transition: LINEAR 0.0;
	    target: "custom_bg";
	 }
	 program { name: "hide_custom";
	    signal: "e,state,visibility,hide,custom";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.4;
	    target: "custom_bg";
            after: "hide_stop";
	 }
	 program { name: "hide_custom_now";
	    signal: "e,state,visibility,hide,custom,now";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.0;
	    target: "custom_bg";
            after: "hide_stop";
	 }
         program { name: "hide_stop";
             action: SIGNAL_EMIT "e,action,hide,stop" "";
         }
      }
   }

   group { name: "e/gadman/frame";
      images.image: "inset_raised.png" COMP;
      parts {
	 part{ name: "bg_clip";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "overlay";
	       rel2.to: "overlay";
	       color: 255 255 255 255;
	    }
	    description { state: "plain" 0.0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 0.0 0.0;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "items_clip";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "overlay";
		  offset: 4  4;
	       }
	       rel2 {
		  to: "overlay";
		  offset: -5  -5;
	       }
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    clip_to: "items_clip";
	    description { state: "default" 0.0;
	       rel1.offset: 4  4;
	       rel2.offset: -5  -5;
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       rel1.relative: 0.5 0.5;
	       rel2.relative: 0.5 0.5;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "overlay";
	    mouse_events:  0;
	    clip_to: "bg_clip";
	    description { state: "default" 0.0;
	       image {
		  normal: "inset_raised.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth: 0;
	       color: 255 255 255 255;
	    }
	    description { state: "hidden" 0.0;
	       inherit: "default" 0.0;
	       rel1.relative: 0.5 0.5;
	       rel2.relative: 0.5 0.5;
	       color: 255 255 255 0;
	    }
	 }
      }
      programs {
	 program { name: "inset";
	    signal:  "e,state,visibility,inset";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg_clip";
	 }
	 program { name: "plain";
	    signal:  "e,state,visibility,plain";
	    source:  "e";
	    action:  STATE_SET "plain" 0.0;
	    target:  "bg_clip";
	 }
	 program { name: "hide";
	    signal:  "e,state,visibility,hide";
	    source:  "e";
	    action:  STATE_SET "hidden" 0.0;
	    transition:  ACCELERATE 0.4;
	    target:  "items_clip";
	    target:  "overlay";
	    target:  "e.swallow.content";
	 }
	 program { name: "hide_now";
	    signal:  "e,state,visibility,hide,now";
	    source:  "e";
	    action:  STATE_SET "hidden" 0.0;
	    transition:  LINEAR 0.0;
	    target:  "items_clip";
	    target:  "overlay";
	    target:  "e.swallow.content";
	 }
	 program { name: "show";
	    signal:  "e,state,visibility,show";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    transition:  DECELERATE 0.4;
	    target:  "items_clip";
	    target:  "overlay";
	    target:  "e.swallow.content";
	 }
	 program { name: "show_now";
	    signal:  "e,state,visibility,show,now";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    transition:  LINEAR 0.0;
	    target:  "items_clip";
	    target:  "overlay";
	    target:  "e.swallow.content";
	 }
      }
   }

   group { name: "e/gadman/control";
      images {
	 image: "gadman_frame.png" COMP;
	 image: "gadman_border.png" COMP;
	 image: "gadman_top.png" COMP;
	 image: "gadman_bottom.png" COMP;
	 image: "gadman_left.png" COMP;
	 image: "gadman_right.png" COMP;
      }
      parts {
	 part { name: "hclip";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       rel1.offset: -85 -85;
	       rel2.offset: 74 74;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible : 0;
	    }
	 }
	 part { name: "vclip";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
	       visible: 1;
	       rel1.offset: -85 -85;
	       rel2.offset: 84 84;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible : 0;
	    }
	 }
	 part { name: "overlay";
	    mouse_events:  1;
	    description { state: "default" 0.0;
	       rel1 { to: "border"; offset: 4 4; }
	       rel2 { to: "border"; offset: -5 -5; }
	       image.normal: "gadman_frame.png";
	       fill.size.relative: 0 0;
	       fill.size.offset: 24 24;
	    }
	 }
	 part { name: "left_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 12 24;
	       rel1 { relative: 0.0 0.5; offset: 3 0; }
	       rel2 { relative: 0.0 0.5; offset: 3 -1; }
	       image.normal: "gadman_left.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.0 0.5; offset: -32 -12; }
	       rel2 { relative: 0.0 0.5; offset: -18 11; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.0 0.5; offset: -24 -6; }
	       rel2 { relative: 0.0 0.5; offset: -10 5; }
	    }
	 }
	 part { name: "left_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 12 24;
	       rel1 { relative: 0.0 0.5; offset: 3 0; }
	       rel2 { relative: 0.0 0.5; offset: 3 -1; }
	       image.normal: "gadman_left.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.0 0.5; offset: -32 -12; }
	       rel2 { relative: 0.0 0.5; offset: -18 11; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.0 0.5; offset: -24 -6; }
	       rel2 { relative: 0.0 0.5; offset: -10 5; }
	    }
	 }
	 part { name: "right_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 12 24;
	       rel1 { relative: 1.0 0.5; offset: -3 0; }
	       rel2 { relative: 1.0 0.5; offset: -3 -1; }
	       image.normal: "gadman_right.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 1.0 0.5; offset: 32 -12; }
	       rel2 { relative: 1.0 0.5; offset: 18 11; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 1.0 0.5; offset: 24 -6; }
	       rel2 { relative: 1.0 0.5; offset: 10 5; }
	    }
	 }
	 part { name: "right_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 12 24;
	       rel1 { relative: 1.0 0.5; offset: -3 0; }
	       rel2 { relative: 1.0 0.5; offset: -3 -1; }
	       image.normal: "gadman_right.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 1.0 0.5; offset: 32 -12; }
	       rel2 { relative: 1.0 0.5; offset: 18 11; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 1.0 0.5; offset: 24 -6; }
	       rel2 { relative: 1.0 0.5; offset: 10 5; }
	    }
	 }
	 part { name: "top_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 24 12;
	       rel1 { relative: 0.5 0.0; offset: 0 3; }
	       rel2 { relative: 0.5 0.0; offset: -1 3; }
	       image.normal: "gadman_top.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 0.0; offset: -12 -32; }
	       rel2 { relative: 0.5 0.0; offset: 11 -18; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 0.0; offset: -6 -24; }
	       rel2 { relative: 0.5 0.0; offset: 5 -9; }
	    }
	 }
	 part { name: "top_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 24 12;
	       rel1 { relative: 0.5 0.0; offset: 0 3; }
	       rel2 { relative: 0.5 0.0; offset: -1 3; }
	       image.normal: "gadman_top.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 0.0; offset: -12 -32; }
	       rel2 { relative: 0.5 0.0; offset: 11 -18; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 0.0; offset: -6 -24; }
	       rel2 { relative: 0.5 0.0; offset: 5 -9; }
	    }
	 }
	 part { name: "bottom_arrow1";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 24 12;
	       rel1 { relative: 0.5 1.0; offset: 0 -3; }
	       rel2 { relative: 0.5 1.0; offset: -1 -3; }
	       image.normal: "gadman_bottom.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 1.0; offset: -12 18; }
	       rel2 { relative: 0.5 1.0; offset: 11 31; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 1.0; offset: -6 10; }
	       rel2 { relative: 0.5 1.0; offset: 5 24; }
	    }
	 }
	 part { name: "bottom_arrow2";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       max: 24 12;
	       rel1 { relative: 0.5 1.0; offset: 0 -3; }
	       rel2 { relative: 0.5 1.0; offset: -1 -3; }
	       image.normal: "gadman_bottom.png";
	    }
	    description { state: "1" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 1.0; offset: -12 18; }
	       rel2 { relative: 0.5 1.0; offset: 11 31; }
	    }
	    description { state: "2" 0.0;
	       inherit: "default" 0.0;
	       rel1 { relative: 0.5 1.0; offset: -6 10; }
	       rel2 { relative: 0.5 1.0; offset: 5 24; }
	    }
	 }
	 part { name: "v1";
	    mouse_events:  1;
	    clip_to: "vclip";
	    description { state: "default" 0.0;
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 9;
	    }
	 }
	 part { name: "v2";
	    mouse_events:  1;
	    clip_to: "vclip";
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -8;
	    }
	 }
	 part { name: "h1";
	    mouse_events:  1;
	    clip_to: "hclip";
	    description { state: "default" 0.0;
	       rel2.relative: 0.0 1.0;
	       rel2.offset: 9 -1;
	    }
	 }
	 part { name: "h2";
	    mouse_events:  1;
	    clip_to: "hclip";
	    description { state: "default" 0.0;
	       rel1.relative: 1.0 0.0;
	       rel1.offset: -8 0;
	    }
	 }
	 part { name: "border";
	    mouse_events:  1;
	    repeat_events:  1;
	    description { state: "default" 0.0;
	       image {
		  normal: "gadman_border.png";
		  border: 10 10 10 10;
		  middle: 0;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
      programs {
	 program { name: "api_hsize_on";
	    signal:  "e,state,hsize,on";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "hclip";
	 }
	 program { name: "api_hsize_off";
	    signal:  "e,state,hsize,off";
	    source:  "e";
	    action:  STATE_SET "disabled" 0.0;
	    target:  "hclip";
	 }
	 program { name: "api_vsize_on";
	    signal:  "e,state,vsize,on";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "vclip";
	 }
	 program { name: "api_vsize_off";
	    signal:  "e,state,vsize,off";
	    source:  "e";
	    action:  STATE_SET "disabled" 0.0;
	    target:  "vclip";
	 }
   /*
	 program {
	    name:    "api_move_on";
	    signal:  "e,state,move,on";
	    source:  "e";
	 }
	 program {
	    name:    "api_move_off";
	    signal:  "e,state,move,off";
	    source:  "e";
	 }
	 program {
	    name:    "api_active";
	    signal:  "e,state,focused";
	    source:  "e";
	 }
	 program {
	    name:    "api_inactive";
	    signal:  "e,state,unfocused";
	    source:  "e";
	 }
   */

      // MOVE PROGRAMS
	 program { name: "mv_down";
	    signal:  "mouse,down,1";
	    source:  "overlay";
	    action:  SIGNAL_EMIT "e,action,move,start" "";
	 }
	 program { name: "mv_up";
	    signal:  "mouse,up,1";
	    source:  "overlay";
	    action:  SIGNAL_EMIT "e,action,move,stop" "";
	 }
	 program { name: "mv_move";
	    signal:  "mouse,move";
	    source:  "overlay";
	    action:  SIGNAL_EMIT "e,action,move,go" "";
	 }
	 program { name: "h1_down1";
	    signal:  "mouse,down,1";
	    source:  "h1";
	    action:  STATE_SET "clicked" 0.0;
	    target:  "h1";
	 }
	 program { name: "h1_up1";
	    signal:  "mouse,up,1";
	    source:  "h1";
	    action:  STATE_SET "default" 0.0;
	    target:  "h1";
	 }
	 program { name: "h1_down2";
	    signal:  "mouse,down,1";
	    source:  "h1";
	    action:  SIGNAL_EMIT "e,action,resize,left,start" "";
	 }
	 program { name: "h1_up2";
	    signal:  "mouse,up,1";
	    source:  "h1";
	    action:  SIGNAL_EMIT "e,action,resize,left,stop" "";
	 }
	 program { name: "h1_move";
	    signal:  "mouse,move";
	    source:  "h1";
	    action:  SIGNAL_EMIT "e,action,resize,left,go" "";
	 }
	 program { name: "h2_down1";
	    signal:  "mouse,down,1";
	    source:  "h2";
	    action:  STATE_SET "clicked" 0.0;
	    target:  "h2";
	 }
	 program { name: "h2_up1";
	    signal:  "mouse,up,1";
	    source:  "h2";
	    action:  STATE_SET "default" 0.0;
	    target:  "h2";
	 }
	 program { name: "h2_down2";
	    signal:  "mouse,down,1";
	    source:  "h2";
	    action:  SIGNAL_EMIT "e,action,resize,right,start" "";
	 }
	 program { name: "h2_up2";
	    signal:  "mouse,up,1";
	    source:  "h2";
	    action:  SIGNAL_EMIT "e,action,resize,right,stop" "";
	 }
	 program { name: "h2_move";
	    signal:  "mouse,move";
	    source:  "h2";
	    action:  SIGNAL_EMIT "e,action,resize,right,go" "";
	 }
	 program { name: "v1_down1";
	    signal:  "mouse,down,1";
	    source:  "v1";
	    action:  STATE_SET "clicked" 0.0;
	    target:  "v1";
	 }
	 program { name: "v1_up1";
	    signal:  "mouse,up,1";
	    source:  "v1";
	    action:  STATE_SET "default" 0.0;
	    target:  "v1";
	 }
	 program { name: "v1_down2";
	    signal:  "mouse,down,1";
	    source:  "v1";
	    action:  SIGNAL_EMIT "e,action,resize,up,start" "";
	 }
	 program { name: "v1_up2";
	    signal:  "mouse,up,1";
	    source:  "v1";
	    action:  SIGNAL_EMIT "e,action,resize,up,stop" "";
	 }
	 program { name: "v1_move";
	    signal:  "mouse,move";
	    source:  "v1";
	    action:  SIGNAL_EMIT "e,action,resize,up,go" "";
	 }
	 program { name: "v2_down1";
	    signal:  "mouse,down,1";
	    source:  "v2";
	    action:  STATE_SET "clicked" 0.0;
	    target:  "v2";
	 }
	 program { name: "v2_up1";
	    signal:  "mouse,up,1";
	    source:  "v2";
	    action:  STATE_SET "default" 0.0;
	    target:  "v2";
	 }
	 program { name: "v2_down2";
	    signal:  "mouse,down,1";
	    source:  "v2";
	    action:  SIGNAL_EMIT "e,action,resize,down,start" "";
	 }
	 program { name: "v2_up2";
	    signal:  "mouse,up,1";
	    source:  "v2";
	    action:  SIGNAL_EMIT "e,action,resize,down,stop" "";
	 }
	 program { name: "v2_move";
	    signal:  "mouse,move";
	    source:  "v2";
	    action:  SIGNAL_EMIT "e,action,resize,down,go" "";
	 }

      // LEFT ARROW
	 program { name: "start_left1";
	    signal: "mouse,in";
	    source: "h1";
	    after: "left1_1";
	 }
	 program { name: "start_left2";
	    signal: "mouse,in";
	    source: "h1";
	    in: 0.4 0.0;
	    after: "left2_1";
	 }
	 program { name: "left1_1";
	    action: STATE_SET "1" 0.0;
	    target: "left_arrow1";
	    transition: LINEAR 0.4;
	    after: "left1_2";
	 }
	 program { name: "left1_2";
	    action: STATE_SET "2" 0.0;
	    target: "left_arrow1";
	    transition: LINEAR 0.4;
	    after: "left1_r";
	 }
	 program { name: "left1_r";
	    action: STATE_SET "default" 0.0;
	    target: "left_arrow1";
	    after: "left1_1";
	 }
	 program { name: "left2_1";
	    action: STATE_SET "1" 0.0;
	    target: "left_arrow2";
	    transition: LINEAR 0.4;
	    after: "left2_2";
	 }
	 program { name: "left2_2";
	    action: STATE_SET "2" 0.0;
	    target: "left_arrow2";
	    transition: LINEAR 0.4;
	    after: "left2_r";
	 }
	 program { name: "left2_r";
	    action: STATE_SET "default" 0.0;
	    target: "left_arrow2";
	    after: "left2_1";
	 }
	 program { name: "stop_left1";
	    signal: "mouse,out";
	    source: "h1";
	    action: ACTION_STOP;
	    target: "left1_1";
	    target: "left1_2";
	    target: "left1_r";
	    target: "left2_1";
	    target: "left2_2";
	    target: "left2_r";
	    target: "start_left2";
	    after: "stop_left2";
	 }
	 program { name: "stop_left2";
	    action: STATE_SET "default" 0.0;
	    target: "left_arrow1";
	    target: "left_arrow2";
	 }

      // RIGHT ARROW
	 program { name: "start_right1";
	    signal: "mouse,in";
	    source: "h2";
	    after: "right1_1";
	 }
	 program { name: "start_right2";
	    signal: "mouse,in";
	    source: "h2";
	    in: 0.4 0.0;
	    after: "right2_1";
	 }
	 program { name: "right1_1";
	    action: STATE_SET "1" 0.0;
	    target: "right_arrow1";
	    transition: LINEAR 0.4;
	    after: "right1_2";
	 }
	 program { name: "right1_2";
	    action: STATE_SET "2" 0.0;
	    target: "right_arrow1";
	    transition: LINEAR 0.4;
	    after: "right1_r";
	 }
	 program { name: "right1_r";
	    action: STATE_SET "default" 0.0;
	    target: "right_arrow1";
	    after: "right1_1";
	 }
	 program { name: "right2_1";
	    action: STATE_SET "1" 0.0;
	    target: "right_arrow2";
	    transition: LINEAR 0.4;
	    after: "right2_2";
	 }
	 program { name: "right2_2";
	    action: STATE_SET "2" 0.0;
	    target: "right_arrow2";
	    transition: LINEAR 0.4;
	    after: "right2_r";
	 }
	 program { name: "right2_r";
	    action: STATE_SET "default" 0.0;
	    target: "right_arrow2";
	    after: "right2_1";
	 }
	 program { name: "stop_right1";
	    signal: "mouse,out";
	    source: "h2";
	    action: ACTION_STOP;
	    target: "right1_1";
	    target: "right1_2";
	    target: "right1_r";
	    target: "right2_1";
	    target: "right2_2";
	    target: "right2_r";
	    target: "start_right2";
	    after: "stop_right2";
	 }
	 program { name: "stop_right2";
	    action: STATE_SET "default" 0.0;
	    target: "right_arrow1";
	    target: "right_arrow2";
	 }

      // TOP ARROW
	 program { name: "start_top1";
	    signal: "mouse,in";
	    source: "v1";
	    after: "top1_1";
	 }
	 program { name: "start_top2";
	    signal: "mouse,in";
	    source: "v1";
	    in: 0.4 0.0;
	    after: "top2_1";
	 }
	 program { name: "top1_1";
	    action: STATE_SET "1" 0.0;
	    target: "top_arrow1";
	    transition: LINEAR 0.4;
	    after: "top1_2";
	 }
	 program { name: "top1_2";
	    action: STATE_SET "2" 0.0;
	    target: "top_arrow1";
	    transition: LINEAR 0.4;
	    after: "top1_r";
	 }
	 program { name: "top1_r";
	    action: STATE_SET "default" 0.0;
	    target: "top_arrow1";
	    after: "top1_1";
	 }
	 program { name: "top2_1";
	    action: STATE_SET "1" 0.0;
	    target: "top_arrow2";
	    transition: LINEAR 0.4;
	    after: "top2_2";
	 }
	 program { name: "top2_2";
	    action: STATE_SET "2" 0.0;
	    target: "top_arrow2";
	    transition: LINEAR 0.4;
	    after: "top2_r";
	 }
	 program { name: "top2_r";
	    action: STATE_SET "default" 0.0;
	    target: "top_arrow2";
	    after: "top2_1";
	 }
	 program { name: "stop_top1";
	    signal: "mouse,out";
	    source: "v1";
	    action: ACTION_STOP;
	    target: "top1_1";
	    target: "top1_2";
	    target: "top1_r";
	    target: "top2_1";
	    target: "top2_2";
	    target: "top2_r";
	    target: "start_top2";
	    after: "stop_top2";
	 }
	 program { name: "stop_top2";
	    action: STATE_SET "default" 0.0;
	    target: "top_arrow1";
	    target: "top_arrow2";
	 }

      // BOTTOM ARROW
	 program { name: "start_bottom1";
	    signal: "mouse,in";
	    source: "v2";
	    after: "bottom1_1";
	 }
	 program { name: "start_bottom2";
	    signal: "mouse,in";
	    source: "v2";
	    in: 0.4 0.0;
	    after: "bottom2_1";
	 }
	 program { name: "bottom1_1";
	    action: STATE_SET "1" 0.0;
	    target: "bottom_arrow1";
	    transition: LINEAR 0.4;
	    after: "bottom1_2";
	 }
	 program { name: "bottom1_2";
	    action: STATE_SET "2" 0.0;
	    target: "bottom_arrow1";
	    transition: LINEAR 0.4;
	    after: "bottom1_r";
	 }
	 program { name: "bottom1_r";
	    action: STATE_SET "default" 0.0;
	    target: "bottom_arrow1";
	    after: "bottom1_1";
	 }
	 program { name: "bottom2_1";
	    action: STATE_SET "1" 0.0;
	    target: "bottom_arrow2";
	    transition: LINEAR 0.4;
	    after: "bottom2_2";
	 }
	 program { name: "bottom2_2";
	    action: STATE_SET "2" 0.0;
	    target: "bottom_arrow2";
	    transition: LINEAR 0.4;
	    after: "bottom2_r";
	 }
	 program { name: "bottom2_r";
	    action: STATE_SET "default" 0.0;
	    target: "bottom_arrow2";
	    after: "bottom2_1";
	 }
	 program { name: "stop_bottom1";
	    signal: "mouse,out";
	    source: "v2";
	    action: ACTION_STOP;
	    target: "bottom1_1";
	    target: "bottom1_2";
	    target: "bottom1_r";
	    target: "bottom2_1";
	    target: "bottom2_2";
	    target: "bottom2_r";
	    target: "start_bottom2";
	    after: "stop_bottom2";
	 }
	 program { name: "stop_bottom2";
	    action: STATE_SET "default" 0.0;
	    target: "bottom_arrow1";
	    target: "bottom_arrow2";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** MOD: WIZARD ***/
   group { name: "e/wizard/extra";
      images {
	 image: "vgrad_dark.png" COMP;
	 image: "grill_dark_tiny_pattern.png" COMP;
      }
      parts {
	 part { name: "background_image";
	    description { state: "default" 0.0;
	       image.normal: "vgrad_dark.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part { name: "grill";
	    description { state: "default" 0.0;
	       image.normal: "grill_dark_tiny_pattern.png";
	       fill {
		  size {
		     relative: 0 0;
		     offset: 144 144;
		  }
	       }
	    }
	 }
      }
   }

   group { name: "e/wizard/main";
      images {
	 image: "vgrad_dark.png" COMP;
	 image: "grill_dark_tiny_pattern.png" COMP;
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
         image: "bt_dis_base.png" COMP;
	 image: "bt_dis_hilight.png" COMP;
      }
      parts {
	 part { name: "background_image";
	    description { state: "default" 0.0;
	       image.normal: "vgrad_dark.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part { name: "grill";
	    description { state: "default" 0.0;
	       image.normal: "grill_dark_tiny_pattern.png";
	       fill {
		  size {
		     relative: 0 0;
		     offset: 144 144;
		  }
	       }
	    }
	 }
         part { name: "e.text.title";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 0 8;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -1  8;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
                  font: "Sans:style=Bold";
		  size: 20;
		  min: 1 1;
		  align: 0.5 0.5;
	       }
	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "e.text.title";
		  relative: 0.2 1.0;
		  offset: 8 8;
	       }
	       rel2 {
		  to_y: "button_image";
		  relative: 0.8 0.0;
		  offset: -9 -9;
	       }
	    }
	 }
	 part { name: "button_image";
	    mouse_events: 1;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 1.0;
	       rel1.relative: 0.5 1.0;
	       rel1.offset: 0 -9;
	       rel2.relative: 0.5 1.0;
	       rel2.offset: 0 -9;
	       min: 64 32;
	       max: 64 32;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_base.png";
		  border: 4 4 4 4;
	       }
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "button_image";
		  relative: 0.0  0.0;
		  offset:   3    3;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  text:     "Next";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "button";
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       color_class: "button_text_disabled";
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
            description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       image {
		  normal: "bt_dis_hilight.png";
		  border: 4 4 4 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "disabled" 0.0;
	       inherit:  "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 12 12 12 12;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
	 part { name: "block";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       visible: 0;
	       color: 0 0 0 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program { name: "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program { name: "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,next" "";
	 }
	 program { name: "button_enable";
            signal: "e,state,next,enable";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
	    target: "e.text.label";
	    target: "over1";
	    target: "over2";
	    target: "block";
	 }
	 program { name: "button_disable";
            signal: "e,state,next,disable";
	    source: "e";
	    action: STATE_SET "disabled" 0.0;
	    target: "button_image";
	    target: "e.text.label";
	    target: "over1";
	    target: "over2";
	    target: "block";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** ABOUT E ***/
   group { name: "e/widgets/about/main";
      images {
	 image: "vgrad_dark.png" COMP;
	 image: "about_top.png" COMP;
	 image: "about_mid.png" COMP;
	 image: "about_bot.png" COMP;
         image: "dia_botshad.png" COMP;
         image: "topsh.png" COMP;
         image: "logo_white_128.png" COMP;
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
//      data.item: "borderless" "1";
//      data.item: "shaped" "1";
      styles {
	 style { name: "about_style";
	    base: "font=Sans:style=Bold font_size=10 align=center color=#e0e0e0ff style=soft_shadow shadow_color=#00000020 wrap=word";
	    tag:  "hilight" "+ font=Sans:style=Bold text_class=tb_light color=#f00 style=soft_shadow";
	    tag:  "title" "+ font_size=12 font=Sans:style=Bold text_class=tb_big style=soft_shadow color=#fff shadow_color=#00000020";
	    tag:  "/title" "- \n \n";
	    tag:  "br" "\n";
	 }
      }
      min: 300 240;
      max: 640 640;
      parts {
	 part { name:  "sizer";
	    type: RECT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 300 240;
	       visible: 0;
	    }
	 }
	 part { name:  "about_clip";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "top";
		  relative: 0.0 0.0;
		  offset: 6 0;
	       }
	       rel2 {
		  to: "top";
		  relative: 1.0 1.0;
		  offset: -7 -7;
	       }
	       color: 255 255 255 255;
	    }
	 }
	 part { name:  "authors_clip";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "bot";
		  relative: 0.0 0.0;
		  offset: 6 6;
	       }
	       rel2 {
		  to: "bot";
		  relative: 1.0 1.0;
		  offset: -7 -1;
	       }
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "background_image";
	    description { state: "default" 0.0;
	       image.normal: "vgrad_dark.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0 1.0;
		     offset: 36 0;
		  }
	       }
	    }
	 }
	 part {	name: "e.textblock.about";
	    type: TEXTBLOCK;
	    mouse_events: 0;
	    clip_to: "about_clip";
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 0.0;
	       max: 10000 10000;
	       min: 160 0;
 	       rel1 {
		  to: "top";
		  relative: 0.0 1.0;
		  offset: 32 -17;
	       }
	       rel2 {
		  to: "top";
		  relative: 1.0 1.0;
		  offset: -33 -17;
	       }
	       text {
		  style: "about_style";
		  min: 0 1;
	       }
	    }
	    description { state: "up" 0.0;
	       inherit: "default" 0.0;
	       align: 0.5 1.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 32 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -33 -1;
	       }
	    }
	 }
	 part {	name: "e.textblock.authors";
	    type: TEXTBLOCK;
	    mouse_events: 0;
	    clip_to: "authors_clip";
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 0.0;
	       max: 10000 10000;
	       min: 160 0;
 	       rel1 {
		  to: "bot";
		  relative: 0.0 1.0;
		  offset: 32 0;
	       }
	       rel2 {
		  to: "bot";
		  relative: 1.0 1.0;
		  offset: -33 0;
	       }
	       text {
		  style: "about_style";
		  min: 0 1;
	       }
	    }
	    description { state: "up" 0.0;
	       inherit: "default" 0.0;
	       align: 0.5 1.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 32 16;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset: -33 16;
	       }
	    }
	 }
	 part { name: "top";
	    description { state: "default" 0.0;
	       image.normal: "about_top.png";
	       image.middle: 0;
	       image.border: 28 28 0 28;
	       rel2.to_y: "e.text.title";
	       rel2.relative: 1.0 0.0;
	       rel2.offset: -1 6;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "bot";
	    description { state: "default" 0.0;
	       image.normal: "about_bot.png";
	       image.middle: 0;
	       image.border: 28 28 28 0;
	       rel1.to_y: "e.text.title";
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -5;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "mid";
	    description { state: "default" 0.0;
	       image.normal: "about_mid.png";
	       rel1 {
		  to: "top";
		  relative: 0.0 1.0;
		  offset: 0 -1;
	       }
	       rel2 {
		  to: "bot";
		  relative: 1.0 0.0;
		  offset: -1 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part {	name: "e.text.title";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 255;
	       align: 1.0 0.5;
	       rel1 {
		  relative: 0.0 0.5;
		  offset: 0 0;
	       }
	       rel2 {
		  to_x: "logo";
		  relative: 0.0 0.5;
		  offset: 11 -1;
	       }
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 1.0 0.5;
		  text_class: "about_title";
	       }
	    }
	 }
	 part {	name: "e.text.version";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 255;
	       align: 0.0 0.5;
	       rel1 {
		  to_x: "logo";
		  relative: 1.0 0.5;
		  offset: -12 0;
	       }
	       rel2 {
		  relative: 1.0 0.5;
		  offset: -1 -1;
	       }
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.0 0.5;
		  text_class: "about_version";
	       }
	    }
	 }
	 part { name: "shadow";
	    scale: 1;
            description { state: "default" 0.0;
	       image.normal: "topsh.png";
	       align: 0.0 0.0;
	       min: 1 16;
	       max: 99999 16;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "shadow2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -4;
	       image.normal: "dia_botshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "logo";
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       image.normal: "logo_white_128.png";
	       rel1 {
		  to: "top";
		  relative: 0.5 1.0;
		  offset: 0 -30;
	       }
	       rel2 {
		  to: "bot";
		  relative: 0.5 0.0;
		  offset: -1 29;
	       }
	    }
	 }
	 part { name: "button_image";
	    mouse_events: 1;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 1.0;
	       rel1.relative: 0.5 0.98;
	       rel1.offset: 0 -1;
	       rel2.relative: 0.5 0.98;
	       rel2.offset: 0 -1;
	       min: 64 32;
	       max: 64 32;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "button_image";
		  relative: 0.0  0.0;
		  offset:   3    3;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  text:     "Close";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "button";
	       }
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 12 12 12 12;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program { name: "showa";
	    signal: "show";
	    source: "";
	    action: STATE_SET "up" 0.0;
	    transition: LINEAR 45.0;
	    target: "e.textblock.about";
	    after: "showa2";
	 }
	 program { name: "showa2";
	    action: STATE_SET "default" 0.0;
	    target: "e.textblock.about";
	    after: "showa";
	 }

	 program { name: "showb";
	    signal: "show";
	    source: "";
	    action: STATE_SET "up" 0.0;
	    transition: LINEAR 45.0;
	    target: "e.textblock.authors";
	    after: "showb2";
	 }
	 program { name: "showb2";
	    action: STATE_SET "default" 0.0;
	    target: "e.textblock.authors";
	    after: "showb";
	 }

	 program {
	    name:   "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program {
	    name:   "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program {
	    name:   "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,close" "";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** THEME ABOUT ***/
   group { name: "e/theme/about";
      images {
	 image: "silk.png" LOSSY 90;
	 image: "topsh.png" COMP;
	 image: "bnw.png" COMP;
	 image: "bt_base1.png" COMP;
	 image: "bt_base2.png" COMP;
	 image: "bt_hilight.png" COMP;
	 image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
      styles {
	 style { name: "theme_about_style";
	    base: "font=Sans:style=Bold font_size=10 align=center color=#e0e0e0ff style=soft_shadow shadow_color=#0000001f wrap=word";
	    tag:  "br" "\n";
	 }
      }
//      data.item: "borderless" "1";
//      data.item: "shaped" "1";
      min: 300 240;
      max: 640 640;
      parts {
	 part { name: "background_image";
            description { state: "default" 0.0;
	       image.normal: "silk.png";
	       aspect: 1.0 1.0;
	       aspect_preference: NONE;
	    }
	 }
	 part { name: "shadow";
	    scale: 1;
            description { state: "default" 0.0;
	       image.normal: "topsh.png";
	       align: 0.0 0.0;
	       min: 1 16;
	       max: 99999 16;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "logo";
	    description { state: "default" 0.0;
	       image.normal: "bnw.png";
	       align: 0.5 0.05;
	       min: 230 110;
	       max: 460 220;
	       aspect: 2.090909091 2.090909091;
	       aspect_preference: HORIZONTAL;
	    }
	 }
	 part { name: "about";
	    type: TEXTBLOCK;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to_y: "logo";
		  relative: 0.0 1.0;
		  offset: 8 0;
	       }
	       rel2 {
		  to_y: "button_image";
		  offset: -9 -19;
		  relative: 1.0 0.0;
	       }
	       text {
		  style: "theme_about_style";
		  min: 1 1;
		  text:
		    "Smooth as silk<br>"
		    "The default theme for<br>"
		    "Enlightenment<br>"
		    ;
	       }
	    }
	 }
	 part { name: "button_image";
	    mouse_events: 1;
	    scale: 1;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       align: 0.5 1.0;
	       rel1.relative: 0.5 0.98;
	       rel1.offset: 0 -1;
	       rel2.relative: 0.5 0.98;
	       rel2.offset: 0 -1;
	       min: 64 32;
	       max: 64 32;
	       image {
		  normal: "bt_base2.png";
		  border: 7 7 7 7;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_base1.png";
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  to: "button_image";
		  relative: 0.0  0.0;
		  offset:   3    3;
	       }
	       rel2 {
		  relative: 1.0  1.0;
		  offset:   -4   -4;
		  to:     "button_image";
	       }
	       color: 224 224 224 255;
	       color3: 0 0 0 64;
	       color_class: "button_text";
	       text {
		  text:     "Close";
		  font:     "Sans";
		  size:     10;
		  min:      1 1;
		  align:    0.5 0.5;
		  text_class: "button";
	       }
	    }
	 }
	 part { name: "over1";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       rel2.relative: 1.0 0.5;
	       image {
		  normal: "bt_hilight.png";
		  border: 7 7 7 0;
	       }
	    }
	 }
	 part { name: "over2";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
	       image {
		  normal: "bt_shine.png";
		  border: 7 7 7 7;
	       }
	    }
	 }
	 part { name: "over3";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "button_image";
	       rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
	       image {
		  normal: "bt_glow.png";
		  border: 12 12 12 12;
	       }
               fill.smooth : 0;
	    }
	    description { state: "clicked" 0.0;
	       inherit:  "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
      }
      programs {
	 program {
	    name:   "button_click";
	    signal: "mouse,down,1";
	    source: "button_image";
	    action: STATE_SET "clicked" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program {
	    name:   "button_unclick";
	    signal: "mouse,up,1";
	    source: "button_image";
	    action: STATE_SET "default" 0.0;
	    target: "button_image";
            target: "over3";
	 }
	 program {
	    name:   "button_unclick2";
	    signal: "mouse,clicked,1";
	    source: "button_image";
	    action: SIGNAL_EMIT "e,action,close" "";
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** ICONS ***/

#define ICON(NAME, FILE, SIZE)                          \
group { name: "e/icons/"NAME ;                          \
   max: SIZE SIZE;                                      \
   parts {                                              \
      part { name: "icon";                              \
	 repeat_events:  1;                             \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

#define ICONMIME(NAME, FILE, SIZE) ICON("mimetypes/"NAME, FILE, SIZE)

/* FreeDesktop.Org Icons
 * http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
 *
 * In the comment you can find the old e icon name.
 *
 * Icons marked with *** are not mentioned in the spec, but we still try to
 * follow the naming convention.
 *
 * TO ADD A NEW ICON:
 * 1. Search for a name in the spec OR
 * 2. Search for a name in kde (oxigen) and gnome (tango - human) icon set OR
 * 3. Try to follow the naming convention
 */

//Standard Action Icons
ICON("help-about","logo_black_128.png",64)                      // "enlightenment/about"
ICON("list-add","icon_add.png",64)                              // "widget/add"
ICON("list-remove","icon_del.png",64)                           // "widget/del"
ICON("go-up","icon_up_arrow.png",64)                            // "widget/up_arrow" "widget/up_dir"
ICON("go-down","icon_down_arrow.png",64)                        // "widget/down_arrow"
ICON("go-next","icon_right_arrow.png",64)                       // "widget/new_dialog"
ICON("go-previous","icon_left_arrow.png",64)                    // none
ICON("bookmark-new","icon_add_fav.png",64)                      // "widget/add_fav"
ICON("edit-swap","icon_swap.png",64)                     // *** // "widget/swap"
ICON("edit-copy","icon_efm_copy.png",16)                        // EFMBUTTON("copy"
ICON("edit-cut","icon_efm_cut.png",16)                          // EFMBUTTON("cut"
ICON("edit-paste","icon_efm_paste.png",16)                      // EFMBUTTON("paste"
ICON("edit-delete","icon_efm_delete.png",16)                    // EFMBUTTON("delete"
ICON("edit-rename","icon_efm_rename.png",16)                    // EFMBUTTON("rename"
ICON("edit-select-all","icon_efm_select.png",16)                // EFMBUTTON("select"

ICON("document-open","icon_efm_open.png",16)                    // "widget/open" EFMBUTTON("open") EFMBUTTON("new")
ICON("document-new","icon_new.png",64)                          // "widget/new"
ICON("document-properties","icon_efm_properties.png",16)        // EFMBUTTON("properties"
ICON("folder-new","icon_efm_new_dir.png",16)                    // EFMBUTTON("new_dir"
ICON("view-sort","icon_efm_sort.png",16)                 // *** // EFMBUTTON("sort",
ICON("view-order","icon_efm_sort.png",16)                // *** // EFMBUTTON("ordering"
ICON("view-hidden-files","icon_efm_view.png",16)         // *** // EFMBUTTON("hidden_files"
ICON("configure","icon_config.png",64)                          // "widget/config"
ICON("system-run","icon_run.png",64)                            // "enlightenment/run"
ICON("system-shutdown","icon_halt.png",128)                     // "enlightenment/halt"
ICON("system-restart","icon_reboot.png",128)                    // "enlightenment/reboot"
ICON("system-suspend","icon_suspend.png",128)                   // "enlightenment/suspend"
ICON("system-suspend-hibernate","icon_hibernate.png",128)       // "enlightenment/hibernate"
ICON("system-log-out","icon_logout.png",128)                    // "enlightenment/logout"
ICON("system-restart","icon_reset.png",128)                     // "enlightenment/reset" "widget/reset"
ICON("system-lock-screen","icon_desklock_menu.png",128)         // "enlightenment/desklock_menu"
ICON("window-close","icon_close.png",64)                        // "widget/close"
ICON("dialog-ok-apply","icon_check.png",64)                     // "enlightenment/check"
ICON("transform-scale","icon_resize.png",64)                    // "widget/resize"
ICON("transform-move","icon_autoscroll.png",64)                 // "enlightenment/autoscroll"
ICON("view-refresh","icon_efm_refresh.png",16)                  // EFMBUTTON("refresh"
ICON("view-inherit","icon_dummy.png",64)                 // *** // EFMBUTTON("inherit"

//Standard Status Icons
ICON("dialog-warning","icon_warning.png",128)                   // "enlightenment/warning"
ICON("dialog-error","icon_warning.png",128)                     // "enlightenment/error"
ICON("dialog-ask","icon_dummy.png",64)				// "enlightenment/unknown"
ICON("unknown","icon_dummy.png",64)                      // *** // "enlightenment/unknown"

//Standard Application Icons
ICON("preferences-desktop","icon_desktops.png",64)                         // "enlightenment/desktops"
ICON("preferences-desktop-theme","icon_theme.png",64)                      // "enlightenment/themes"
ICON("preferences-desktop-wallpaper","icon_wallpaper.png",64)              // "enlightenment/background"
ICON("preferences-desktop-color","icon_colors.png",64)                     // "enlightenment/colors"
ICON("preferences-desktop-font","icon_fonts.png",64)                       // "enlightenment/fonts"
ICON("preferences-desktop-screensaver","icon_screensaver.png",64)          // "enlightenment/screensaver"
ICON("preferences-desktop-display","icon_screen_setup.png",64)             // "enlightenment/screen_setup"
ICON("preferences-desktop-keyboard","icon_keys.png",64)                    // "enlightenment/keys"
ICON("preferences-desktop-pointer","icon_mouse.png",64)             // *** // "enlightenment/mouse"
ICON("preferences-desktop-mouse","icon_mouse_clean.png",64)                // "enlightenment/mouse_clean"
ICON("preferences-desktop-mouse-left","icon_mouse_left.png",64)     // *** // "enlightenment/mouse_left"
ICON("preferences-desktop-mouse-right","icon_mouse_right.png",64)   // *** // "enlightenment/mouse_right"
ICON("preferences-desktop-mouse-middle","icon_mouse_middle.png",64) // *** // "enlightenment/mouse_middle"
ICON("preferences-desktop-mouse-wheel","icon_mouse_wheel.png",64)   // *** // "enlightenment/mouse_wheel"
ICON("preferences-desktop-mouse-extra","icon_mouse_extra.png",64)   // *** // "enlightenment/mouse_extra"
ICON("preferences-desktop-locale","icon_intl.png",64)                      // "enlightenment/intl"
ICON("preferences-desktop-mixer","icon_mixer.png",64)                      // "enlightenment/mixer"

ICON("preferences-desktop-shelf","icon_shelf.png",64)                        // *** // "enlightenment/shelf"
ICON("preferences-desktop-shelf-bottom-desk","icon_shelf_bottom_desk.png",64)// *** // "enlightenment/shelf_bottom_desk"
ICON("preferences-desktop-shelf-custom","icon_shelf_custom.png",64)          // *** // "enlightenment/shelf_custom"
ICON("preferences-desktop-shelf-dock","icon_shelf_dock.png",64)              // *** // "enlightenment/shelf_dock"
ICON("preferences-desktop-shelf-menu-bar","icon_shelf_menu_bar.png",64)      // *** // "enlightenment/shelf_menu_bar"
ICON("preferences-desktop-shelf-panel","icon_shelf_panel.png",64)            // *** // "enlightenment/shelf_panel"
ICON("preferences-desktop-shelf-top-desk","icon_shelf_top_desk.png",64)      // *** // "enlightenment/shelf_top_desk"
ICON("preferences-desktop-window-remember","icon_window_remembers.png",64)   // *** // "enlightenment/window_remembers"

ICON("preferences-position-bottom","icon_shelf_bottom.png",64)               // *** // "enlightenment/shelf_position_bottom"
ICON("preferences-position-bottom-left","icon_shelf_bottom_left.png",64)     // *** // "enlightenment/shelf_position_bottom_left"
ICON("preferences-position-bottom-right","icon_shelf_bottom_right.png",64)   // *** // "enlightenment/shelf_position_bottom_right"
ICON("preferences-position-top","icon_shelf_top.png",64)                     // *** // "enlightenment/shelf_position_top"
ICON("preferences-position-top-left","icon_shelf_top_left.png",64)           // *** // "enlightenment/shelf_position_top_left"
ICON("preferences-position-top-right","icon_shelf_top_right.png",64)         // *** // "enlightenment/shelf_position_top_right"
ICON("preferences-position-left","icon_shelf_left.png",64)                   // *** // "enlightenment/shelf_position_left"
ICON("preferences-position-left-top","icon_shelf_left_top.png",64)           // *** // "enlightenment/shelf_position_left_top"
ICON("preferences-position-left-bottom","icon_shelf_left_bottom.png",64)     // *** // "enlightenment/shelf_position_left_bottom"
ICON("preferences-position-right","icon_shelf_right.png",64)                 // *** // "enlightenment/shelf_position_right"
ICON("preferences-position-right-top","icon_shelf_right_top.png",64)         // *** // "enlightenment/shelf_position_right_top"
ICON("preferences-position-right-bottom","icon_shelf_right_bottom.png",64)   // *** // "enlightenment/shelf_position_right_bottom"

ICON("preferences-window-manipulation","icon_window_manipulation.png",64)    // *** // "enlightenment/window_manipulation"
ICON("preferences-window-maximize","icon_window_manipulation.png",64)        // *** // "enlightenment/window_maximize"
ICON("preferences-window-stacking","icon_winlist.png",64)                    // *** // "enlightenment/window_stacking"
ICON("preferences-window-geometry","icon_window_manipulation.png",64)        // *** // "enlightenment/window_geometry"
ICON("preferences-windows-lost","icon_lost_windows.png",64)                  // *** // "enlightenment/lost_windows"

ICON("preferences-gradient","icon_gradient.png",64)           // *** // "enlightenment/gradient"
ICON("preferences-focus","icon_window_focus.png",64)          // *** // "enlightenment/focus"
ICON("preferences-engine","icon_engine.png",64)               // *** // "enlightenment/engine"
ICON("preferences-dialogs","icon_dummy.png",64)               // *** // "enlightenment/dialogs"
ICON("preferences-interaction","icon_interaction.png",64)     // *** // "enlightenment/interaction"
ICON("preferences-imc","icon_imc.png",64)                     // *** // "enlightenment/imc"
ICON("preferences-desklock","icon_desklock.png",64)           // *** // "enlightenment/desklock"
ICON("preferences-icon-theme","icon_icon_theme.png",64)       // *** // "enlightenment/icon_theme"
ICON("preferences-transitions","icon_transitions.png",64)     // *** // "enlightenment/transitions"
ICON("preferences-toolbar","icon_toolbar.png",64)             // *** // "enlightenment/toolbar"
ICON("preferences-profiles","icon_profiles.png",64)           // *** // "enlightenment/profiles"
ICON("preferences-startup","icon_startup.png",64)             // *** // "enlightenment/startup"
ICON("preferences-winlist","icon_winlist.png",64)             // *** // "enlightenment/winlist"
ICON("preferences-menus","icon_menus.png",64)                 // *** // "enlightenment/menus"
ICON("preferences-menu-settings","icon_menu_settings.png",64) // *** // "enlightenment/menu_settings"
ICON("preferences-advanced","icon_advanced.png",64)           // *** // "enlightenment/advanced"
ICON("preferences-behavior","icon_behavior.png",64)           // *** // "enlightenment/behavior"
ICON("preferences-appearance","icon_appearance.png",64)       // *** // "enlightenment/appearance"
ICON("preferences-extensions","icon_extensions.png",64)       // *** // "enlightenment/extensions"
ICON("preferences-file-icons","icon_file_icons.png",64)       // *** // "enlightenment/file_icons"
ICON("preferences-pager","icon_pager.png",64)                 // *** // "enlightenment/pager"
ICON("preferences-scale","icon_scale.png",64)                 // *** // "enlightenment/scale"
ICON("preferences-directories","icon_directories.png",64)     // *** // "enlightenment/directories"

ICON("preferences-screen-normal","icon_screen_normal.png",64) // *** // "enlightenment/screen_normal"
ICON("preferences-screen-around","icon_screen_around.png",64) // *** // "enlightenment/screen_around"
ICON("preferences-screen-left","icon_screen_left.png",64)     // *** // "enlightenment/screen_left"
ICON("preferences-screen-right","icon_screen_right.png",64)   // *** // "enlightenment/screen_right"
ICON("preferences-screen-vflip","icon_screen_vflip.png",64)   // *** // "enlightenment/screen_vflip"
ICON("preferences-screen-hflip","icon_screen_hflip.png",64)   // *** // "enlightenment/screen_hflip"

ICON("preferences-applications","icon_applications.png",64)                 // *** // "enlightenment/applications"
ICON("preferences-applications-add","icon_applications_new.png",64)         // *** // "enlightenment/add_application"
ICON("preferences-applications-ibar","icon_applications_ibar.png",64)       // *** // "enlightenment/ibar_applications"
ICON("preferences-applications-restart","icon_applications_restart.png",64) // *** // "enlightenment/restart_applications"
ICON("preferences-applications-startup","icon_applications_startup.png",64) // *** // "enlightenment/startup_applications"

ICON("preferences-plugin","icon_modules.png",64)                                   // "enlightenment/modules"
ICON("preferences-system","icon_configuration.png",64)                             // "enlightenment/configuration" "enlightenment/settings"
ICON("preferences-system-windows","icon_windows.png",64)                           // "enlightenment/windows" "enlightenment/showhide"
ICON("preferences-system-performance","icon_performance.png",64)                   // "enlightenment/performance"
ICON("preferences-system-power-management","icon_power_management.png",64)         // "enlightenment/power_management"
ICON("preferences-system-screen-resolution","icon_screen_resolution.png",64)// *** // "enlightenment/screen_resolution"
ICON("system-file-manager","icon_efm_folder.png",64)                               // "enlightenment/fileman"
ICON("application-exit","icon_logout.png",64)                                      // "enlightenment/exit"
ICON("enlightenment","logo_white_128.png",64)                               // *** // "enlightenment/e"

//Standard Emblem Icons
ICON("emblem-symbolic-link","icon_dummy.png",64)                // EFMBUTTON("symlink"

//Standard Place Icons
ICON("folder","icon_efm_folder.png",64)                         // "fileman/folder"
ICON("user-home","icon_efm_home.png",64)                        // "fileman/home"
ICON("user-temp","icon_efm_tmp.png",64)                  // *** // "fileman/tmp"
ICON("user-desktop","icon_efm_desktop.png",64)                  // "fileman/desktop"
ICON("user-bookmarks","icon_favorites.png",64)                  // "enlightenment/favorites"
ICON("folder-image","icon_wallpaper.png",64)                    // "enlightenment/picture"
ICON("network-website","icon_globe.png",64)                     // "enlightenment/website"
ICON("system","icon_system.png",64)                      // *** // "enlightenment/system"

//Standard Device Icons
ICON("computer","icon_efm_root.png", 64)                        // "fileman/root"
ICON("drive-harddisk","icon_efm_hdd.png", 128)                  // "fileman/hd" "fileman/hdd"
ICON("drive-optical","icon_efm_cd.png", 128)                    // "fileman/??"
ICON("media-flash","icon_efm_flash.png", 128)                   // "fileman/??"
ICON("drive-removable-media","icon_efm_usbmedia.png", 128);

ICON("media-eject","icon_efm_eject.png", 64)

/* End of FreeDesktop.Org icons */


ICONMIME("inode/chardevice","icon_efm_file.png",128)
ICONMIME("inode/blockdevice","icon_efm_file.png",128)
ICONMIME("inode/directory-locked","icon_efm_file.png",128)
ICONMIME("inode/directory","icon_efm_folder.png",128)
ICONMIME("inode/fifo","icon_efm_file.png",128)
ICONMIME("inode/socket","icon_efm_file.png",128)

// Window Border menu icons //

#define BORDERICON(NAME, FILE)                          \
group { name: "e/widgets/border/default/"NAME ;         \
   max: 64 64;						\
   parts {                                              \
      part { name: "icon";                              \
	 mouse_events:  0;                              \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

BORDERICON("basic","icon_border_more.png")
BORDERICON("close","icon_border_close.png")
BORDERICON("kill","icon_border_kill.png")
BORDERICON("stacking","icon_border_stack_norm.png")
BORDERICON("stack_on_top","icon_border_stack_top.png")
BORDERICON("stack_normal","icon_border_stack_norm.png")
BORDERICON("stack_below","icon_border_stack_bot.png")
BORDERICON("maximize","icon_border_maximize.png")
BORDERICON("fullscreen","icon_border_maximize.png")
BORDERICON("minimize","icon_border_minimize.png")
BORDERICON("stick","icon_border_pin.png")
BORDERICON("sendto","icon_border_sendto.png")
BORDERICON("skip","icon_border_skip.png")
BORDERICON("skip_pager","icon_border_pager.png")
BORDERICON("skip_taskbar","icon_border_skip.png")
BORDERICON("skip_winlist","icon_border_skip.png")
BORDERICON("borderless","icon_border_border.png")
BORDERICON("remember","icon_border_remember.png")
BORDERICON("shade","icon_border_shaded.png")
BORDERICON("locks","icon_border_lock.png")
BORDERICON("locks_user","icon_border_lock.png")
BORDERICON("locks_application","icon_border_lock.png")
BORDERICON("properties","icon_border_properties.png")

// EFM icons //

#define EFMICON(NAME, FILE, SIZE)                       \
group { name: "e/icons/fileman/"NAME;                   \
   max:  SIZE SIZE;                                     \
   parts {                                              \
      part { name: "icon";                              \
	 mouse_events:  0;                              \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

//EFMICON("folder","icon_efm_folder.png", 128)
EFMICON("chrdev","icon_efm_file.png", 128)
EFMICON("blkdev","icon_efm_file.png", 128)
EFMICON("fifo","icon_efm_file.png", 128)
EFMICON("socket","icon_efm_file.png", 128)
EFMICON("executable","icon_efm_file.png", 128)
EFMICON("file","icon_efm_file.png", 128)
//EFMICON("home","icon_efm_home.png", 128)
//EFMICON("root","icon_efm_root.png", 128)
//EFMICON("tmp","icon_efm_tmp.png", 128)
//EFMICON("desktop","icon_efm_desktop.png", 128)
//EFMICON("hdd","icon_efm_hdd.png", 128)
//EFMICON("hd","icon_efm_hdd.png", 128)


// EFM Mime type icons //

#define MIMEICON(NAME, FILE, SIZE)                      \
group { name: "e/icons/fileman/mime/"NAME;              \
   max:  SIZE SIZE;                                     \
   parts {                                              \
      part { name: "icon";                              \
	 mouse_events:  0;                              \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

MIMEICON("application/pdf","icon_mime_pdf.png", 128);
MIMEICON("application/x-deb","icon_mime_deb.png", 128);
MIMEICON("application/x-bzip","icon_mime_package.png", 128);
MIMEICON("application/zip","icon_mime_package.png", 128);
MIMEICON("application/x-gzip","icon_mime_package.png", 128);
MIMEICON("application/x-bzip-compressed-tar","icon_mime_package.png", 128);
MIMEICON("application/x-bzip2-compressed-tar","icon_mime_package.png",128);
MIMEICON("application/x-compressed-tar","icon_mime_package.png",128);
MIMEICON("application/x-tar","icon_mime_package.png", 128);
MIMEICON("application/x-rar","icon_mime_package.png", 128);


// Dynamic MIME Icons //

#define MIMEBASE(MIME, FILE, NAME, SIZE)                	\
group { name: "e/icons/fileman/mime/"MIME;              	\
   max:  SIZE SIZE;                                     	\
   parts {							\
      part { name: "base";					\
	 mouse_events: 0;					\
	 description { state: "default" 0.0;			\
	    aspect: 1.0 1.0;					\
	    aspect_preference: BOTH;				\
	    image.image: FILE COMP;				\
	    image.normal: FILE;					\
	 }							\
      }								\
      part { name: "name";					\
	 type: TEXT;						\
	 mouse_events: 0;					\
	 description { state: "default" 0.0;			\
	    rel1.relative: 0.2444 0.6797;			\
	    rel2.relative: 0.7478 0.8894;			\
	    color: 245 245 245 255;				\
	    text {						\
	       text:	NAME;					\
	       font:	"Sans:style=Bold";	\
	       size:	4;					\
	       fit:	1 1;					\
	       min:	1 1;					\
	       align:	0.5 0.0;				\
	    }							\
	 }							\
      }								\
   }								\
}

MIMEBASE("video/mpeg","icon_mime_video_generic.png", ".MPEG", 128);
MIMEBASE("application/ogg","icon_mime_video_generic.png", ".OGG", 128);
MIMEBASE("video/x-theora+ogg","icon_mime_video_generic.png", ".OGG", 128);
MIMEBASE("video/x-msvideo","icon_mime_video_generic.png", ".AVI", 128);

MIMEBASE("image/png","icon_mime_image_generic.png", ".PNG", 128);
MIMEBASE("image/jpeg","icon_mime_image_generic.png", ".JPEG", 128);
MIMEBASE("image/gif","icon_mime_image_generic.png", ".GIF", 128);
MIMEBASE("image/bmp","icon_mime_image_generic.png", ".BMP", 128);
MIMEBASE("application/x-xcf","icon_mime_image_generic.png", ".XCF", 128);

MIMEBASE("audio/mpeg","icon_mime_audio_generic.png", ".MP3", 128);
MIMEBASE("audio/x-wav","icon_mime_audio_generic.png", ".WAV", 128);
MIMEBASE("audio/x-flac","icon_mime_audio_generic.png", ".FLAC", 128);
MIMEBASE("audio/x-musepack","icon_mime_audio_generic.png", ".MPC", 128);

MIMEBASE("text/css","icon_mime_text_generic.png", ".CSS", 128);
MIMEBASE("text/html","icon_mime_text_generic.png", ".HTML", 128);
MIMEBASE("text/x-csrc","icon_mime_text_generic.png", ".C", 128);
MIMEBASE("text/x-chdr","icon_mime_text_generic.png", ".H", 128);
MIMEBASE("text/x-c++src","icon_mime_text_generic.png", ".C++", 128);
MIMEBASE("text/x-csharp","icon_mime_text_generic.png", ".C#", 128);
MIMEBASE("text/x-patch","icon_mime_text_generic.png", ".PATCH", 128);
MIMEBASE("text/plain","icon_mime_text_generic.png", ".TXT", 128);
MIMEBASE("application/x-msword","icon_mime_text_generic.png", ".DOC", 128);
MIMEBASE("application/x-abiword","icon_mime_text_generic.png", ".ABW", 128);

MIMEBASE("application/x-object","icon_efm_file.png", "", 128);
MIMEBASE("application/x-shellscript","icon_applications.png", "", 128);

MIMEBASE("application/x-font-ttf","icon_mime_font_generic.png", ".TTF", 128);
MIMEBASE("application/x-font-pcf","icon_mime_font_generic.png", ".PCF", 128);
MIMEBASE("application/x-font-bdf","icon_mime_font_generic.png", ".BDF", 128);


// Custom icons with actions or specific behaviours

   images {
      image: "icon_wallpaper_center_flat.png" COMP;
      image: "icon_wallpaper_center.png" COMP;
      image: "icon_wallpaper_screen.png" COMP;
      image: "icon_wallpaper_grad_screen.png" COMP;
   }
   group { name: "e/icons/enlightenment/wallpaper_stretch";
      max:  24 24;
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       image {
		  normal: "icon_wallpaper_center_flat.png";
		  border: 5 5 5 5;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/wallpaper_tile";
      max:  24 24;
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       image {
		  normal: "icon_wallpaper_center_flat.png";
		  border: 5 5 5 5;
	       }
	       fill {
		  size {
		     relative: 0.33 0.33;
		  }
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/wallpaper_center";
      max:  24 24;
      parts {
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       rel1.relative: 0.125 0.125;
	       rel2.relative: 0.875 0.875;
	       image {
		  normal: "icon_wallpaper_center.png";
		  border: 5 5 5 5;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/wallpaper_scale_aspect_in";
      max:  24 24;
      parts {
	 part { name: "bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       aspect: 1.5 1.5;
	       aspect_preference: BOTH;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       image {
		  normal: "icon_wallpaper_center.png";
		  border: 5 5 5 5;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/wallpaper_scale_aspect_out";
      max:  24 24;
      parts {
	 part { name: "bg";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       aspect: 1.5 1.5;
	       aspect_preference: NONE;
	       image {
		  normal: "icon_wallpaper_center.png";
		  border: 5 5 5 5;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }

   group { name: "e/icons/enlightenment/gradient_h";
      max: 24 24;
      parts {
	 part { name: "bg";
	    type: GRADIENT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       gradient {
		  spectrum: "black_to_trans";
		  rel1.relative: 0 0.5;
		  rel1.offset: 0 0;
		  rel2.relative: 1 0.5;
		  rel2.offset: -1 0;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_grad_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/gradient_v";
      max: 24 24;
      parts {
	 part { name: "bg";
	    type: GRADIENT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       gradient.spectrum: "black_to_trans";
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_grad_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/gradient_du";
      max: 24 24;
      parts {
	 part { name: "bg";
	    type: GRADIENT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       gradient {
		  spectrum: "black_to_trans";
		  rel1.relative: 0 1;
		  rel1.offset: 0 -1;
		  rel2.relative: 1 0;
		  rel2.offset: -1 0;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_grad_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/gradient_dd";
      max:  24 24;
      parts {
	 part { name: "bg";
	    type: GRADIENT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       gradient {
		  spectrum: "black_to_trans";
		  rel1.relative: 0 0;
		  rel1.offset: 0 0;
		  rel2.relative: 1 1;
		  rel2.offset: -1 -1;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_grad_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }
   group { name: "e/icons/enlightenment/gradient_rad";
      max: 24 24;
      parts {
	 part { name: "bg";
	    type: GRADIENT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.to: "screen";
	       rel2.to: "screen";
	       gradient {
		 spectrum: "black_to_trans";
		 type: "radial";
	       }
	       fill {
		 origin.relative: 0.5 0.5;
	       }
	    }
	 }
	 part { name: "screen";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       image {
		  normal: "icon_wallpaper_grad_screen.png";
		  border: 2 2 2 2;
	       }
	    }
	 }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** INIT SPLASH ***/
   /* this first group is used for the primary screen (or only screen) so in
    * a multi-monitor setup whichever is first (screen 0) will get this
    * splash on it */
   group {
      name: "e/init/splash";
      /* images used */
      images {
         image: "exq-bglight.png" COMP;
         image: "exq-logo.png" COMP;
         image: "exq-bar.png" COMP;
         image: "exq-barglow.png" COMP;
      }
      script {
	 public is_ready;
	 public do_end;
      }
      parts {
         part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
         part { name: "light";
            description { state: "default" 0.0;
               align: 0.5 0.222222222;
               rel1.relative: 0.104166667 0.515625;
               rel2.relative: 0.895833333 0.796875;
               aspect: 2.111111111 2.111111111;
               aspect_preference: HORIZONTAL;
               max: 380 180;
               image.normal: "exq-bglight.png";
               color: 0 0 0 255;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "logoclip";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "logo";
            clip_to: "logoclip";
            description { state: "default" 0.0;
               align: 0.5 0.774193548;
               rel1.relative: 0.272916667 0.315625;
               rel2.relative: 0.727083333 0.6546875;
               aspect: 0.557603687 0.557603687;
               aspect_preference: BOTH;
               max: 121 217;
               image.normal: "exq-logo.png";
            }
         }
         part { name: "bar";
            description { state: "default" 0.0;
               min: 32 32;
               aspect: 0.66 0.66;
               rel1 {
                  to_x: "exquisite.progress";
                  to_y: "bar_clip";
                  offset: -9 -9;
               }
               rel2 {
                  to_x: "exquisite.progress";
                  to_y: "bar_clip";
                  offset: 8 -1;
               }
               image.normal: "exq-bar.png";
               image.border: 10 10 10 0;
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "barglow";
            description { state: "default" 0.0;
               align: 1.0 0.5;
//               max: 31 999;
               rel1 {
                  to: "bar";
                  relative: 0.0 0.0;
                  offset: 9 4;
               }
               rel2 {
                  to_x: "bar";
                  to_y: "bar_clip";
                  relative: 1.0 0.52173913;
                  offset: -5 4;
               }
               image.normal: "exq-barglow.png";
               image.border: 0 10 10 10;
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "bar_clip";
            mouse_events:  0;
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: 0.700 0.550;
               rel2.relative: 0.740 0.590;
            }
         }
         part {
            name: "exquisite.progress";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "bar_clip";
                  relative: 0.5 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "bar_clip";
                  relative: 0.5 1.0;
                  offset: -1 -1;
               }
            }
         }
         part { name: "e.text.title";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_y: "logo";
                  relative: 0.05 -0.4;
               }
               rel2 {
                  to_y: "logo";
                  relative: 0.95 -0.2;
               }
               color: 255 255 255 0;
               text {
                  font: "Sans:style=Bold";
                  size: 16;
//                  fit: 0 1;
		  text_class: "init_title";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "e.text.status";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to: "e.text.title";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "e.text.title";
                  relative: 1.0 1.5;
               }
               color: 255 255 255 0;
               text {
                  font: "Sans";
                  size: 10;
//                  fit: 0 1;
		  text_class: "init_text";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
	    name: "e.text.version";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    description {
	       state: "default" 0.0;
	       align: 1.0 1.0;
	       rel1 {
		  relative: 1.0 1.0;
		  offset:   -2  -2;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -2  -2;
	       }
	       color: 255 255 255 64;
	       color3: 0 0 0 32;
	       text {
		  text: "0.17.0";
		  font: "Sans";
		  size: 8;
		  min:  1 1;
		  align: 0.0 0.0;
		  text_class: "init_version";
	       }
	    }
	 }
      }
      programs {
	 program { name: "init";
	    signal: "load";
	    source: "";
	    script {
	       set_int(is_ready, 0);
	       set_int(do_end, 0);
	    }
	 }
         program { name: "show1";
            signal: "show";
            source: "";
            in: 0.0 0.0;
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "light";
         }
         program { name: "show2";
            signal: "show";
            source: "";
            in: 0.5 0.0;
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "logoclip";
            target: "e.text.title";
         }
         program { name: "show3";
            signal: "show";
            source: "";
            in: 1.0 0.0;
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "bar";
            target: "e.text.status";
            after: "pulsate1";
            after: "ready";
         }
         
         program { name: "pulsate1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "barglow";
            after: "pulsate2";
         }
         program { name: "pulsate2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "barglow";
            after: "pulsate1";
         }

         program { name: "exit1";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.5;
            target: "bar";
            target: "barglow";
            after: "exit2";
         }
         program { name: "exit2";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.5;
            target: "logoclip";
            target: "barglow";
            target: "e.text.title";
            target: "e.text.status";
            after: "exit3";
         }
         program { name: "exit3";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.5;
            target: "light";
            after: "exit4";
         }
         program { name: "exit4";
	    action: SIGNAL_EMIT "e,state,done_ok" "e";
         }
         
	 program { name: "ready";
	    script {
	       new val;

	       val = get_int(do_end);
	       if (val == 1)
		 run_program(PROGRAM:"exit1");
	       else
		 set_int(is_ready, 1);
	    }
	 }
         program { name: "done1"; /* when e tells the splash screen it is done
                                   * starting up, the init splash gets this signal */
	    signal: "e,state,done";
	    source: "e";
	    script {
	       new val;

	       val = get_int(is_ready);
	       if (val == 1)
		 run_program(PROGRAM:"exit1");
	       else
		 set_int(do_end, 1);
	    }
	 }
      }
   }
   /* this group is used for other screens/xinerama zones etc. other than
    * the primary as only the primary shows the full splash - this just
    * shows the below image. it can animate etc. but not display status
    * etc. */
   group {
      name: "e/init/extra_screen";
      parts {
         part { name: "base";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
   /*** WALLPAPER MAIN DIALOG ***/
   group { name: "e/conf/wallpaper/main/window";
      images {
	 image: "dia_grad.png" COMP;
	 image: "dia_topshad.png" COMP;
	 image: "dia_botshad.png" COMP;
         image: "dia_botshad.png" COMP;
         image: "topsh.png" COMP;
         image: "wp-bot1.png" COMP;
         image: "wp-bot2.png" COMP;
         image: "wp-tb1.png" COMP;
         image: "wp-tb2.png" COMP;
         image: "wp-tb3.png" COMP;
         image: "wp-tbs.png" COMP;
         image: "big_arrow_up.png" COMP;

	 image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "dialog_base";
	       image.normal: "dia_grad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "e.swallow.preview";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	    }
	 }
	 part { name: "events";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.swallow.list";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset:   2   2;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -3  6;
		  to_y: "bot1";
	       }
	    }
	 }
	 part { name: "bot1";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_y: "e.swallow.buttons";
                  relative: 0.0 0.0;
                  offset: 0 -15;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
	       image {
                  normal: "wp-bot1.png";
                  border: 0 0 21 0;
               }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 32 0;
		  }
	       }
	    }
	 }
	 part { name: "e.text.filename";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       align: 0.5 1.0;
	       rel1 {
		  to: "bot2";
		  relative: 0.0 1.0;
		  offset: 2 -11;
	       }
	       rel2 {
		  to: "bot2";
		  relative: 1.0 1.0;
		  offset: -3 -11;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 1.0;
	       }
	    }
	 }
	 part {
	    name: "e.swallow.buttons";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 1.0 1.0;
	       fixed: 0 1;
	       rel1 {
                  to_y: "bot2";
		  relative: 1.0 0.0;
		  offset:   -5   1;
	       }
	       rel2 {
                  to_y: "bot2";
		  relative: 1.0 0.0;
		  offset:   -5  1;
	       }
	    }
	 }
	 part { name: "tbs";
            mouse_events:  0;
	    description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
	       image.normal: "wp-tbs.png";
	       fill.smooth: 0;
	    }
	    description { state: "out" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "tb1";
                  relative: 0.0 0.0;
                  offset: 0 -100;
               }
               rel2 {
                  to_x: "tb3";
                  relative: 1.0 1.0;
                  offset: 200 -1;
               }
            }
	 }
	 part { name: "cover";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
               visible: 0;
	    }
	    description { state: "out" 0.0;
               inherit: "default" 0.0;
               visible: 1;
	    }
	 }
	 part { name: "tb1";
	    description { state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "tb2";
                  to_y: "aup";
                  relative: 0.0 0.0;
                  offset: 0 -6;
               }
               rel2 {
                  to_x: "aup";
                  to_y: "tb2";
                  relative: 1.0 0.0;
                  offset: 15 -1;
               }
	       image {
                  normal: "wp-tb1.png";
                  border: 2 11 3 0;
               }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "tb2";
	    description { state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "e.swallow.extras";
                  to_y: "e.swallow.extras";
                  relative: 0.0 0.0;
                  offset: -4 -7;
               }
               rel2 {
                  to_x: "e.swallow.extras";
                  to_y: "e.swallow.extras";
                  relative: 1.0 1.0;
                  offset: -10 3;
               }
	       image {
                  normal: "wp-tb2.png";
                  border: 2 2 4 0;
               }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "tb3";
	    description { state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "e.swallow.extras";
                  to_y: "tb2";
                  relative: 1.0 1.0;
                  offset: 18 -1;
               }
	       image {
                  normal: "wp-tb3.png";
                  border: 10 12 4 0;
               }
	       fill.smooth: 0;
	    }
	 }
	 part {
	    name: "e.swallow.extras";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.0 0.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 4 0;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 4 0;
	       }
	    }
            description { state: "out" 0.0;
               inherit: "default" 0.0;
               align: 0.0 1.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset: 4 -10;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset: 4 -10;
	       }
            }
         }
	 part { name: "aup";
            mouse_events:  0;
	    description { state: "default" 0.0;
               align: 0.0 1.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 0.0 0.0;
                  offset: 5 -5;
               }
               rel2 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 0.0 0.0;
                  offset: 5 -3;
               }
	       image.normal: "big_arrow_up.png";
	    }
	 }
	 part { name: "ain";
	    type: RECT;
	    description { state: "default" 0.0;
               rel1.to: "aup";
               rel2.to: "aup";
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "aout";
	    type: RECT;
	    description { state: "default" 0.0;
               rel1.to: "aup";
               rel2.to: "aup";
	       color: 0 0 0 0;
	    }
	    description { state: "out" 0.0;
               inherit: "default" 0.0;
               visible: 0;
	    }
	 }
	 part { name: "bot2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -16;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
	       image {
                  normal: "wp-bot2.png";
               }
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 32 0;
		  }
	       }
	    }
	 }
	 part { name: "shadow1";
	    mouse_events:  0;
	    scale: 1;
            description { state: "default" 0.0;
	       image.normal: "topsh.png";
	       align: 0.0 0.0;
	       min: 1 16;
	       max: 99999 16;
	       fill.smooth: 0;
	    }
	 }
	 part { name: "shadow2";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.relative: 0.0 1.0;
	       rel1.offset: 0 -4;
	       image.normal: "dia_botshad.png";
	       fill {
		  smooth: 0;
		  size {
		     relative: 0.0 1.0;
		     offset: 64 0;
		  }
	       }
	    }
	 }
	 part { name: "busy_clip";
	    type: RECT;
	    description { state: "default" 0.0;
               visible: 0;
	       color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
               visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.text.busy_label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
            clip_to: "busy_clip";
	    mouse_events: 0;
	    scale: 1;
	    description {
	       state: "default" 0.0;
	       align: 0.5 0.0;
	       rel1 {
		  to: "busy";
		  relative: 0.0 1.0;
		  offset: 0 4;
	       }
	       rel2 {
		  to: "busy";
		  relative: 1.0 1.0;
		  offset: -1 4;
	       }
	       color: 255 255 255 255;
	       color3: 0 0 0 32;
	       text {
		  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.0;
	       }
	    }
	 }
	 part { name: "busy";
	    mouse_events:  0;
            clip_to: "busy_clip";
	    description { state: "default" 0.0;
	       min: 32 32;
	       max: 32 32;
	       aspect: 1.0 1.0;
	       aspect_preference: BOTH;
	       rel1 {
		  relative: 0.5 0.5;
		  offset:   0 0;
	       }
               rel2 {
		  relative: 0.5 0.5;
		  offset:   -1 1;
	       }
	       image {
		  normal: "busy-9.png";
		  tween:  "busy-1.png";
		  tween:  "busy-2.png";
		  tween:  "busy-3.png";
		  tween:  "busy-4.png";
		  tween:  "busy-5.png";
		  tween:  "busy-6.png";
		  tween:  "busy-7.png";
		  tween:  "busy-8.png";
	       }
	    }
	 }
      }
      programs {
	 program { name: "send_click";
	    signal: "mouse,up,1";
	    source: "events";
	    action: SIGNAL_EMIT "e,action,click" "e";
	 }
	 program { name: "outb";
	    signal: "mouse,down,1";
	    source: "aout";
	    action: SIGNAL_EMIT "e,action,panel,show" "e";
         }
	 program { name: "out";
	    signal: "e,action,panel,show";
	    source: "e";
            action:  STATE_SET "out" 0.0;
            target:  "aout";
            target:  "cover";
            after:   "out2";
	 }
	 program { name: "out2";
            action:  STATE_SET "out" 0.0;
            target:  "e.swallow.extras";
            target:  "tbs";
            transition: DECELERATE 0.5;
         }
	 program { name: "in0";
	    signal: "mouse,down,1";
	    source: "cover";
            action:  STATE_SET "default" 0.0;
            target:  "aout";
            target:  "cover";
            after:   "in2";
	 }
	 program { name: "inb";
	    signal: "mouse,down,1";
	    source: "ain";
	    action: SIGNAL_EMIT "e,action,panel,hide" "e";
	 }
	 program { name: "in";
	    signal: "e,action,panel,hide";
	    source: "e";
            action:  STATE_SET "default" 0.0;
            target: "aout";
            after: "in2";
	 }
	 program { name: "in2";
            action:  STATE_SET "default" 0.0;
            target:  "e.swallow.extras";
            target:  "tbs";
            target:  "cover";
            transition: DECELERATE 1.0;
         }
	 program { name: "busy1";
	    signal: "e,state,busy,on";
	    source: "e";
            action:  STATE_SET "visible" 0.0;
	    transition: LINEAR 1.0;
            target: "busy_clip";
	 }
         program { name: "busy_anim";
	    signal: "e,state,busy,on";
	    source: "e";
	    action: STATE_SET "default" 0.0;
	    transition: LINEAR 0.3333;
	    target: "busy";
	    after:  "busy_anim";
	 }
	 program { name: "busy2";
	    signal: "e,state,busy,off";
	    source: "e";
            action:  STATE_SET "default" 0.0;
	    transition: LINEAR 1.0;
            target: "busy_clip";
            after: "busy3";
	 }
	 program { name: "busy3";
            action: ACTION_STOP;
            target: "busy_anim";
	 }
      }
   }
   group { name: "e/conf/wallpaper/main/mini";
      images {
	 image: "e17_mini_button_shadow2.png" COMP;
         image: "glow.png" COMP;
      }
      parts {
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -3 -3;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       fill {
		  smooth: 0;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part {	name: "glow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  offset: -10 -10;
	       }
	       rel2 {
		  to: "icon_box";
		  offset: 9 9;
	       }
	       fill.smooth: 0;
	       image {
		  normal: "glow.png";
		  border: 10 10 10 10;
	       }
               color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
               visible: 0;
	       rel1 {
                  to: "icon_zoom";
		  relative: 0.0 0.0;
		  offset:   4   4;
	       }
	       rel2 {
                  to: "icon_zoom";
		  relative: 1.0 1.0;
		  offset:   -5  -5;
	       }
	       color: 255 255 255 255;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_zoom";
	    type: RECT;
	    mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 1.0 1.0;
            }
            description { state: "min" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: 0.5 0.5;
	       rel2.relative: 0.5 0.5;
            }
            description { state: "max" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.2 -0.2;
	       rel2.relative: 1.2 1.2;
            }
            description { state: "max2" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.05 -0.05;
	       rel2.relative: 1.05 1.05;
            }
         }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
		  relative: 0.0 0.0;
		  offset:   2   2;
	       }
	       rel2 {
                  to: "base";
		  relative: 1.0 1.0;
		  offset:   -3  -3;
	       }
	    }
	 }
	 part { name: "events";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
               visible: 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "sel";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
            transition: DECELERATE 0.2;
	    target:  "glow";
	 }
	 program { name: "unsel";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
	    target:  "glow";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon_zoom";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon_zoom";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.3;
	 }
	 program { name: "thumb_ungen";
	    signal:  "e,action,thumb,ungen";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    target:  "glow";
	    after:   "thumb_gen2";
	 }
      }
   }
   group { name: "e/conf/wallpaper/main/mini-theme";
      images {
	 image: "e17_mini_button_shadow2.png" COMP;
         image: "theme-label.png" COMP;
         image: "glow.png" COMP;
      }
      parts {
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -3 -3;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       fill {
		  smooth: 0;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part {	name: "glow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "icon_box";
		  offset: -10 -10;
	       }
	       rel2 {
		  to: "icon_box";
		  offset: 9 9;
	       }
	       fill.smooth: 0;
	       image {
		  normal: "glow.png";
		  border: 10 10 10 10;
	       }
               color: 255 255 255 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
               visible: 0;
	       rel1 {
                  to: "icon_zoom";
		  relative: 0.0 0.0;
		  offset:   4   4;
	       }
	       rel2 {
                  to: "icon_zoom";
		  relative: 1.0 1.0;
		  offset:   -5  -5;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_zoom";
	    type: RECT;
	    mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 1.0 1.0;
            }
            description { state: "min" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: 0.5 0.5;
	       rel2.relative: 0.5 0.5;
            }
            description { state: "max" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.2 -0.2;
	       rel2.relative: 1.2 1.2;
            }
            description { state: "max2" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.05 -0.05;
	       rel2.relative: 1.05 1.05;
            }
         }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
		  relative: 0.0 0.0;
		  offset:   2   2;
	       }
	       rel2 {
                  to: "base";
		  relative: 1.0 1.0;
		  offset:   -3  -3;
	       }
	    }
	 }
	 part { name: "theme";
	    mouse_events:  0;
	    description { state: "default" 0.0;
               visible: 0;
               aspect: 1.709677419 1.709677419;
	       rel1 {
                  to: "e.swallow.content";
		  relative: 0.6 0.6;
		  offset:   -1   -1;
	       }
	       rel2 {
                  to: "e.swallow.content";
		  relative: 1.0 1.0;
		  offset:   -1  -1;
	       }
               image.normal: "theme-label.png";
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "events";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
               visible: 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "sel";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
            transition: DECELERATE 0.2;
	    target:  "glow";
	 }
	 program { name: "unsel";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
	    target:  "glow";
	 }
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    target:  "theme";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon_zoom";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon_zoom";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.3;
	 }
	 program { name: "thumb_ungen";
	    signal:  "e,action,thumb,ungen";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    target:  "theme";
	    target:  "glow";
	    after:   "thumb_gen2";
	 }
      }
   }
   group { name: "e/conf/wallpaper/main/mini-remote";
      images {
	 image: "e17_mini_button_shadow2.png" COMP;
      }
      parts {
	 part {	name: "icon_box_shadow";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -3 -3;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 4 4;
	       }
	       fill {
		  smooth: 0;
	       }
	       image {
		  normal: "e17_mini_button_shadow2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_box";
	    type: RECT;
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       visible: 0;
	       align: 0.5 0.5;
	       rel1 {
		  to: "base";
		  relative: 0.0 0.0;
		  offset: -1 -1;
	       }
	       rel2 {
		  to: "base";
		  relative: 1.0 1.0;
		  offset: 0 0;
	       }
	       color: 0 0 0 64;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
	    type: RECT;
	    description { state: "default" 0.0;
               visible: 0;
	       rel1 {
                  to: "icon_zoom";
		  relative: 0.0 0.0;
		  offset:   4   4;
	       }
	       rel2 {
                  to: "icon_zoom";
		  relative: 1.0 1.0;
		  offset:   -5  -5;
	       }
	       color: 200 0 0 255;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "icon_zoom";
	    type: RECT;
	    mouse_events:  0;
            description { state: "default" 0.0;
               visible: 0;
	       rel1.relative: 0.0 0.0;
	       rel2.relative: 1.0 1.0;
            }
            description { state: "min" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: 0.5 0.5;
	       rel2.relative: 0.5 0.5;
            }
            description { state: "max" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.2 -0.2;
	       rel2.relative: 1.2 1.2;
            }
            description { state: "max2" 0.0;
               inherit: "default" 0.0;
	       rel1.relative: -0.05 -0.05;
	       rel2.relative: 1.05 1.05;
            }
         }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
		  relative: 0.0 0.0;
		  offset:   2   2;
	       }
	       rel2 {
                  to: "base";
		  relative: 1.0 1.0;
		  offset:   -3  -3;
	       }
	    }
	 }
	 part { name: "events";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
               visible: 0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "thumb_gen";
	    signal:  "e,action,thumb,gen";
	    source:  "e";
	    action:  STATE_SET "visible" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    after:   "thumb_gen2";
	 }
	 program { name: "thumb_gen2";
	    action:  STATE_SET "min" 0.0;
	    target:  "icon_zoom";
	    after:   "thumb_gen3";
	 }
	 program { name: "thumb_gen3";
	    action:  STATE_SET "max" 0.0;
	    target:  "icon_zoom";
	    transition: DECELERATE 0.2;
	    after:   "thumb_gen4";
	 }
	 program { name: "thumb_gen4";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.1;
	    after:   "thumb_gen5";
	 }
	 program { name: "thumb_gen5";
	    action:  STATE_SET "max2" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.2;
	    after:   "thumb_gen6";
	 }
	 program { name: "thumb_gen6";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_zoom";
	    transition: SINUSOIDAL 0.3;
	 }
	 program { name: "thumb_ungen";
	    signal:  "e,action,thumb,ungen";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "icon_box_shadow";
	    target:  "icon_box";
	    target:  "base";
	    target:  "icon_zoom";
	    target:  "e.swallow.content";
	    target:  "events";
	    after:   "thumb_gen2";
	 }
      }
   }
   group { name: "e/conf/wallpaper/main/scrollframe";
      images {
	 image: "arrow_up.png" COMP;
	 image: "arrow_down.png" COMP;
	 image: "bt_sm_base1.png" COMP;
	 image: "bt_sm_base2.png" COMP;
	 image: "bt_sm_shine.png" COMP;
	 image: "bt_sm_hilight.png" COMP;
	 image: "sb_runnerv.png" COMP;
      }
      parts {
//	 part { name: "clipper";
//	    type: RECT;
//	    mouse_events: 0;
//	    description { state: "default" 0.0;
//	    }
//	 }
	 part { name: "e.swallow.content";
//	    clip_to: "clipper";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 0 0;
	       rel2 {
		  relative: 0.0  1.0;
		  offset:   -1   -1;
		  to_x: "sb_vbar";
	       }
	    }
	 }
	 part { name: "sb_vbar";
	    type: RECT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 1.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -1 -1;
	       }
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       max: 0 99999;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -1 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -1 -1;
	       }
	    }
	 }
	 part { name: "sb_vbar_base";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0  1.0;
		  offset:   0	 -1;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0  0.0;
		  offset:   -1	 0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "sb_vbar_runner";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       max: 3 99999;
	       rel1.to:       "sb_vbar_base";
	       rel1.offset:   1 0;
	       rel2.to:       "sb_vbar_base";
	       image {
		  normal: "sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "sb_vbar_p1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "sb_vbar_a1";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "e.dragable.vbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_p2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       rel1 {
		  relative: 0.0 1.0;
		  to:       "e.dragable.vbar";
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  to:       "sb_vbar_a2";
	       }
	    }
	 }
	 part { name: "e.dragable.vbar";
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    scale: 1;
	    dragable {
	       x: 0 0 0;
	       y: 1 1 0;
	       confine: "sb_vbar_base";
	    }
	    description { state: "default" 0.0;
	       min: 17 17;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar_base";
	       }
	       image {
		  normal: "bt_sm_base2.png";
		  border: 6 6 6 6;
	       }
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       image.normal: "bt_sm_base1.png";
	    }
	 }
	 part { name: "sb_vbar_over1";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.relative: 1.0 0.5;
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_hilight.png";
		  border: 6 6 6 0;
	       }
	    }
	 }
	 part { name: "sb_vbar_over2";
	    clip_to: "sb_vbar";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "e.dragable.vbar";
	       rel2.to: "e.dragable.vbar";
	       image {
		  normal: "bt_sm_shine.png";
		  border: 6 6 6 0;
	       }
	    }
	 }

	 part { name: "sb_vbar_a1";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 0.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 { to: "sb_vbar";
		  relative: 0.0  0.0;
		  offset:   0    0;
	       }
	       rel2 { to: "sb_vbar";
		  relative: 1.0  0.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a1_arrow";
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a1";
	       rel2.to: "sb_vbar_a1";
	       image.normal: "arrow_up.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 -1;
	       rel2.offset: -1 -2;
	    }
	 }

	 part { name: "sb_vbar_a2";
	    type: RECT;
	    clip_to: "sb_vbar";
	    mouse_events: 1;
	    description { state: "default" 0.0;
	       min: 17 17;
	       align: 0.5 1.0;
	       aspect: 1.0 1.0;
	       aspect_preference: HORIZONTAL;
	       color: 0 0 0 0;
	       rel1 {
		  to: "sb_vbar";
		  relative: 0.0  1.0;
		  offset:   0    0;
	       }
	       rel2 {
		  to: "sb_vbar";
		  relative: 1.0  1.0;
		  offset:   -1   0;
	       }
	    }
	 }
	 part { name: "sb_vbar_a2_arrow";
	    type: IMAGE;
	    mouse_events: 0;
	    clip_to: "sb_vbar";
	    description { state: "default" 0.0;
	       max: 9 9;
	       rel1.to: "sb_vbar_a2";
	       rel2.to: "sb_vbar_a2";
	       image.normal: "arrow_down.png";
	    }
	    description { state: "clicked" 0.0;
	       inherit: "default" 0.0;
	       rel1.offset: 0 1;
	       rel2.offset: -1 0;
	    }
	 }
      }
      programs {
	 program { name: "sb_vbar_show";
	    signal: "e,action,show,vbar";
	    source: "e";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar";
	 }
	 program { name: "sb_vbar_hide";
	    signal: "e,action,hide,vbar";
	    source: "e";
	    action:  STATE_SET "hidden" 0.0;
	    target: "sb_vbar";
	 }

	 program { name: "sb_vbar_a1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a1_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a1";
	    action:  DRAG_VAL_STEP 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a1_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a1";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a1_arrow";
	 }
	 program { name: "sb_vbar_a2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "clicked" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_a2_down2";
	    signal: "mouse,down,1";
	    source: "sb_vbar_a2";
	    action:  DRAG_VAL_STEP 0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_a2_up";
	    signal: "mouse,up,1";
	    source: "sb_vbar_a2";
	    action:  STATE_SET "default" 0.0;
	    target: "sb_vbar_a2_arrow";
	 }
	 program { name: "sb_vbar_p1_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p1";
	    action:  DRAG_VAL_PAGE 0.0 -1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_p2_down";
	    signal: "mouse,down,1";
	    source: "sb_vbar_p2";
	    action:  DRAG_VAL_PAGE  0.0 1.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_down";
	    signal: "mouse,down,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "clicked" 0.0;
	    target: "e.dragable.vbar";
	 }
	 program { name: "sb_vbar_up";
	    signal: "mouse,up,1";
	    source: "e.dragable.vbar";
	    action:  STATE_SET "default" 0.0;
	    target: "e.dragable.vbar";
	 }
      }
   }


/////////////////////////////////////////////////////////////////////////////
   /*** MOD: EVERYTHING ***/

   ICON("everything-launch","icon_advanced.png",64)
     
   group { name: "e/widgets/everything/main";
       min: 620 118;
       images {
	   image: "base_bg.png" COMP;
	   image: "inset_sunk.png" COMP;
	   image: "menu_sel_bg.png" COMP;
	   image: "menu_sel_fg.png" COMP;
       }
       data.item: "shaped" "1";
       parts {
	   part { name: "bg";
	       description { state: "default" 0;
		   min: 420 118;
		   rel1.relative: 0.5 0.0;
		   rel2.relative: 0.5 1.0;
		   image {
		       normal: "bt_base2.png";
		       border: 7 7 5 5;
		   }
		   
	       }
	       description { state: "wide" 0;
		   inherit: "default" 0.0;
		   min: 620 118;
	       }
	   }
	       
	   part { name: "selector_frame";
	       type: RECT;
	       description { state: "default" 0;
		   color: 255 255 255 255;
		   rel1 {
		       offset: 5 5;
		       to: "bg";
		   }
		   rel2 {
		       offset: -6 -6;
		       to: "bg";
		   }
	       }
	   }
	   part { name: "e.swallow.subject_selector";
	       type: SWALLOW;
	       clip_to: "selector_frame";
	       description { state: "default" 0;
		   min: 200 100;
		   max: 200 100;
		   rel1 {
		       offset: 5 5;
		       to: "selector_frame";
		   }
		   rel2 {
		       relative: 0 0;
		       offset: 205 100;
		       to: "selector_frame";
		   }
	       }
	   }
	   part { name: "e.swallow.action_selector";
	       type: SWALLOW;
	       clip_to: "selector_frame";
	       description { state: "default" 0;
		   min: 200 100;
		   max: 200 100;
		   rel1 {
		       relative: 0 0;
		       offset: 205 5;
		       to: "selector_frame";
		   }
		   rel2 {
		       relative: 0 0;
		       offset: 405 100;
		       to: "selector_frame";
		   }
	       }
	   }
	   part { name: "e.swallow.object_selector";
	       type: SWALLOW;
	       clip_to: "selector_frame";
	       description { state: "default" 0;
		   max: 200 100;
		   visible: 0;
		   rel1 {
		       relative: 0 0;
		       offset: 405 5;
		       to: "selector_frame";
		   }
		   rel2 {
		       relative: 0 0;
		       offset: 605 100;
		       to: "selector_frame";
		   }
	       }
	       description { state: "wide" 0;
		   inherit: "default" 0.0;
		   visible: 1;
	       }
	   }

	   part { name: "over1";
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   rel1.to: "bg";
		   rel2.to: "bg";
		   rel2.relative: 1.0 0.5;
		   image {
		       normal: "bt_hilight.png";
		       border: 7 7 7 0;
		   }
		   color: 255 255 255 120;
	       }
	   }
	   part { name: "over2";
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   rel1.to: "bg";
		   rel2.to: "bg";
		   rel2.offset: -1 40;
		   
		   image {
		       normal: "bt_shine.png";
		       border: 7 7 7 0;
		   }
	       }
	   }
       }
       programs {
	   program { name: "object_selector_hide";
	       signal: "e,state,object_selector_hide";
	       source: "e";
	       action: STATE_SET "default" 0.00;
	       transition: SINUSOIDAL 0.15;
	       target: "bg";
	       target: "e.swallow.object_selector";
	   }
	   program { name: "object_selector_show";
	       signal: "e,state,object_selector_show";
	       source: "e";
	       action: STATE_SET "wide" 0.00;
	       transition: SINUSOIDAL 0.2;
	       target: "bg";
	       target: "e.swallow.object_selector";
	   }
       }
   }

   group { name: "e/widgets/everything/selector_item";
       images {
	   image: "gadman_border.png" COMP;
       }
       parts {
	   part { name: "clip";
	       type: RECT;
	       mouse_events: 0;
	       description {
		   state: "default" 0.0;
	       }
	   }

	   part { name: "border";
	       clip_to: "clip";
	       mouse_events:  0;
	       description { state: "default" 0.0;
		   color: 255 255 255 32;	       
		   image {
		       normal: "gadman_border.png";
		       border: 10 10 10 10;
		   }
	       }
	       description { state: "selected" 0.0;
		   inherit: "default" 0.0;
		   color: 255 255 255 128;
	       }
	   }

	   part { name: "inner_clip";
	       type: RECT;
	       clip_to: "clip";
	       description {
		   state: "default" 0.0;
		   rel1.offset:   10   10;
		   rel2.offset:   -11   -11;
	       }
	   }

	   part { name: "icon_clip";
	       type: RECT;
	       clip_to: "inner_clip";
	       description {
		   state: "default" 0.0;
		   color: 255 255 255 255;
	       }
	       description {
		   state: "faded" 0.0;
		   color: 255 255 255 200;
	       }
	   }

	   part {
	       name: "e.swallow.icons";
	       type: SWALLOW;
	       clip_to: "icon_clip";
	       description {
		   state: "default" 0.0;
		   max: 64 64;
		   aspect: 1.0 1.0;
		   align: 0.0 0.5;
		   aspect_preference: VERTICAL;
		   rel1 {
		       relative: 0.0 0.0;
		       offset:   10   10;
		   }
		   rel2 {
		       relative: 0.0 1.0;
		       offset:   74  -11;
		   }
	       }
	   }
	   part { name: "e.text.label";
	       type: TEXT;
	       clip_to: "inner_clip";
	       effect: SOFT_SHADOW;
	       mouse_events: 0;
	       scale: 1;
	       description {
		   state: "default" 0.0;
		   rel1 {
		       offset: 6 1;
		       relative: 1.0 0.5;
		       to_x: "e.swallow.icons";
		   }
		   rel2.offset: -3 -2;
		   color: 240 240 240 255;
		   color3: 0 0 0 0;
		   color_class: "menu_item";
		   text {
		       font: "Sans:style=Bold";
		       size: 10;
		       min: 0 1;
		       align: 0.0 0.5;
		   }
	       }
	   }
	   part { name: "e.text.plugin";
	       type: TEXT;
	       clip_to: "inner_clip";
	       effect: SOFT_SHADOW;
	       mouse_events: 0;
	       scale: 1;
	       description {
		   state: "default" 0.0;
		   rel1 {
		       offset: 6 12;
		       relative: 1.0 0.0;
		       to_x: "e.swallow.icons";
		   }
		   rel2.offset: -13 -2;
		   color: 210 210 210 255;
		   color3: 0 0 0 0;
		   color_class: "menu_item";
		   text {
		       font: "Sans";
		       size: 10;
		       min: 0 1;
		       align: 1.0 0.0;
		   }
	       }
	   }
       }
       programs {
	   program { name: "sel";
	       signal: "e,state,selected";
	       source: "e";
	       action: STATE_SET "selected" 0.0;
	       transition: SINUSOIDAL 0.2;
	       target: "border";
	   }
	   program { name: "unsel";
	       signal: "e,state,unselected";
	       source: "e";
	       action: STATE_SET "default" 0.0;
	       transition: SINUSOIDAL 0.3;
	       target: "border";
	   }
	   program { name: "update";
	       signal: "e,signal,update";
	       source: "e";
	       action: STATE_SET "faded" 0.0;
	       transition: DECELERATE 0.1;
	       target: "icon_clip";
	       after: "show_icon";
	   }
	   program { name: "show_icon";
	       action: STATE_SET "default" 0.0;
	       transition: ACCELERATE 0.3;
	       target: "icon_clip";
	   }
       }
   }
   
   group { name: "e/widgets/everything/list";
       images {
	   image: "base_bg.png" COMP;
	   image: "inset_sunk.png" COMP;
	   image: "menu_sel_bg.png" COMP;
	   image: "menu_sel_fg.png" COMP;
       }
       data.item: "shaped" "1";
       /* offset to main popup */
       data.item: "offset_y" "-4";
       
       min: 350 235;
       
       parts {	   
	   part { name: "base";
	       mouse_events:  0;
	       type: RECT;
	       description { state: "default" 0.0;
		   rel1 {
		       relative: 0.0 1.0;
		       to_y: "input_base";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       to_y: "input_base";
		   }
	       }
	       description { state: "visible" 0.0;
		   rel1 {
		       relative: 0.0 1.0;
		       to_y: "input_base";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		   }
	       }
	   }
	   	 
	   part { name: "bg";
	       description { state: "default" 0.0;
		   rel2 {
		       to: "base";
		   }
		   image {
		       normal: "base_bg.png";
		       border: 2 2 2 2;
		   }
		   fill.smooth: 0;
		   color: 235 235 235 255;
	       }
	   }

	   part { name: "list_bg";
	       type: RECT;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   rel1 {
		       to: "list_clip";
		       offset: 0 0;
		   }
		   rel2 {
		       to: "list_clip";
		       offset: 0  0;
		   }
		   color: 255 255 255 255;
	       }
	   }
	   
	   part { name: "input_base";
	       mouse_events: 1;
	       type: RECT;
	       description { state: "default" 0.0;
		   rel1 {
		       relative: 0.0 0.0;
		   }
		   rel2 {
		       relative: 1.0 0.0;
		       offset: -1 4;
		   }
	       }
	       description { state: "visible" 0.0;
		   rel1 {
		       relative: 0.0 0.0;
		   }
		   rel2 {
		       relative: 1.0 0.0;
		       offset: -1 30;
		   }
	       }
	   }

	   part { name: "input_bg";
	       mouse_events: 1;
	       clip_to: "input_base";
	       description { state: "default" 0.0;
		   min: 32 28;
		   max: 9999 28;
		   visible: 0;
		   rel1 {
		       relative: 0.0 0.0;
		       offset:  1 2;
		       to: "input_base";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       offset: -1 -1;
		       to: "input_base";
		   }
		   image {
		       normal: "bt_dis_base.png";
		       border: 4 4 4 4;
		   }
		   color: 235 235 235 255;		   
	       }
	       description { state: "visible" 0.0;
		   inherit: "default" 0.0;
		   visible: 1;
	       }
	   }
	   part { name: "e.text.label";
	       type: TEXT;
	       effect: SHADOW;
	       scale: 1;
	       clip_to: "input_base";
	       description { state: "default" 0.0;
	   	   fixed: 0 1;
	   	   align: 0.0 0.5;
	   	   rel1 {
	   	       relative: 0.0 0.0;
	   	       offset:   10   7;
		       to: "input_bg";
	   	   }
	   	   rel2 {
	   	       relative: 0.0 1.0;
	   	       offset:   10  -5;
		       to: "input_bg";
	   	   }
	   	   color: 10 10 10 255;
	   	   color3: 255 255 255 128;
	   	   text {
	   	       font: "Sans:style=Bold";
	   	       size: 14;
	   	       align: 0.0 0.5;
	   	       min: 1 1;
	   	       /* text_class: "exebuf_command"; */
	   	   }
	       }
	   }

	   /* part { name:  "cursor";
	    *    type:  RECT;
	    *    mouse_events:  0;
	    *    description { state: "default" 0.0;
	    *       min: 1 18;
	    *       max: 1 18;
	    *       align: 0.0 0.5;
	    *       fixed: 1 1;
	    *       rel1 {
	    * 	  relative: 1.0  0.0;
	    * 	  offset:   1    0;
	    * 	  to: "e.text.label";
	    *       }
	    *       rel2 {
	    * 	  relative: 1.0  1.0;
	    * 	  offset:   1    -1;
	    * 	  to: "e.text.label";
	    *       }
	    *       color: 10 10 10 220;
	    *    }
	    *    description { state:    "faded" 0.0;
	    *       inherit:  "default" 0.0;
	    *       color:    10 10 10 0;
	    *    }
	    * } */
	   
	    part { name: "input_over2";
	       mouse_events: 0;
	       clip_to: "input_base";
	       description { state: "default" 0.0;
		   visible: 0;
		   rel1.to: "input_bg";
		   rel2.to: "input_bg";
		   image {
		       normal: "bt_dis_shine.png";
		       border: 4 4 4 4;
		   }
	       }
	       description { state: "visible" 0.0;
		   inherit: "default" 0.0;
		   visible: 1;
	       }

	   }
	   part { name: "input_over1";
	       mouse_events: 0;
	       clip_to: "input_base";
	       description { state: "default" 0.0;
		   visible: 0;
		   rel1.to: "input_bg";
		   rel2.to: "input_bg";
		   rel2.relative: 1.0 0.5;
		   image {
		       normal: "bt_dis_hilight.png";
		       border: 4 4 4 0;
		   }
		   color: 255 255 255 128;
	       }
	       description { state: "visible" 0.0;
		   inherit: "default" 0.0;
		   visible: 1;
	       }
	   }
	   
	   part { name: "selector_base";
	       mouse_events: 1;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   min: 32 28;
		   max: 9999 28;

		   rel1 {
		       relative: 0.0 1.0;
		       offset:  1 -30;
		       to: "base";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       offset: -2 -1;
		       to: "base";
		   }
		
		   image {
		       normal: "bt_dis_base.png";
		       border: 4 4 4 4;

		   }
		   color: 235 234 234 255;		   
	       }
	   }
	   part { name: "bar_clip";
	       type: RECT;
	       clip_to: "base";
	       mouse_events: 0;
	       description {
		   state: "default" 0.0;
		   rel1 {
		       to: "e.swallow.bar";
		       offset: 2 0;
		   }
		   rel2 {
		       to: "e.swallow.bar";
		       offset: -5 -1;
		   }
	       }
	   }
	   part { name: "e.swallow.bar";
	       clip_to: "bar_clip";
	       type: SWALLOW;
	       description {
		   state: "default" 0.0;
		   rel1 {
		       to: "selector_base";
		       offset: 0 2;
		   }
		   rel2 {
		       to: "selector_base";
		       offset: -2 -3;
		   }
	       }
	   }
	   part { name: "over2";
	       mouse_events: 0;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   rel1.to: "selector_base";
		   rel2.to: "selector_base";
		   image {
		       normal: "bt_dis_shine.png";
		       border: 4 4 4 4;
		   }
	       }
	   }
	   part { name: "over1";
	       mouse_events: 0;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   rel1.to: "selector_base";
		   rel2.to: "selector_base";
		   rel2.relative: 1.0 0.5;
		   image {
		       normal: "bt_dis_hilight.png";
		       border: 4 4 4 0;
		   }
		   color: 255 255 255 128;
	       }
	   }

	   part { name: "e.swallow.list";
	       type: SWALLOW;
	       clip_to: "list_clip";
	       description { state: "default" 0.0;
		   min: 32 170;
		   rel1 {
		       relative: 0.0 0.0;
		       offset:   4 5;
		       to: "list_clip";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       offset:   -5  -4;
		       to: "list_clip";
		   }
	       }
	       description { state: "visible" 0.0;
		   inherit: "default" 0.0;
		   min: 32 150;
	       }
		
	   }
	   part { name: "list_clip";
	       type: RECT;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   color: 255 255 255 255;
		   rel1 {
		       relative: 0.0 0.0;
		       offset:   3 0;
		       to: "base";
		   }
		   rel2 {
		       relative: 1.0 0.0;
		       offset:   -4  -4;
		       to_y: "selector_base";
		       to_x: "base";
		   }
	       }
	   }
	   part { name: "list_over";
	       mouse_events:  0;
	       clip_to: "base";
	       description { state: "default" 0.0;
		   rel1 {
		       offset: -1 -1;
		       to: "list_bg";
		   }
		   rel2 {
		       offset: 0 0;
		       to: "list_bg";
		   }
		   image {
		       normal: "inset_sunk.png";
		       border: 7 7 7 7;
		       middle: 0;
		   }
		   fill.smooth : 0;
	       }
	   }
       }
       programs {
	   program { name: "show_list";
	       signal: "e,state,list_show";
	       source: "e";
	       action: STATE_SET "visible" 0.0;
	       transition: ACCELERATE 0.1;
	       target: "base";
	       /* after: "show_list_end"; */
	   }
	   program { name: "hide_list";
	       signal: "e,state,list_hide";
	       source: "e";
	       action: STATE_SET "default" 0.0;
	       /* transition: SINUSOIDAL 0.1; */
	       target: "base";
	   }
	   program { name: "show_entry";
	       signal: "e,state,entry_show";
	       source: "e";
	       action: STATE_SET "visible" 0.0;
	       transition: SINUSOIDAL 0.08;
	       target: "input_over1";
	       target: "input_over2";
	       target: "input_base";
	       target: "input_bg";
	       target: "e.swallow.list";
	     }
	   program { name: "hide_entry";
	       signal: "e,state,entry_hide";
	       source: "e";
	       action: STATE_SET "default" 0.0;
	       transition: SINUSOIDAL 0.08;
	       target: "input_over1";
	       target: "input_over2";
	       target: "input_base";
	       target: "input_bg";
	       target: "e.swallow.list";
	   }
	   /* program { name: "blink_off";
	    * 	   signal:  "show";
	    * 	   source:  "";
	    * 	   action:  STATE_SET "faded" 0.0;
	    * 	   transition: SINUSOIDAL 0.5;
	    * 	   target:  "cursor";
	    * 	   after:   "blink_on";
	    * }
	    * program { name: "blink_on";
	    * 	   action:  STATE_SET "default" 0.0;
	    * 	   transition: SINUSOIDAL 0.25;
	    * 	   target:  "cursor";
	    * 	   after:   "blink_off";
	    * } */

	   /* program { name: "show_list_end";
	    *     action: SIGNAL_EMIT "e,state,list_shown" "e";
	    * } */
       }
   }

   group { name: "e/widgets/everything/item";
       images {
	  image: "icon_right_arrow.png" COMP;
       }
       parts {	   
	   part { name: "bg";
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   visible: 0;
		   color: 255 255 255 0;
		   rel1.offset: -5 -3;
		   rel2.offset: 4 5;
		   image {
		       normal: "menu_sel_bg.png";
		       border: 8 8 5 9;
		   }
	       }
	       description { state: "selected" 0.0;
		   inherit: "default" 0.0;
		   visible: 1;
		   color: 255 255 255 255;
		   rel1.offset: -2 0;
		   rel2.offset: 1 2;
	       }
	   }
	   part { name: "e.text.title";
	       type: TEXT;
	       effect: SOFT_SHADOW;
	       mouse_events: 0;
	       scale: 1;
	       description {
		   state: "default" 0.0;
		   rel1 {
		       offset: 5 3;
		       relative: 1.0 0.0;
		       to_x: "e.swallow.icons";
		   }
		   rel2 {
		       offset: -3 -2;
		       to_x: "arrow";
		   }
		   color: 60 60 60 255;
		   color3: 255 255 255 64;
		   color_class: "menu_item";
		   text {
		       font: "Sans:style=Bold";
		       size: 10;
		       min: 0 1;
		       align: 0.0 0.5;
		       text_class: "menu_item";
		   }
	       }
	       description { state: "selected" 0.0;
		   inherit: "default" 0.0;
		   color: 255 255 255 255;
		   color3: 0 0 0 64;
		   color_class: "menu_item";
	       }
	   }
	   part {
	       name: "e.swallow.icons";
	       type: SWALLOW;
	       description {
		   state: "default" 0.0;
		   max: 20 20;
		   aspect: 1.0 1.0;
		   align: 0.0 0.5;
		   aspect_preference: VERTICAL;
		   rel1 {
		       relative: 0.0 0.0;
		       offset:   3   1;
		   }
		   rel2 {
		       relative: 0.0 1.0;
		       offset:   -3   -2;
		   }
	       }
	   }
	   part {
	       name: "arrow";
	       description {
		   state: "default" 0.0;
		   max: 20 20;
		   align: 0.0 0.5;
		   aspect_preference: VERTICAL;
		   rel1 {
		       relative: 1.0 0.0;
		       offset:   -21 1;
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       offset:   -3   -2;
		   }
		   image {
		       normal: "icon_right_arrow.png";
		   }
		   color: 255 255 255 0;
	       }
	       description {
		   state: "visible" 0.0;
		   inherit: "default" 0.0;
		   color: 255 255 255 255;
	       }
	   }
	   part { name: "fg";
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   visible: 0;
		   color: 255 255 255 0;
		   rel1.to: "bg";
		   rel2.to: "bg";
		   image {
		       normal: "menu_sel_fg.png";
		       border: 8 8 5 9;
		   }
	       }
	       description { state: "selected" 0.0;
		   inherit: "default" 0.0;
		   visible: 1;
		   color: 255 255 255 255;
	       }
	   }
	   part {
	       name:          "e.event.exebuf.item";
	       type:          RECT;
	       mouse_events:  1;
	       description {
		   state:    "default" 0.0;
		   min:      14 14;
		   visible:  1;
		   color: 0 0 0 0;
		   rel1 {
		       relative: 1.0  0.0;
		       offset:   1    -1;
		       to_x: "e.swallow.icons";
		   }
		   rel2 {
		       relative: 1.0  1.0;
		       offset:   -1   -1;
		   }
	       }
	   }
       }
       programs {
	   program { name: "sel";
	       signal: "e,state,selected";
	       source: "e";
	       action: STATE_SET "selected" 0.0;
	       /* transition: LINEAR 0.2; */
	       target: "bg";
	       target: "fg";
	       target: "e.text.title";
	   }
	   program { name: "unsel";
	       signal: "e,state,unselected";
	       source: "e";
	       action: STATE_SET "default" 0.0;
	       /* transition: LINEAR 0.1; */
	       target: "bg";
	       target: "fg";
	       target: "e.text.title";
	       target: "arrow";
	   }
	   program { name: "arrow";
	       signal: "e,state,arrow_show";
	       source: "e";
	       action: STATE_SET "visible" 0.0;
	       target: "arrow";
	   }
       }
   }

   group { name: "e/widgets/everything/tab_item";
      images {
         image: "toolbar_sel.png" COMP;
      }
      parts {
	 part { name: "label2";
	    type: TEXT;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1.to: "e.text.label";
	       rel2.to: "e.text.label";
	       color: 0 0 0 255;
	       text {
                  font: "Sans";
		  text_source: "e.text.label";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 0;
	    }
	 }
	 part { name: "bg";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	       image {
		  normal: "toolbar_sel.png";
		  border: 3 3 0 0;
	       }
               fill.smooth: 0;
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       color: 255 255 255 255;
	    }
	 }
	 part { name: "e.swallow.icon";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       align: 0.5 0.5;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 2 2;
	       }
	       rel2 {
		  to_y: "e.text.label";
		  relative: 1.0 0.0;
		  offset: -3 -1;
	       }
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "e.text.label";
	    type: TEXT;
	    effect: SOFT_SHADOW;
	    mouse_events:  0;
	    scale: 1;
	    description { state: "default" 0.0;
	       align: 0.5 1.0;
	       fixed: 0 1;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   4 -1;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset:   -1 -1;
	       }
	       visible: 0;
	       color: 224 224 224 255;
	       color3: 0 0 0 32;
	       text {
                  font: "Sans:style=Bold";
		  size: 10;
		  min: 1 1;
		  align: 0.5 0.5;
	       }
	    }
	    description { state: "selected" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
	 part { name: "event";
	    type: RECT;
	    mouse_events: 1;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program { name: "go_active";
	    signal:  "e,state,selected";
	    source:  "e";
	    action:  STATE_SET "selected" 0.0;
	    target:  "bg";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.2;
	 }
	 program { name: "go_passive";
	    signal:  "e,state,unselected";
	    source:  "e";
	    action:  STATE_SET "default" 0.0;
	    target:  "bg";
	    target:  "e.text.label";
	    target:  "label2";
	    transition: LINEAR 0.1;
	 }
	 /* program { name: "go";
	  *    signal:  "mouse,up,1";
	  *    source:  "event";
	  *    action:  SIGNAL_EMIT "e,action,click" "e";
	  * } */
      }
   }

   group { name: "e/widgets/everything/preview";
       parts {
	   part { name: "bg";
	       type: RECT;
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   color: 64 64 63 255;
		   rel1 {
		       relative: 0.0 0.0;
			offset: -4 -4;
			to: "frame";
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       offset: 4 4;
		       to: "frame";
		   }
	       }
	   }
	   part { name: "clip";
	       type: RECT;
	       mouse_events: 0;
	       description { state: "default" 0.0;
	       }
	   }
	   part { name: "frame";
	       type: RECT;
	       mouse_events: 0;
	       description { state: "default" 0.0;
		   visible: 0;		   
		   align: 0 0;
		   rel1 {
		       relative: 0.0 0.0;
		   }
		   rel2 {
		       relative: 1.0 1.0;
		   }
	       }
	   }
	   part { name: "clip1";
	       type: RECT;
	       clip_to: "clip";
	       description { state: "default" 0.0;
		   rel1.to: "e.swallow.icon1";
		   rel2.to: "e.swallow.icon1";
		   color: 200 200 200 0;
	       }
	       description { state: "right" 0.0;
		   inherit: "default" 0.0;
		   color: 255 255 255 255;
	       }
	   }

	   part { name: "e.swallow.icon1";
	       type: SWALLOW;
	       clip_to: "clip1";
	       description { state: "default" 0.0;
		   rel1 {
		       relative: 0.0 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 0.3333 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }
	       description { state: "right" 0.0;
		   rel1 {
		       relative: 0.3333 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 0.6666 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }
	   }
	   part { name: "clip2";
	       type: RECT;
	       clip_to: "clip";
	       description { state: "default" 0.0;
		   rel1.to: "e.swallow.icon2";
		   rel2.to: "e.swallow.icon2";
		   color: 255 255 255 255;
	       }
	       description { state: "left" 0.0;
		   inherit: "default" 0.0;
		   color: 200 200 200 0;
	       }
	       description { state: "right" 0.0;
		   inherit: "left" 0.0;
	       }
	   }

	   part { name: "e.swallow.icon2";
	       type: SWALLOW;
	       clip_to: "clip2";
	       description { state: "default" 0.0;
		   rel1 {
		       relative: 0.3333 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 0.6666 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }
	       description { state: "left" 0.0;
		   rel1 {
		       relative: 0.00 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 0.3333 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }
	       description { state: "right" 0.0;
		   rel1 {
		       relative: 0.6666 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }	
	   }
	   part { name: "clip3";
	       type: RECT;
	       clip_to: "clip";
	       description { state: "default" 0.0;
		   rel1.to: "e.swallow.icon3";
		   rel2.to: "e.swallow.icon3";
		   color: 200 200 200 0;
	       }
	       description { state: "left" 0.0;
		   inherit: "default" 0.0;
		   color: 255 255 255 255;
	       }
	   }
	   part { name: "e.swallow.icon3";
	       type: SWALLOW;
	       clip_to: "clip3";
	       description { state: "default" 0.0;
		   rel1 {
		       relative: 0.6666 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 1.0 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }
	       }
	       description { state: "left" 0.0;
		   rel1 {
		       relative: 0.3333 0.0;
		       to: "frame";
		       offset: 2 2;
		   }
		   rel2 {
		       relative: 0.6666 1.0;
		       to: "frame";
		       offset: -3 -3;
		   }		   
	       }
	   }
       }
       programs {
	   program { name: "slide_left";
	       signal:  "e,signal,slide_left";
	       source:  "e";
	       action:  STATE_SET "right" 0.0;
	       target:  "e.swallow.icon1";
	       target:  "e.swallow.icon2";
	       target:  "clip1";
	       target:  "clip2";
	       after:   "slide_middle";
	   }
	   program { name: "slide_right";
	       signal:  "e,signal,slide_right";
	       source:  "e";
	       action:  STATE_SET "left" 0.0;
	       target:  "e.swallow.icon2";
	       target:  "e.swallow.icon3";
	       target:  "clip2";
	       target:  "clip3";
	       after:   "slide_middle";
	   }
	   program { name: "slide_middle";
	       action:  STATE_SET "default" 0.0;
	       target:  "e.swallow.icon1";
	       target:  "e.swallow.icon2";
	       target:  "e.swallow.icon3";
	       target:  "clip1";
	       target:  "clip2";
	       target:  "clip3";
	       transition: SINUSOIDAL 0.2;
	   }
       }
   }
   



