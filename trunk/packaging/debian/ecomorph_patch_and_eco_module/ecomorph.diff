diff -Naur e17-unpatched/configure.ac ecomorph-e17/configure.ac
--- e17-unpatched/configure.ac	2009-06-16 15:27:18.000000000 +0200
+++ ecomorph-e17/configure.ac	2009-07-18 13:57:45.000000000 +0200
@@ -423,6 +423,7 @@
 AC_E_OPTIONAL_MODULE([connman], false)
 AC_E_OPTIONAL_MODULE([illume], true)
 AC_E_OPTIONAL_MODULE([syscon], true)
+AC_E_OPTIONAL_MODULE([eco], true)
 AC_E_OPTIONAL_MODULE([everything], true)
 AC_E_OPTIONAL_MODULE([systray], true)
 
@@ -557,6 +558,8 @@
 src/modules/illume/dicts/Makefile
 src/modules/syscon/Makefile
 src/modules/syscon/module.desktop
+src/modules/eco/Makefile
+src/modules/eco/module.desktop
 src/modules/everything/Makefile
 src/modules/everything/module.desktop
 src/modules/systray/Makefile
@@ -569,7 +572,9 @@
 data/themes/images/Makefile
 data/other/Makefile
 data/xsession/Makefile
+data/xsession/ecomorph.desktop
 data/xsession/enlightenment.desktop
+data/script/Makefile
 data/etc/Makefile
 data/icons/Makefile
 data/backgrounds/Makefile
diff -Naur e17-unpatched/data/Makefile.am ecomorph-e17/data/Makefile.am
--- e17-unpatched/data/Makefile.am	2008-12-25 09:55:32.000000000 +0100
+++ ecomorph-e17/data/Makefile.am	2009-07-18 13:57:45.000000000 +0200
@@ -7,5 +7,6 @@
 input_methods \
 etc \
 icons \
-backgrounds
+backgrounds \
+script
 
diff -Naur e17-unpatched/data/script/ecomorph.sh ecomorph-e17/data/script/ecomorph.sh
--- e17-unpatched/data/script/ecomorph.sh	1970-01-01 01:00:00.000000000 +0100
+++ ecomorph-e17/data/script/ecomorph.sh	2009-07-18 13:57:45.000000000 +0200
@@ -0,0 +1,339 @@
+#!/bin/sh
+# Ecomp Manager wrapper script
+# 
+# Copyright (c) 2007 Kristian Lyngstøl <kristian@bohemians.org>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+#
+# Contributions by: Treviño (3v1n0) <trevi55@gmail.com>, Ubuntu Packages
+#
+# Much of this code is based on Beryl code, also licensed under the GPL.
+# This script will detect what options we need to pass to ecomp to get it
+# started, and start a default plugin and possibly window decorator.
+# 
+
+
+ECOMP_BIN_PATH="/usr/local/bin/" # For window decorators and ecomp
+PLUGIN_PATH="/usr/local/lib/ecomp/" 
+GLXINFO="/usr/bin/glxinfo"
+#KWIN="/usr/bin/kwin"
+#METACITY="/usr/bin/metacity"
+ECOMP_NAME="ecomorph" # Final name for ecomp (ecomp.real) 
+
+# For Xgl LD_PRELOAD
+LIBGL_NVIDIA="/usr/lib/nvidia/libGL.so.1.2.xlibmesa"
+LIBGL_FGLRX="/usr/lib/fglrx/libGL.so.1.2.xlibmesa"
+
+# Minimum amount of memory (in kilo bytes) that nVidia cards need
+# to be allowed to start
+# Set to 262144 to require 256MB
+NVIDIA_MEMORY="65536" # 64MB
+NVIDIA_SETTINGS="nvidia-settings" # Assume it's in the path by default
+
+# For detecting what driver is in use, the + is for one or more /'s
+XORG_DRIVER_PATH="/usr/lib/xorg/modules/drivers/+"
+
+# Driver whitelist
+WHITELIST="nvidia intel ati radeon i810"
+
+# blacklist based on the pci ids 
+# See http://wiki.ecomp-fusion.org/Hardware/Blacklist for details
+T="   1002:5954 1002:5854 1002:5955" # ati rs480
+T="$T 1002:4153" # ATI Rv350
+T="$T 8086:2982 8086:2992 8086:29a2 8086:2a02 8086:2a12"  # intel 965
+T="$T 8086:2972" # i965 (x3000)
+T="$T 1002:3152 1002:3150 1002:5462 1002:5653 " # ati X300 X600,X600 X700 
+BLACKLIST_PCIIDS="$T"
+unset T
+
+ECOMP_OPTIONS=""
+ECOMP_PLUGINS=""
+ENV=""
+
+# Use emerald by default if it exist
+#USE_EMERALD="yes"
+
+# No indirect by default
+INDIRECT="no"
+
+# Set to yes to enable verbose
+VERBOSE="yes"
+
+# Echos the arguments if verbose
+verbose()
+{
+	if [ "x$VERBOSE" = "xyes" ]; then
+		printf "$*"
+	fi
+}
+
+
+# Check for non power of two texture support
+check_npot_texture()
+{
+	verbose "Checking for non power of two support: "
+	if glxinfo 2> /dev/null | egrep -q '(GL_ARB_texture_non_power_of_two|GL_NV_texture_rectangle|GL_EXT_texture_rectangle|GL_ARB_texture_rectangle)' ; then
+		verbose "present. \n";
+		return 0;
+	else
+		verbose "Not present. \n"
+		return 1;
+	fi
+
+}
+
+# Check for presence of FBConfig
+check_fbconfig()
+{
+	verbose "Checking for FBConfig: "
+	if [ "$INDIRECT" = "yes" ]; then
+		$GLXINFO -i | grep -q GLX.*fbconfig 
+		FB=$?
+	else
+		$GLXINFO | grep -q GLX.*fbconfig 
+		FB=$?
+	fi
+
+	if [ $FB = "0" ]; then
+		unset FB
+		verbose "present. \n"
+		return 0;
+	else
+		unset FB
+		verbose "not present. \n"
+		return 1;
+	fi
+}
+
+
+# Check for TFP
+check_tfp()
+{
+	verbose "Checking for texture_from_pixmap: "
+	if [ $($GLXINFO 2>/dev/null | grep GLX_EXT_texture_from_pixmap -c) -gt 2 ] ; then
+		verbose "present. \n"
+		return 0;
+	else
+		verbose "not present. \n"
+		if [ "$INDIRECT" = "yes" ]; then
+			unset LIBGL_ALWAYS_INDIRECT
+			INDIRECT="no"
+			return 1;
+		else
+			verbose "Trying again with indirect rendering:\n";
+			INDIRECT="yes"
+			export LIBGL_ALWAYS_INDIRECT=1
+			check_tfp;
+			return $?
+		fi
+	fi
+}
+
+# Check wether the composite extension is present
+check_composite()
+{
+	verbose "Checking for Composite extension: "
+	if xdpyinfo -queryExtensions | grep -q Composite ; then
+		verbose "present. \n";
+		return 0;
+	else
+		verbose "not present. \n";
+		return 1;
+	fi
+}
+
+# Detects if Xgl is running
+check_xgl()
+{
+	verbose "Checking for Xgl: "
+	if xvinfo | grep -q Xgl ; then
+		verbose "present. \n"
+		return 0;
+	else
+		verbose "not present. \n"
+		return 1;
+	fi
+}
+
+# Check if the nVidia card has enough video ram to make sense
+check_nvidia_memory()
+{
+	MEM=$(${NVIDIA_SETTINGS} -q VideoRam | egrep Attribute\ \'VideoRam\'\ .*: | cut -d: -f3 | sed 's/[^0-9]//g')
+	if [ $MEM -lt $NVIDIA_MEMORY ]; then
+		verbose "Less than ${NVIDIA_MEMORY}kb of memory and nVidia";
+		return 1;
+	fi
+	return 0;
+}
+
+# Check for existence if NV-GLX
+check_nvidia()
+{
+	if [ ! -z $NVIDIA_INTERNAL_TEST ]; then
+		return $NVIDIA_INTERNAL_TEST;
+	fi
+	verbose "Checking for nVidia: "
+	if xdpyinfo | grep -q NV-GLX ; then
+		verbose "present. \n"
+		NVIDIA_INTERNAL_TEST=0
+		return 0;
+	else
+		verbose "not present. \n"
+		NVIDIA_INTERNAL_TEST=1
+		return 1;
+	fi
+}
+
+# Check if the max texture size is large enough compared to the resolution
+check_texture_size()
+{
+	TEXTURE_LIMIT=$(glxinfo -l | grep GL_MAX_TEXTURE_SIZE | sed 's/.*=[^0-9]//g')
+	RESOLUTION=$(xdpyinfo  | grep -i dimensions: | sed 's/[^0-9]*pixels.*(.*).*//' | sed 's/[^0-9x]*//')
+	VRES=$(echo $RESOLUTION | sed 's/.*x//')
+	HRES=$(echo $RESOLUTION | sed 's/x.*//')
+	verbose "Comparing resolution ($RESOLUTION) to maximum 3D texture size ($TEXTURE_LIMIT): ";
+	if [ $VRES -gt $TEXTURE_LIMIT ] || [ $HRES -gt $TEXTURE_LIMIT ]; then
+		verbose "Failed.\n"
+		return 1;
+	fi
+	verbose "Passed.\n"
+	return 0
+}
+
+# check driver whitelist
+running_under_whitelisted_driver()
+{
+	LOG=$(xset q|grep "Log file"|awk '{print $3}')
+	if [ -z "$LOG" ];then
+		verbose "AIEEEEH, no Log file found \n"
+		verbose "$(xset q) \n"
+	return 0
+	fi
+	for DRV in ${WHITELIST}; do
+		if egrep -q "Loading ${XORG_DRIVER_PATH}${DRV}_drv\.so" $LOG &&
+		   ! egrep -q "Unloading ${XORG_DRIVER_PATH}${DRV}_drv\.so" $LOG; 
+		then
+			return 0
+		fi
+	done
+	verbose "No whitelisted driver found\n"
+	return 1
+}
+
+# check pciid blacklist
+have_blacklisted_pciid()
+{
+	OUTPUT=$(lspci -n)
+	for ID in ${BLACKLIST_PCIIDS}; do
+		if echo "$OUTPUT" | egrep -q "$ID"; then
+			verbose "Blacklisted PCIID '$ID' found \n"
+			return 0
+		fi
+	done
+	OUTPUT=$(lspci -vn | grep -i VGA)
+	verbose "Detected PCI ID for VGA: $OUTPUT\n"
+	return 1
+}
+
+build_env()
+{
+	if check_nvidia; then
+		ENV="__GL_YIELD=NOTHING "
+	fi
+	if [ "$INDIRECT" = "yes" ]; then
+		ENV="$ENV LIBGL_ALWAYS_INDIRECT=1 "
+	fi
+	if check_xgl; then
+		if [ -f ${LIBGL_NVIDIA} ]; then
+			ENV="$ENV LD_PRELOAD=${LIBGL_NVIDIA}"
+			verbose "Enabling Xgl with nVidia drivers...\n"
+		fi
+		if [ -f ${LIBGL_FGLRX} ]; then
+			ENV="$ENV LD_PRELOAD=${LIBGL_FGLRX}"
+			verbose "Enabling Xgl with fglrx ATi drivers...\n"
+		fi
+	fi
+
+	ENV="$ENV FROM_WRAPPER=yes"
+
+	if [ -n "$ENV" ]; then
+		export $ENV
+	fi
+}
+
+build_args()
+{
+	if [ $INDIRECT = "yes" ]; then
+		ECOMP_OPTIONS="$ECOMP_OPTIONS --indirect-rendering "
+	fi
+	if check_nvidia; then
+		ECOMP_OPTIONS="$ECOMP_OPTIONS --loose-binding"
+	fi
+}
+
+####################
+# Execution begins here.
+
+# Read configuration from XDG paths
+if [ -z "$XDG_CONFIG_DIRS" ]; then
+	test -f /etc/xdg/ecomp/ecomp-manager && . /etc/xdg/ecomp/ecomp-manager
+else
+	test -f $XDG_CONFIG_DIRS/ecomp/ecomp-manager && . $XDG_CONFIG_DIRS/ecomp/ecomp-manager
+fi
+
+if [ -z "$XDG_CONFIG_HOME" ]; then
+	test -f $HOME/.config/ecomp/ecomp-manager && . $HOME/.config/ecomp/ecomp-manager
+else
+	test -f $XDG_CONFIG_HOME/ecomp/ecomp-manager && .  $XDG_CONFIG_HOME/ecomp/ecomp-manager
+fi
+
+
+if [ "x$LIBGL_ALWAYS_INDIRECT" = "x1" ]; then
+	INDIRECT="yes";
+fi
+
+# if we run under Xgl, we can skip some tests here
+if ! check_xgl; then
+	# if vesa or vga are in use, do not even try glxinfo (LP#119341)
+	if ! running_under_whitelisted_driver || have_blacklisted_pciid; then
+		abort_with_fallback_wm
+	fi
+	# check if we have the required bits to run ecomp and if not, 
+	# fallback
+	if ! check_tfp || ! check_npot_texture || ! check_composite || ! check_texture_size; then
+		abort_with_fallback_wm
+	fi
+
+	if check_nvidia && ! check_nvidia_memory; then
+		abort_with_fallback_wm
+	fi
+
+	if ! check_fbconfig; then
+		abort_with_fallback_wm
+	fi
+fi
+
+ECOMP_PLUGINS="ini dbus decoration text png regex move wall scale expo" 
+#ECOMP_PLUGINS="ccp"
+
+# get environment
+build_env
+build_args
+
+ecomorph $ECOMP_OPTIONS "$@" $ECOMP_PLUGINS 
+
+
diff -Naur e17-unpatched/data/script/enlightenment_start.sh ecomorph-e17/data/script/enlightenment_start.sh
--- e17-unpatched/data/script/enlightenment_start.sh	1970-01-01 01:00:00.000000000 +0100
+++ ecomorph-e17/data/script/enlightenment_start.sh	2009-07-18 13:57:45.000000000 +0200
@@ -0,0 +1,7 @@
+#!/bin/sh
+ecomorph.sh &
+emerald &
+sleep 1
+enlightenment_start -evil
+
+#xterm
diff -Naur e17-unpatched/data/script/Makefile.am ecomorph-e17/data/script/Makefile.am
--- e17-unpatched/data/script/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ecomorph-e17/data/script/Makefile.am	2009-07-18 13:57:45.000000000 +0200
@@ -0,0 +1,10 @@
+MAINTAINERCLEANFILES = Makefile.in
+filesdir = $(bindir)/
+files_DATA = enlightenment_start.sh
+
+install-filesDATA:
+	test -z $(DESTDIR)$(bindir) || /bin/mkdir -p $(DESTDIR)$(bindir)
+	install -c -m 755 'enlightenment_start.sh' '$(DESTDIR)$(bindir)/enlightenment_start.sh'
+	install -c -m 755 'ecomorph.sh' '$(DESTDIR)$(bindir)/ecomorph.sh'
+
+EXTRA_DIST = $(files_DATA)
diff -Naur e17-unpatched/data/xsession/ecomorph.desktop.in ecomorph-e17/data/xsession/ecomorph.desktop.in
--- e17-unpatched/data/xsession/ecomorph.desktop.in	1970-01-01 01:00:00.000000000 +0100
+++ ecomorph-e17/data/xsession/ecomorph.desktop.in	2009-07-18 13:57:45.000000000 +0200
@@ -0,0 +1,9 @@
+[Desktop Entry]
+Encoding=UTF-8
+Name=E17 - Ecomorph
+Comment=Log in using Ecomorph (Version @VERSION@)
+Comment[it]=Effettua accesso con Ecomorph (Versione @VERSION@)
+Type=XSession
+Icon=@prefix@/share/enlightenment/data/images/enlightenment.png
+Exec=@prefix@/bin/enlightenment_start.sh
+TryExec=@prefix@/bin/enlightenment_start.sh
diff -Naur e17-unpatched/data/xsession/Makefile.am ecomorph-e17/data/xsession/Makefile.am
--- e17-unpatched/data/xsession/Makefile.am	2008-12-25 09:55:31.000000000 +0100
+++ ecomorph-e17/data/xsession/Makefile.am	2009-07-18 14:29:27.000000000 +0200
@@ -1,4 +1,4 @@
 MAINTAINERCLEANFILES = Makefile.in
-filesdir = $(datadir)/xsessions
-files_DATA = enlightenment.desktop
-EXTRA_DIST = enlightenment.desktop.in
+filesdir = /usr/share/xsessions
+files_DATA = ecomorph.desktop enlightenment.desktop
+EXTRA_DIST = ecomorph.desktop.in enlightenment.desktop.in
diff -Naur e17-unpatched/src/bin/e_actions.c ecomorph-e17/src/bin/e_actions.c
--- e17-unpatched/src/bin/e_actions.c	2009-04-28 15:11:51.000000000 +0200
+++ ecomorph-e17/src/bin/e_actions.c	2009-07-18 13:57:45.000000000 +0200
@@ -323,47 +323,51 @@
    E_Border *bd;
    char dialog_text[1024];
 
-   if (!obj) obj = E_OBJECT(e_border_focused_get());
-   if (!obj) return;
-   if (obj->type != E_BORDER_TYPE)
-     {
-	obj = E_OBJECT(e_border_focused_get());
-	if (!obj) return;
-     }
-   bd = (E_Border *)obj;
-   if ((bd->lock_close) || (bd->internal)) return;
-   
-   if (kill_dialog) e_object_del(E_OBJECT(kill_dialog));
-
-   if (e_config->cnfmdlg_disabled)
+   if (!kill_dialog)
      {
-	_e_actions_cb_kill_dialog_ok(obj, NULL);
-	return;
+       
+       if (!obj) obj = E_OBJECT(e_border_focused_get());
+       if (!obj) return;
+       if (obj->type != E_BORDER_TYPE)
+	 {
+	   obj = E_OBJECT(e_border_focused_get());
+	   if (!obj) return;
+	 }
+       bd = (E_Border *)obj;
+       if ((bd->lock_close) || (bd->internal)) return;
+   
+       if (kill_dialog) e_object_del(E_OBJECT(kill_dialog));
+
+       if (e_config->cnfmdlg_disabled)
+	 {
+	   _e_actions_cb_kill_dialog_ok(obj, NULL);
+	   return;
+	 }
+
+       snprintf(dialog_text, sizeof(dialog_text),
+		_("You are about to kill %s.<br><br>"
+		  "Please keep in mind that all data of this window,<br>"
+		  "which has not been saved yet will be lost!<br><br>"
+		  "Are you sure you want to kill this window?"), 
+		bd->client.icccm.name);
+
+       kill_dialog = e_dialog_new(e_container_current_get(e_manager_current_get()), 
+				  "E", "_kill_dialog");
+       if (!kill_dialog) return;
+       e_win_delete_callback_set(kill_dialog->win, 
+				 _e_actions_cb_kill_dialog_delete);
+       e_dialog_title_set(kill_dialog, 
+			  _("Are you sure you want to kill this window?"));
+       e_dialog_text_set(kill_dialog, _(dialog_text));
+       e_dialog_icon_set(kill_dialog, "application-exit", 64);
+       e_dialog_button_add(kill_dialog, _("Yes"), NULL,
+			   _e_actions_cb_kill_dialog_ok, obj);
+       e_dialog_button_add(kill_dialog, _("No"), NULL,
+			   _e_actions_cb_kill_dialog_cancel, NULL);
+       e_dialog_button_focus_num(kill_dialog, 1);
+       e_win_centered_set(kill_dialog->win, 1);
+       e_dialog_show(kill_dialog);
      }
-
-   snprintf(dialog_text, sizeof(dialog_text),
-	    _("You are about to kill %s.<br><br>"
-	    "Please keep in mind that all data of this window,<br>"
-	    "which has not been saved yet will be lost!<br><br>"
-	    "Are you sure you want to kill this window?"), 
-	    bd->client.icccm.name);
-
-   kill_dialog = e_dialog_new(e_container_current_get(e_manager_current_get()), 
-			      "E", "_kill_dialog");
-   if (!kill_dialog) return;
-   e_win_delete_callback_set(kill_dialog->win, 
-			     _e_actions_cb_kill_dialog_delete);
-   e_dialog_title_set(kill_dialog, 
-		      _("Are you sure you want to kill this window?"));
-   e_dialog_text_set(kill_dialog, _(dialog_text));
-   e_dialog_icon_set(kill_dialog, "application-exit", 64);
-   e_dialog_button_add(kill_dialog, _("Yes"), NULL,
-		       _e_actions_cb_kill_dialog_ok, obj);
-   e_dialog_button_add(kill_dialog, _("No"), NULL,
-		       _e_actions_cb_kill_dialog_cancel, NULL);
-   e_dialog_button_focus_num(kill_dialog, 1);
-   e_win_centered_set(kill_dialog->win, 1);
-   e_dialog_show(kill_dialog);
 }
 
 /***************************************************************************/
@@ -521,6 +525,8 @@
 /***************************************************************************/
 ACT_FN_GO(window_maximized_toggle)
 {
+  printf ("act fn max\n");
+  
    if (!obj) obj = E_OBJECT(e_border_focused_get());
    if (!obj) return;
    if (obj->type != E_BORDER_TYPE)
@@ -1041,7 +1047,13 @@
 	if (desk)
 	  {
 	     /* switch desktop. Quite usefull from the interface point of view. */
-	     e_zone_desk_flip_by(bd->zone, to_x - dx, to_y - dy);
+	     //if(evil) e_border_desk_set(bd, desk);
+	     int saved = bd->button_grabbed;;
+	     
+	     if(evil)
+	       bd->button_grabbed = bd->button_grabbed ? 0 : 1;
+             e_zone_desk_flip_by(bd->zone, to_x - dx, to_y - dy);
+	     if(evil) bd->button_grabbed = saved;
 	     /* send the border to the required desktop. */
 	     e_border_desk_set(bd, desk);
 	     if (!bd->lock_focus_out)
@@ -3091,7 +3103,8 @@
    E_Maximize max = 0;
    int ret;
    char s1[32], s2[32];
-
+   printf ("max parse: %s\n", params ? params : "NONE");
+   
    if (!params) return e_config->maximize_policy;
    ret = sscanf(params, "%20s %20s", s1, s2);
    if (ret == 2)
diff -Naur e17-unpatched/src/bin/e_bindings.c ecomorph-e17/src/bin/e_bindings.c
--- e17-unpatched/src/bin/e_bindings.c	2009-04-19 15:19:44.000000000 +0200
+++ ecomorph-e17/src/bin/e_bindings.c	2009-07-18 13:57:45.000000000 +0200
@@ -863,7 +863,7 @@
 static int
 _e_bindings_context_match(E_Binding_Context bctxt, E_Binding_Context ctxt)
 {
-   if (bctxt == E_BINDING_CONTEXT_ANY) return 1;
+  if (bctxt == E_BINDING_CONTEXT_ANY && ctxt != E_BINDING_CONTEXT_ZONE) return 1;
    if (ctxt == E_BINDING_CONTEXT_UNKNOWN) return 0;
    if (bctxt == ctxt) return 1;
    return 0;
diff -Naur e17-unpatched/src/bin/e_border.c ecomorph-e17/src/bin/e_border.c
--- e17-unpatched/src/bin/e_border.c	2009-07-17 14:33:53.000000000 +0200
+++ ecomorph-e17/src/bin/e_border.c	2009-07-18 13:57:45.000000000 +0200
@@ -2,7 +2,8 @@
  * vim:ts=8:sw=3:sts=8:noexpandtab:cino=>5n-3f0^-2{2
  */
 #include "e.h"
-
+//#include ""
+#include <X11/Xlib.h>
 //#define INOUTDEBUG_MOUSE 1
 //#define INOUTDEBUG_FOCUS 1
 
@@ -18,6 +19,16 @@
 #define MOVE        8
 #define RESIZE_NONE 11
 
+
+#define ECOMORPH_EVENT_MAPPED  0
+#define ECOMORPH_EVENT_STATE   1
+#define ECOMORPH_EVENT_DESK    2
+#define ECOMORPH_EVENT_RESTART 3 /* rename others to EVENT_WINDOW_**/
+#define ECOMORPH_EVENT_GRAB    4
+#define ECOMORPH_WINDOW_STATE_INVISIBLE 0
+#define ECOMORPH_WINDOW_STATE_VISIBLE 1
+
+
 /* local subsystem functions */
 static void _e_border_free(E_Border *bd);
 static void _e_border_del(E_Border *bd);
@@ -131,6 +142,9 @@
 static Ecore_X_Window warp_to_win;
 static Ecore_Timer *warp_timer = NULL;
 
+static int border_moveresize_active = 0;
+
+
 EAPI int E_EVENT_BORDER_ADD = 0;
 EAPI int E_EVENT_BORDER_REMOVE = 0;
 EAPI int E_EVENT_BORDER_ZONE_SET = 0;
@@ -155,6 +169,12 @@
 ecore_x_window_gravity_set(bd->client.shell_win, grav); \
 ecore_x_window_gravity_set(bd->client.win, grav);
 
+/* evil */
+#define MOD(a,b) ((a) < 0 ? ((b) - ((-(a) - 1) % (b))) - 1 : (a) % (b))
+
+EAPI Ecore_X_Atom ECOMORPH_ATOM_MANAGED = 0;
+
+
 /* externally accessible functions */
 EAPI int
 e_border_init(void)
@@ -206,8 +226,10 @@
    E_EVENT_BORDER_FOCUS_OUT = ecore_event_type_new();
    E_EVENT_BORDER_PROPERTY = ecore_event_type_new();
 
+   /*evil*/
+   ECOMORPH_ATOM_MANAGED = ecore_x_atom_get("__ECOMORPH_WINDOW_MANAGED");   
+ 
    e_init_undone();
-   
    return 1;
 }
 
@@ -232,17 +254,26 @@
 
    bd = E_OBJECT_ALLOC(E_Border, E_BORDER_TYPE, _e_border_free);
    if (!bd) return NULL;
+
    ecore_x_window_shadow_tree_flush();
    e_object_del_func_set(E_OBJECT(bd), E_OBJECT_CLEANUP_FUNC(_e_border_del));
 
    bd->w = 1;
    bd->h = 1;
-   /* FIXME: ewww - round trip */
-   bd->client.argb = ecore_x_window_argb_get(win);
-   if (bd->client.argb)
+
+   //bd->client.argb = ecore_x_window_argb_get(win);
+   /* if (bd->client.argb) */
      bd->win = ecore_x_window_manager_argb_new(con->win, 0, 0, bd->w, bd->h);
-   else
-     bd->win = ecore_x_window_override_new(con->win, 0, 0, bd->w, bd->h);
+   /* else
+    *   bd->win = ecore_x_window_override_new(con->win, 0, 0, bd->w, bd->h); */
+
+   bd->client.win = win;
+   
+   if (evil) 
+     {
+	_e_border_hook_call(E_BORDER_HOOK_NEW_BORDER, bd);
+     }
+   
    ecore_x_window_shape_events_select(bd->win, 1);
    e_bindings_mouse_grab(E_BINDING_CONTEXT_BORDER, bd->win);
    e_bindings_wheel_grab(E_BINDING_CONTEXT_BORDER, bd->win);
@@ -256,15 +287,18 @@
    ecore_x_window_shape_events_select(bd->bg_win, 1);
    ecore_evas_name_class_set(bd->bg_ecore_evas, "E", "Frame_Window");
    ecore_evas_title_set(bd->bg_ecore_evas, "Enlightenment Frame");
-   if (bd->client.argb)
+   
+   /* if (bd->client.argb) */
      bd->client.shell_win = ecore_x_window_manager_argb_new(bd->win, 0, 0, 1, 1);
-   else
-     bd->client.shell_win = ecore_x_window_override_new(bd->win, 0, 0, 1, 1);
+   /* else
+    *   bd->client.shell_win = ecore_x_window_override_new(bd->win, 0, 0, 1, 1); */
+   
    ecore_x_window_container_manage(bd->client.shell_win);
    if (!internal) ecore_x_window_client_manage(win);
    /* FIXME: Round trip. XCB */
    /* fetch needed to avoid grabbing the server as window may vanish */
    att = &bd->client.initial_attributes;
+
    if ((!ecore_x_window_attributes_get(win, att)) || (att->input_only))
      {
 //	printf("##- ATTR FETCH FAILED/INPUT ONLY FOR 0x%x - ABORT MANAGE\n", win);
@@ -285,8 +319,6 @@
    bd->handlers = eina_list_append(bd->handlers, ecore_event_handler_add(ECORE_EVENT_MOUSE_MOVE, _e_border_cb_mouse_move, bd));
    bd->handlers = eina_list_append(bd->handlers, ecore_event_handler_add(ECORE_EVENT_MOUSE_WHEEL, _e_border_cb_mouse_wheel, bd));
 
-   bd->client.win = win;
-
    bd->client.icccm.title = NULL;
    bd->client.icccm.name = NULL;
    bd->client.icccm.class = NULL;
@@ -452,27 +484,28 @@
    bd->changes.size = 1;
    bd->changes.shape = 1;
 
-//   printf("##- ON MAP CLIENT 0x%x SIZE %ix%i\n",
-//	  bd->client.win, bd->client.w, bd->client.h);
+   /* printf("##- ON MAP CLIENT 0x%x SIZE %ix%i\n",
+    * 	  bd->client.win, bd->client.w, bd->client.h); */
 
    /* FIXME: if first_map is 1 then we should ignore the first hide event
     * or ensure the window is alreayd hidden and events flushed before we
     * create a border for it */
+
    if (first_map)
      {
-//	printf("##- FIRST MAP\n");
+	//	printf("##- FIRST MAP\n");
 	bd->x = att->x;
 	bd->y = att->y;
 	bd->changes.pos = 1;
-	bd->re_manage = 1;
+	bd->re_manage = 1; 
+
 // needed to be 1 for internal windw and on restart.        
 //	bd->ignore_first_unmap = 2;
      }
-
+   
    /* just to friggin make java happy - we're DELAYING the reparent until
     * eval time...
     */
-/*   ecore_x_window_reparent(win, bd->client.shell_win, 0, 0); */
    bd->need_reparent = 1;
 
    ecore_x_window_border_width_set(win, 0);
@@ -487,6 +520,7 @@
 
    bd->zone = e_zone_current_get(con);
    bd->desk = e_desk_current_get(bd->zone);
+   
    e_container_border_add(bd);
    borders = eina_list_append(borders, bd);
    bd2 = eina_hash_find(borders_hash, e_util_winid_str_get(bd->client.win));
@@ -517,6 +551,16 @@
    focus_stack = eina_list_append(focus_stack, bd);
    
    bd->pointer = e_pointer_window_new(bd->win, 0);
+
+
+   /* the border was moved according to its viewport */
+   /* TODO post_border_create_hook*/
+   if (evil && first_map)
+     {
+   	bd->x = MOD(att->x, bd->zone->w);
+   	bd->y = MOD(att->y, bd->zone->h);
+     }
+   
    return bd;
 }
 
@@ -689,12 +733,35 @@
    ev->desk = desk;
    e_object_ref(E_OBJECT(desk));
    ecore_event_add(E_EVENT_BORDER_DESK_SET, ev, _e_border_event_border_desk_set_free, NULL);
+   
+   if(evil)
+     { 
+	e_border_show(bd);
 
-   if ((bd->desk->visible) || (bd->sticky))
-     e_border_show(bd);
-   else
-     e_border_hide(bd, 1);
+	bd->fx.x = (bd->desk->x - bd->zone->desk_x_current) * bd->zone->w; 
+	bd->fx.y = (bd->desk->y - bd->zone->desk_y_current) * bd->zone->h;
 
+	/* TODO only use desktop property */
+	ecore_x_client_message32_send(e_manager_current_get()->root,
+				      ECOMORPH_ATOM_MANAGED,
+				      SubstructureRedirectMask | SubstructureNotifyMask,
+				      (unsigned int)bd->win, 
+				      ECOMORPH_EVENT_DESK, 
+				      desk->x, desk->y, bd->moving);
+
+	ecore_x_netwm_desktop_set(bd->win, 
+				  desk->x + (desk->zone->desk_x_count * desk->y));
+	if ((!bd->desk->visible) && (!bd->sticky))
+	  e_container_shape_hide(bd->shape);
+     }
+   else
+     {     
+       if ((bd->desk->visible) || (bd->sticky))
+	 e_border_show(bd);
+       else
+	 e_border_hide(bd, 1);
+     }
+   
    if (e_config->transient.desktop)
      {
 	Eina_List *l;
@@ -2094,8 +2161,8 @@
 		  Evas_Coord cx, cy, cw, ch;
 
 		  edje_object_message_signal_process(bd->bg_object);
-		  edje_object_signal_emit(bd->bg_object, "e,action,maximize,fullscreen", "e");
 		  edje_object_message_signal_process(bd->bg_object);
+		  edje_object_signal_emit(bd->bg_object, "e,action,maximize,fullscreen", "e");
 		  
 		  evas_object_resize(bd->bg_object, 1000, 1000);
 		  edje_object_calc_force(bd->bg_object);
@@ -2229,7 +2296,6 @@
 		  
 		  edje_object_message_signal_process(bd->bg_object);
 		  edje_object_signal_emit(bd->bg_object, "e,action,unmaximize,fullscreen", "e");
-		  edje_object_message_signal_process(bd->bg_object);
 		  
 		  evas_object_resize(bd->bg_object, 1000, 1000);
 		  edje_object_calc_force(bd->bg_object);
@@ -2433,18 +2499,22 @@
    
    E_OBJECT_CHECK(bd);
    E_OBJECT_TYPE_CHECK(bd, E_BORDER_TYPE);
-   if ((bd->fullscreen) || (bd->shading)) return;
+   if (/*(bd->fullscreen) ||*/(bd->shading)) return;
    ecore_x_window_shadow_tree_flush();
+   /* minimize anination should be above other windows */
+   if (evil) e_border_raise(bd);
+   e_hints_window_iconic_set(bd);
+
    if (!bd->iconic)
      {
 	bd->iconic = 1;
 	e_border_hide(bd, 1);
 	edje_object_signal_emit(bd->bg_object, "e,action,iconify", "e");
      }
+ 
    iconic = 1;
-   e_hints_window_iconic_set(bd);
    ecore_x_window_prop_card32_set(bd->client.win, E_ATOM_MAPPED, &iconic, 1);
-
+  
    ev = E_NEW(E_Event_Border_Iconify, 1);
    ev->border = bd;
    e_object_ref(E_OBJECT(bd));
@@ -2476,7 +2546,7 @@
 
    E_OBJECT_CHECK(bd);
    E_OBJECT_TYPE_CHECK(bd, E_BORDER_TYPE);
-   if ((bd->fullscreen) || (bd->shading)) return;
+   if (/*(bd->fullscreen) ||*/ (bd->shading)) return;
    ecore_x_window_shadow_tree_flush();
    if (bd->iconic)
      {
@@ -2725,7 +2795,7 @@
 			 }
 		       else
 			 {
-			    ecore_x_window_show(bd->win);
+			   ecore_x_window_show(bd->win);
 			 }
 		       bd->changes.visible = 0;
 		    }
@@ -2770,7 +2840,7 @@
 			 }
 		       else
 			 {
-			    ecore_x_window_show(bd->win);
+			   ecore_x_window_show(bd->win);
 			 }
 		       bd->changes.visible = 0;
 		    }
@@ -3123,6 +3193,7 @@
    e_zone_flip_win_disable();
    bd->moving = 1;
    _e_border_pointer_move_begin(bd);
+ 
    if (ev)
      {
 	char source[256];
@@ -3570,6 +3641,7 @@
    if ((bd->resize_mode != RESIZE_NONE) || (bd->moving)) return;   
    if (!_e_border_move_begin(bd)) return;
    bd->moving = 1;
+
    _e_border_pointer_move_begin(bd);
    e_zone_flip_win_disable();
    _e_border_moveinfo_gather(bd, sig);
@@ -3582,6 +3654,7 @@
    E_OBJECT_TYPE_CHECK(bd, E_BORDER_TYPE);
    if (!bd->moving) return;
    bd->moving = 0;
+
    _e_border_pointer_move_end(bd);
    e_zone_flip_win_restore();
    _e_border_move_end(bd);
@@ -3904,6 +3977,7 @@
    raise_stack = eina_list_remove(raise_stack, bd);
 
    e_container_border_remove(bd);
+
    free(bd);
 }
 
@@ -5634,7 +5708,7 @@
    
    bd = (E_Border *)data;
    if ((bd->post_move) && (bd->post_resize))
-     {
+     {   
 	ecore_x_window_move_resize(bd->win, 
 				   bd->x + bd->fx.x, 
 				   bd->y + bd->fx.y,
@@ -5650,7 +5724,11 @@
      }
    if (bd->post_show)
      {
-	if (bd->visible) ecore_x_window_show(bd->win);
+       if (bd->visible)
+	 {
+	    ecore_x_window_show(bd->win);
+	 }
+       
      }
    bd->post_show = 0;
    bd->post_move = 0;
@@ -5668,11 +5746,13 @@
    int send_event = 1;
    int zx, zy, zw, zh;
 
-   if (e_object_is_del(E_OBJECT(bd)))
-     {
-	fprintf(stderr, "ERROR: _e_border_eval(%p) with deleted border!\n", bd);
-	return;
-     }
+   if (bd->delete_requested) return;
+
+   /* if (e_object_is_del(E_OBJECT(bd)))
+    *   {
+    * 	fprintf(stderr, "ERROR: _e_border_eval(%p) with deleted border!\n", bd);
+    * 	return;
+    *   } */
    
    _e_border_hook_call(E_BORDER_HOOK_EVAL_PRE_FETCH, bd);
    if (bd->zone)
@@ -5743,7 +5823,7 @@
      {
 	if (bd->client.netwm.name) free(bd->client.netwm.name);
 	ecore_x_netwm_name_get(bd->client.win, &bd->client.netwm.name);
-
+	
 	bd->client.netwm.fetch.name = 0;
 	if (bd->bg_object)
 	  {
@@ -7044,7 +7124,11 @@
 	rem_change = 1;
     }
    else if (bd->changes.pos)
-     {
+     {  
+	if (bd->internal_ecore_evas)
+	  ecore_evas_managed_move(bd->internal_ecore_evas,
+				  bd->x + bd->fx.x + bd->client_inset.l,
+				  bd->y + bd->fx.y + bd->client_inset.t);
 	if (1)
 	  {
 	     if (bd->post_job) ecore_idle_enterer_del(bd->post_job);
@@ -7361,7 +7445,7 @@
 	  }
 	else
 	  {
-	     ecore_x_window_show(bd->win);
+	    ecore_x_window_show(bd->win);
 	  }
 	if (bd->cur_mouse_action)
 	  {
@@ -7497,7 +7581,7 @@
    if ((bd->remember) && (rem_change))
      e_remember_update(bd->remember, bd);
 
-   if (send_event) // FIXME: send only if a property changed - above need to
+   if (send_event && !bd->delete_requested) // FIXME: send only if a property changed - above need to
      // check on that. for now - always send.
      {
 	event = calloc(1, sizeof(E_Event_Border_Property));
@@ -7964,7 +8048,7 @@
        (((bd->maximized & E_MAXIMIZE_TYPE) == E_MAXIMIZE_FULLSCREEN) && (!e_config->allow_manip)) ||
        (bd->fullscreen) || (bd->lock_user_size))
      return 0;
-
+   
    if ((bd->client.icccm.base_w >= 0) &&
        (bd->client.icccm.base_h >= 0))
      {
@@ -8002,6 +8086,9 @@
    else
      e_move_resize_object_coords_set(bd->zone->x, bd->zone->y, bd->zone->w, bd->zone->h);
    e_resize_begin(bd->zone, w, h);
+
+   if (evil) border_moveresize_active = 1;
+   
    resize = bd;
    return 1;
 }
@@ -8018,6 +8105,16 @@
 	bd->client.netwm.sync.alarm = 0;
      }
    e_resize_end();
+
+   border_moveresize_active = 0;
+   
+   ecore_x_client_message32_send(e_manager_current_get()->root,
+				 ECOMORPH_ATOM_MANAGED,
+				 SubstructureRedirectMask | SubstructureNotifyMask,
+				 (unsigned int)bd->win, 
+				 ECOMORPH_EVENT_GRAB, 
+				 0, 0, 0);
+
    resize = NULL;
    
    /* If this border was maximized, we need to unset Maximized state or
@@ -8061,6 +8158,28 @@
    else
      e_move_resize_object_coords_set(bd->zone->x, bd->zone->y, bd->zone->w, bd->zone->h);
    e_resize_update(w, h);
+
+   /* TODO refactor out (same as in _e_border_move_update)*/
+   if (border_moveresize_active == 1)
+     {
+	border_moveresize_active = 2;
+
+	if (bd->maximized)
+	  {
+	     bd->saved.x = bd->x;
+	     bd->saved.y = bd->y;
+	     bd->saved.w = bd->w;
+	     bd->saved.h = bd->h;
+	     e_border_unmaximize(bd, E_MAXIMIZE_BOTH);
+	  }
+
+	ecore_x_client_message32_send(e_manager_current_get()->root,
+				      ECOMORPH_ATOM_MANAGED,
+				      SubstructureRedirectMask | SubstructureNotifyMask,
+				      (unsigned int)bd->win, 
+				      ECOMORPH_EVENT_GRAB, 
+				      1, 0, 0);
+     }
 }
 
 static int
@@ -8091,6 +8210,9 @@
    else
      e_move_resize_object_coords_set(bd->zone->x, bd->zone->y, bd->zone->w, bd->zone->h);
    e_move_begin(bd->zone, bd->x, bd->y);
+
+   if (evil) border_moveresize_active = 1;
+   
    move = bd;
    return 1;
 }
@@ -8109,6 +8231,16 @@
      }
 #endif
    e_move_end();
+
+   border_moveresize_active = 0;
+   
+   ecore_x_client_message32_send(e_manager_current_get()->root,
+				 ECOMORPH_ATOM_MANAGED,
+				 SubstructureRedirectMask | SubstructureNotifyMask,
+				 (unsigned int)bd->win, 
+				 ECOMORPH_EVENT_GRAB, 
+				 0, 0, 0);
+
    move = NULL;
    return 1;
 }
@@ -8121,6 +8253,21 @@
    else
      e_move_resize_object_coords_set(bd->zone->x, bd->zone->y, bd->zone->w, bd->zone->h);
    e_move_update(bd->x, bd->y);
+
+   if (border_moveresize_active == 1)
+     {
+	border_moveresize_active = 2;
+
+	if (bd->maximized) e_border_unmaximize(bd, E_MAXIMIZE_BOTH);
+   
+	ecore_x_client_message32_send(e_manager_current_get()->root,
+				      ECOMORPH_ATOM_MANAGED,
+				      SubstructureRedirectMask | SubstructureNotifyMask,
+				      (unsigned int)bd->win, 
+				      ECOMORPH_EVENT_GRAB, 
+				      1, 0, 0);
+
+     }
 }
 
 static int
diff -Naur e17-unpatched/src/bin/e_border.h ecomorph-e17/src/bin/e_border.h
--- e17-unpatched/src/bin/e_border.h	2009-04-28 15:11:51.000000000 +0200
+++ ecomorph-e17/src/bin/e_border.h	2009-07-18 13:57:45.000000000 +0200
@@ -88,6 +88,7 @@
    E_BORDER_HOOK_EVAL_PRE_NEW_BORDER,
    E_BORDER_HOOK_EVAL_POST_NEW_BORDER,
    E_BORDER_HOOK_EVAL_END,
+   E_BORDER_HOOK_NEW_BORDER
 } E_Border_Hook_Point;
 
 typedef struct _E_Border                     E_Border;
@@ -665,5 +666,7 @@
 extern EAPI int E_EVENT_BORDER_FOCUS_OUT;
 extern EAPI int E_EVENT_BORDER_PROPERTY;
 
+extern EAPI Ecore_X_Atom ECOMORPH_ATOM_MANAGED;
+
 #endif
 #endif
diff -Naur e17-unpatched/src/bin/e_container.c ecomorph-e17/src/bin/e_container.c
--- e17-unpatched/src/bin/e_container.c	2009-04-11 17:50:37.000000000 +0200
+++ ecomorph-e17/src/bin/e_container.c	2009-07-18 13:57:45.000000000 +0200
@@ -45,7 +45,8 @@
    handlers = eina_list_append(handlers, ecore_event_handler_add(ECORE_EVENT_MOUSE_BUTTON_UP, _e_container_cb_mouse_up, NULL));
    handlers = eina_list_append(handlers, ecore_event_handler_add(ECORE_EVENT_MOUSE_MOVE, _e_container_cb_mouse_move, NULL));
    handlers = eina_list_append(handlers, ecore_event_handler_add(ECORE_EVENT_MOUSE_WHEEL, _e_container_cb_mouse_wheel, NULL));
-   return 1;
+
+ return 1;
 }
 
 EAPI int
@@ -87,9 +88,13 @@
    else
      con->win = con->manager->win;
 
-   con->bg_ecore_evas = e_canvas_new(e_config->evas_engine_container, con->win,
+   con->bg_ecore_evas = e_canvas_new(e_config->evas_engine_popups, con->win,
 				     0, 0, con->w, con->h, 1, 1,
 				     &(con->bg_win));
+
+   printf("0x%x bg win\n", con->bg_win);
+   if(evil) ecore_x_netwm_window_type_set(con->bg_win,  ECORE_X_WINDOW_TYPE_DESKTOP);
+
    e_canvas_add(con->bg_ecore_evas);
    con->event_win = ecore_x_window_input_new(con->bg_win, 0, 0, con->w, con->h);
    ecore_x_window_show(con->event_win);
@@ -1041,7 +1046,8 @@
    if (con)
      {
         Evas_Button_Flags flags = EVAS_BUTTON_NONE;
-
+	printf("_e_container_cb_mouse_down\n");
+	
 	e_bindings_mouse_down_event_handle(E_BINDING_CONTEXT_CONTAINER,
 					   E_OBJECT(con), ev);
 	if (ev->double_click) flags |= EVAS_BUTTON_DOUBLE_CLICK;
diff -Naur e17-unpatched/src/bin/e_desk.c ecomorph-e17/src/bin/e_desk.c
--- e17-unpatched/src/bin/e_desk.c	2009-05-08 09:11:14.000000000 +0200
+++ ecomorph-e17/src/bin/e_desk.c	2009-07-18 13:57:45.000000000 +0200
@@ -2,7 +2,8 @@
  * vim:ts=8:sw=3:sts=8:noexpandtab:cino=>5n-3f0^-2{2
  */
 #include "e.h"
-
+/*evil*/
+#include <X11/Xlib.h>
 /* E_Desk is a child object of E_Zone. A desk is essentially a background
  * and an associated set of client windows. Each zone can have an arbitrary
  * number of desktops.
@@ -236,7 +237,7 @@
 		  prev_y = desk2->y;
 		  dx = desk->x - desk2->x;
 		  dy = desk->y - desk2->y;
-		  if (e_config->desk_flip_animate_mode > 0)
+		  if (!evil && e_config->desk_flip_animate_mode > 0)
 		    _e_desk_hide_begin(desk2, e_config->desk_flip_animate_mode, 
 				       dx, dy);
 		  break;
@@ -247,9 +248,80 @@
    desk->zone->desk_x_current = desk->x;
    desk->zone->desk_y_current = desk->y;
    desk->visible = 1;
-
+  
+   if(evil)
+     {
+       bd = NULL;
+       
+       for (l = e_border_client_list(); l; l = l->next)
+	 {
+	   bd = l->data;
+	   
+	   if ((!bd->desk->visible) && (!bd->sticky))
+	     e_container_shape_hide(bd->shape);
+	   
+	   /* misuse of button_grab flag in e_actions.. means 'move
+	      window by' */
+	   
+	   if(((e_config->always_click_to_raise ||
+	       e_config->always_click_to_focus ||
+	       (e_config->focus_policy == E_FOCUS_CLICK)) ? 
+	       !bd->button_grabbed : bd->button_grabbed) ||
+	      bd->moving) 
+	     break;
+	   else
+	     bd = NULL;
+	 }
+
+	int move_type = 0;
+      if(bd) printf ("move window 0x%x\n", (unsigned int) bd->win);
+      if(bd) move_type = bd->moving ? 1 : 2;
+       
+      /* trigger plugins for deskswitch animation */ 
+      /* this message is automatically ignored when the viewport is
+	 already active. i.e. when expo changed the viewport and sent
+	 a message to change the desktop accordingly */
+
+     ecore_x_client_message32_send(e_manager_current_get()->root, 
+				   ECORE_X_ATOM_NET_DESKTOP_VIEWPORT,
+				   SubstructureNotifyMask,
+				   0,
+				   desk->x * desk->zone->w,
+				   desk->y * desk->zone->h, 
+				   (bd ? bd->win : 0), 
+				   move_type);
+
+     /* set property on root window so that ecomp get this information
+	after restarting  */
+     int geom[2];
+     geom[0] = desk->x * desk->zone->w;
+     geom[1] = desk->y * desk->zone->h;
+  
+     ecore_x_window_prop_card32_set(e_manager_current_get()->root,
+				    ECORE_X_ATOM_NET_DESKTOP_VIEWPORT,
+				    geom, 2);  
+  }
+   
    if (desk->zone->bg_object) was_zone = 1;
-   if (e_config->desk_flip_animate_mode == 0)
+   
+   if(evil)
+     {
+       bl = e_container_border_list_first(desk->zone->container);
+       while ((bd = e_container_border_list_next(bl)))
+	 {
+	   if (evil)
+	     {
+
+		bd->fx.x = (bd->desk->x - bd->zone->desk_x_current) * bd->zone->w;
+		bd->fx.y = (bd->desk->y - bd->zone->desk_y_current) * bd->zone->h;
+
+	       if (bd->moving)
+		 e_border_desk_set(bd, desk);
+	     }
+	 }
+       e_container_border_list_free(bl);
+     }
+   else if (e_config->desk_flip_animate_mode == 0)
      {
 	bl = e_container_border_list_first(desk->zone->container);
 	while ((bd = e_container_border_list_next(bl)))
@@ -267,7 +339,7 @@
 	e_container_border_list_free(bl);
      }
 
-   if (e_config->desk_flip_animate_mode > 0)
+   if (!evil && e_config->desk_flip_animate_mode > 0)
      _e_desk_show_begin(desk, e_config->desk_flip_animate_mode, dx, dy);
 
    if (e_config->focus_last_focused_per_desktop)
diff -Naur e17-unpatched/src/bin/e_exehist.c ecomorph-e17/src/bin/e_exehist.c
--- e17-unpatched/src/bin/e_exehist.c	2009-03-24 17:45:14.000000000 +0100
+++ ecomorph-e17/src/bin/e_exehist.c	2009-07-18 13:57:45.000000000 +0200
@@ -65,7 +65,6 @@
    E_CONFIG_LIST(D, T, mimes, _e_exehist_config_item_edd);
 
    E_EVENT_EXEHIST_UPDATE = ecore_event_type_new();
-
    return 1;
 }
 
@@ -88,6 +87,7 @@
 {
    E_Exehist_Item *ei;
 
+   if (!exe[0] || (exe[0] == '\0')) return;
    _e_exehist_load();
    if (!_e_exehist) return;
    ei = E_NEW(E_Exehist_Item, 1);
@@ -249,7 +249,7 @@
 		  const char *exe;
 
 		  if (!(exe = m->data)) continue;
-		  if (!strcmp(exe, ei->exe))
+		  if (!ei->exe || !strcmp(exe, ei->exe))
 		    {
 		       bad = 1;
 		       break;
diff -Naur e17-unpatched/src/bin/e_hints.c ecomorph-e17/src/bin/e_hints.c
--- e17-unpatched/src/bin/e_hints.c	2009-07-07 09:41:29.000000000 +0200
+++ ecomorph-e17/src/bin/e_hints.c	2009-07-18 13:57:45.000000000 +0200
@@ -2,6 +2,7 @@
  * vim:ts=8:sw=3:sts=8:noexpandtab:cino=>5n-3f0^-2{2
  */
 #include "e.h"
+#include <X11/Xlib.h>
 
 EAPI Ecore_X_Atom _QTOPIA_SOFT_MENU = 0;
 EAPI Ecore_X_Atom _QTOPIA_SOFT_MENUS = 0;
@@ -37,7 +38,7 @@
    roots = ecore_x_window_root_list(&num);
    if (roots)
      {
-	Ecore_X_Atom supported[41];
+	Ecore_X_Atom supported[48];
 	int supported_num, i;
 
 	supported_num = 0;
@@ -45,10 +46,12 @@
 	/* Root Window Properties (and Related Messages) */
 	supported[supported_num++] = ECORE_X_ATOM_NET_CLIENT_LIST;
 	supported[supported_num++] = ECORE_X_ATOM_NET_CLIENT_LIST_STACKING;
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_NUMBER_OF_DESKTOPS, 1);*/
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_DESKTOP_GEOMETRY, 1);*/
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_DESKTOP_VIEWPORT, 1);*/
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_CURRENT_DESKTOP, 1);*/
+
+	supported[supported_num++] = ECORE_X_ATOM_NET_NUMBER_OF_DESKTOPS;
+	supported[supported_num++] = ECORE_X_ATOM_NET_DESKTOP_GEOMETRY;
+	supported[supported_num++] = ECORE_X_ATOM_NET_DESKTOP_VIEWPORT;
+	supported[supported_num++] = ECORE_X_ATOM_NET_CURRENT_DESKTOP;
+
 	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_DESKTOP_NAMES, 1);*/
 	supported[supported_num++] = ECORE_X_ATOM_NET_ACTIVE_WINDOW;
 	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_WORKAREA, 1);*/
@@ -59,17 +62,17 @@
 
 	/* Other Root Window Messages */
 	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_CLOSE_WINDOW, 1);*/
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_MOVERESIZE_WINDOW, 1);*/
+	supported[supported_num++] = ECORE_X_ATOM_NET_MOVERESIZE_WINDOW;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_MOVERESIZE;
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_RESTACK_WINDOW, 1);*/
+	supported[supported_num++] = ECORE_X_ATOM_NET_RESTACK_WINDOW;
 	supported[supported_num++] = ECORE_X_ATOM_NET_REQUEST_FRAME_EXTENTS;
 
-	/* Application Window Properties */
+	/* Applsupported_numcatsupported_numon Wsupported_numndow Propertsupported_numes */
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_NAME;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_VISIBLE_NAME;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_ICON_NAME;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_VISIBLE_ICON_NAME;
-	/*ecore_x_netwm_supported(roots[supported_num], ECORE_X_ATOM_NET_WM_DESKTOP, 1);*/
+	supported[supported_num++] = ECORE_X_ATOM_NET_WM_DESKTOP;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_WINDOW_TYPE;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_WINDOW_TYPE_DESKTOP;
 	supported[supported_num++] = ECORE_X_ATOM_NET_WM_WINDOW_TYPE_DOCK;
@@ -599,6 +602,20 @@
    e_hints_client_list_set();
    e_hints_client_stacking_set();
 }
+/* TODO move to e_ecomorph.h */
+#define CompWindowStateModalMask	    (1 <<  0)
+#define CompWindowStateStickyMask	    (1 <<  1)
+#define CompWindowStateMaximizedVertMask    (1 <<  2)
+#define CompWindowStateMaximizedHorzMask    (1 <<  3)
+#define CompWindowStateShadedMask	    (1 <<  4)
+#define CompWindowStateSkipTaskbarMask	    (1 <<  5)
+#define CompWindowStateSkipPagerMask	    (1 <<  6)
+#define CompWindowStateHiddenMask	    (1 <<  7)
+#define CompWindowStateFullscreenMask	    (1 <<  8)
+#define CompWindowStateAboveMask	    (1 <<  9)
+#define CompWindowStateBelowMask	    (1 << 10)
+#define CompWindowStateDemandsAttentionMask (1 << 11)
+#define CompWindowStateDisplayModalMask	    (1 << 12)
 
 EAPI void
 e_hints_window_state_set(E_Border *bd)
@@ -614,8 +631,11 @@
      state[num++] = ECORE_X_WINDOW_STATE_MAXIMIZED_VERT;
    if (bd->client.netwm.state.maximized_h)
      state[num++] = ECORE_X_WINDOW_STATE_MAXIMIZED_HORZ;
+   /* ignore shaded for now. ecomp doesnt handle it anyway, and this
+      triggers a bug when unminimizing windows that were shaded
+      before */
    if (bd->client.netwm.state.shaded)
-     state[num++] = ECORE_X_WINDOW_STATE_SHADED;
+    state[num++] = ECORE_X_WINDOW_STATE_SHADED;
    if (bd->client.netwm.state.skip_taskbar)
      state[num++] = ECORE_X_WINDOW_STATE_SKIP_TASKBAR;
    if (bd->client.netwm.state.skip_pager)
@@ -637,7 +657,50 @@
       default:
 	 break;
      }
+
    ecore_x_netwm_window_state_set(bd->client.win, state, num);
+
+   if(evil)
+     {
+       unsigned int  state = 0;
+       if (bd->client.netwm.state.modal)
+	 state |= CompWindowStateModalMask;
+       if (bd->client.netwm.state.sticky)
+	 state |= CompWindowStateStickyMask;
+       if (bd->client.netwm.state.maximized_v)
+	 state |= CompWindowStateMaximizedVertMask;
+       if (bd->client.netwm.state.maximized_h)
+	 state |= CompWindowStateMaximizedHorzMask;
+       if (bd->client.netwm.state.shaded)
+	 state |= CompWindowStateShadedMask;
+       if (bd->client.netwm.state.skip_taskbar)
+	 state |= CompWindowStateSkipTaskbarMask;
+       if (bd->client.netwm.state.skip_pager)
+	 state |= CompWindowStateSkipPagerMask;
+       if (bd->client.netwm.state.hidden)
+	 state |= CompWindowStateHiddenMask;
+       if (bd->client.netwm.state.fullscreen)
+	 state |= CompWindowStateFullscreenMask;
+
+       /* TODO is this needed for the compositor */
+       switch (bd->client.netwm.state.stacking)
+	 {
+	 case E_STACKING_ABOVE:
+	   state |= CompWindowStateAboveMask;
+	   break;
+	 case E_STACKING_BELOW:
+	   state |= CompWindowStateBelowMask;
+	   break;
+	 case E_STACKING_NONE:
+	 default:
+	   break;
+	 }
+
+       ecore_x_client_message32_send(e_manager_current_get()->root,
+				     ECOMORPH_ATOM_MANAGED,
+				     SubstructureNotifyMask,
+				     (unsigned int)bd->win, 1, state, 0, 0);
+     }
 }
 
 EAPI void
@@ -1122,7 +1185,7 @@
 {
    if (bd->client.icccm.state != ECORE_X_WINDOW_STATE_HINT_NORMAL)
      {
-	ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_NORMAL);
+        ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_NORMAL);
 	bd->client.icccm.state = ECORE_X_WINDOW_STATE_HINT_NORMAL;
      }
    if (bd->client.netwm.state.hidden)
@@ -1138,7 +1201,7 @@
 {
    if (bd->client.icccm.state != ECORE_X_WINDOW_STATE_HINT_ICONIC)
      {
-	ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_ICONIC);
+        ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_ICONIC);
 	bd->client.icccm.state = ECORE_X_WINDOW_STATE_HINT_ICONIC;
      }
    if (!bd->client.netwm.state.hidden)
@@ -1154,7 +1217,7 @@
 {
    if (bd->client.icccm.state != ECORE_X_WINDOW_STATE_HINT_WITHDRAWN)
      {
-	ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_WITHDRAWN);
+        ecore_x_icccm_state_set(bd->client.win, ECORE_X_WINDOW_STATE_HINT_WITHDRAWN);
 	bd->client.icccm.state = ECORE_X_WINDOW_STATE_HINT_WITHDRAWN;
      }
    if (bd->client.netwm.state.hidden)
diff -Naur e17-unpatched/src/bin/e_includes.h ecomorph-e17/src/bin/e_includes.h
--- e17-unpatched/src/bin/e_includes.h	2009-03-24 17:45:14.000000000 +0100
+++ ecomorph-e17/src/bin/e_includes.h	2009-07-18 13:57:45.000000000 +0200
@@ -138,3 +138,5 @@
 #include "e_scale.h"
 #include "e_widget_toolbar.h"
 #include "e_widget_toolbook.h"
+
+
diff -Naur e17-unpatched/src/bin/e_main.c ecomorph-e17/src/bin/e_main.c
--- e17-unpatched/src/bin/e_main.c	2009-07-17 14:33:53.000000000 +0200
+++ ecomorph-e17/src/bin/e_main.c	2009-07-18 13:57:45.000000000 +0200
@@ -3,6 +3,7 @@
  */
 #define _GNU_SOURCE
 #include "e.h"
+#include <X11/Xlib.h>
 
 #ifdef HAVE_ECORE_IMF
 #include <Ecore_IMF.h>
@@ -123,13 +124,15 @@
    return 0;
 }
 
+static int after_restart = 0; 
+
 /* externally accessible functions */
 int
 main(int argc, char **argv)
 {
    int i;
    int nostartup = 0;
-   int after_restart = 0; 
+   //int after_restart = 0; 
    int safe_mode = 0;
    char buf[PATH_MAX];
    char *s;
@@ -351,6 +354,13 @@
 	  }
      }
 
+   s = getenv("E_ECOMORPH");
+   if (s)
+     { 
+       evil = atoi(s);
+     }
+   
+   
    /* fix up DISPLAY to be :N.0 if no .screen is in it */
    s = getenv("DISPLAY");
    if (s)
@@ -1040,6 +1050,25 @@
 	     "modules again."));
 	e_config_save_queue();
      }
+   if (evil)
+     {
+	Eina_List *l;
+	E_Config_Module *em;
+	int found = 0;   
+	EINA_LIST_FOREACH(e_config->modules, l, em)
+	  {
+	     if (em->enabled && !strcmp(em->name, "eco"))
+	       found = 1;
+	  }
+	if (!found)
+	  {
+	     e_error_message_show
+	       (_("Ecomorph Module is not loaded."
+		  "Not going to be evil this time"));
+	    
+	     evil = 0;
+	  }
+     }
 
    e_init_status_set(_("Configure Shelves"));
    TS("shelf config init");
@@ -1068,6 +1068,14 @@
 
    ecore_main_loop_begin();
 
+   if (evil && restart)
+     ecore_x_client_message32_send(e_manager_current_get()->root,
+				   ECOMORPH_ATOM_MANAGED,
+				   SubstructureRedirectMask | SubstructureNotifyMask,
+				   None, 
+				   3 /* ECOMORPH_EVENT_RESTART*/,
+				   1 /* TRUE*/, 0, 0);
+
    e_canvas_idle_flush();
    stopping = 1;
 
@@ -1204,6 +1241,18 @@
 {
    return 1;
 }
+static int
+_e_main_cb_after_restart(void *data)
+{ 
+  if(e_manager_current_get())
+    ecore_x_client_message32_send(e_manager_current_get()->root,
+				  ECOMORPH_ATOM_MANAGED,
+				  SubstructureRedirectMask | SubstructureNotifyMask,
+				  None, 
+				  3 /* ECOMORPH_EVENT_RESTART*/,
+				  0 /* TRUE*/, 0, 0);
+  return 0;  
+}
 
 static int
 _e_main_screens_init(void)
@@ -1278,6 +1327,10 @@
 
    free(roots);
    ecore_x_sync();
+
+   if (evil && after_restart)
+     ecore_timer_add(3.0, _e_main_cb_after_restart, NULL);
+
    return 1;
 }
 
diff -Naur e17-unpatched/src/bin/e_menu.c ecomorph-e17/src/bin/e_menu.c
--- e17-unpatched/src/bin/e_menu.c	2009-06-21 19:31:00.000000000 +0200
+++ ecomorph-e17/src/bin/e_menu.c	2009-07-18 13:57:45.000000000 +0200
@@ -1410,6 +1410,9 @@
      e_canvas_new(e_config->evas_engine_menus, m->zone->container->win,
                   m->cur.x, m->cur.y, m->cur.w, m->cur.h, 1, 1,
                   &(m->evas_win));
+
+   if(evil) ecore_x_netwm_window_type_set(m->evas_win,  ECORE_X_WINDOW_TYPE_MENU);
+   
    e_canvas_add(m->ecore_evas);
    m->shape = e_container_shape_add(m->zone->container);
    e_container_shape_move(m->shape, m->cur.x, m->cur.y);
diff -Naur e17-unpatched/src/bin/e_moveresize.c ecomorph-e17/src/bin/e_moveresize.c
--- e17-unpatched/src/bin/e_moveresize.c	2008-12-25 09:54:20.000000000 +0100
+++ ecomorph-e17/src/bin/e_moveresize.c	2009-07-18 13:57:45.000000000 +0200
@@ -5,6 +5,8 @@
 
 static E_Popup *_disp_pop = NULL;
 static Evas_Object *_obj = NULL;
+static E_Popup *_box_pop = NULL;
+static Evas_Object *_box_obj = NULL;
 
 static int visible = 0;
 static int obj_x = 0;
@@ -52,6 +54,14 @@
 	e_popup_show(_disp_pop);
      }
 
+   if (1)
+     {
+	if (_box_pop) e_object_del(E_OBJECT(_box_pop));
+	_box_pop = e_popup_new(zone, 0, 0, zone->w, zone->h);
+	e_popup_layer_set(_box_pop, 250);
+	
+     }
+   
    visible = 1;
 }
 
diff -Naur e17-unpatched/src/bin/e_popup.c ecomorph-e17/src/bin/e_popup.c
--- e17-unpatched/src/bin/e_popup.c	2009-04-11 17:50:37.000000000 +0200
+++ ecomorph-e17/src/bin/e_popup.c	2009-07-18 13:57:45.000000000 +0200
@@ -70,7 +70,9 @@
 				  &(pop->evas_win));
    /* avoid excess exposes when shaped - set damage avoid to 1 */
 //   ecore_evas_avoid_damage_set(pop->ecore_evas, 1);
-   
+
+   //if(evil) ecore_x_netwm_window_type_set(pop->evas_win, ECORE_X_WINDOW_TYPE_UTILITY);
+
    e_canvas_add(pop->ecore_evas);
    pop->shape = e_container_shape_add(pop->zone->container);
    e_container_shape_move(pop->shape, pop->zone->x + pop->x, pop->zone->y + pop->y);
diff -Naur e17-unpatched/src/bin/e_shelf.c ecomorph-e17/src/bin/e_shelf.c
--- e17-unpatched/src/bin/e_shelf.c	2009-04-28 15:11:51.000000000 +0200
+++ ecomorph-e17/src/bin/e_shelf.c	2009-07-18 13:57:45.000000000 +0200
@@ -150,6 +150,8 @@
 	evas_object_show(es->o_event);
 	evas_object_show(es->o_base);
 	e_popup_edje_bg_object_set(es->popup, es->o_base);
+	if(evil) ecore_x_netwm_window_type_set(es->popup->evas_win,
+					       ECORE_X_WINDOW_TYPE_DOCK);
      }
    else
      {
@@ -657,6 +659,8 @@
    if (popup) 
      {
 	es->popup = e_popup_new(es->zone, es->x, es->y, es->w, es->h);
+	if(evil) ecore_x_netwm_window_type_set(es->popup->evas_win,
+					       ECORE_X_WINDOW_TYPE_DOCK);
 	e_popup_layer_set(es->popup, es->cfg->layer);
 
 	es->ee = es->popup->ecore_evas;
diff -Naur e17-unpatched/src/bin/e_utils.c ecomorph-e17/src/bin/e_utils.c
--- e17-unpatched/src/bin/e_utils.c	2009-06-25 15:15:06.000000000 +0200
+++ ecomorph-e17/src/bin/e_utils.c	2009-07-18 13:57:45.000000000 +0200
@@ -478,7 +478,7 @@
    unsigned int size;
 
    if ((!icon) || (!icon[0])) return 0;
-   size = e_util_icon_size_normalize(16 * e_scale);
+   size = e_util_icon_size_normalize(24 * e_scale);
    path = efreet_icon_path_find(e_config->icon_theme, icon, size);
    if (!path) return 0;
    e_menu_item_icon_file_set(mi, path);
diff -Naur e17-unpatched/src/bin/e_zone.c ecomorph-e17/src/bin/e_zone.c
--- e17-unpatched/src/bin/e_zone.c	2009-05-08 09:11:14.000000000 +0200
+++ ecomorph-e17/src/bin/e_zone.c	2009-07-18 13:57:45.000000000 +0200
@@ -563,9 +563,12 @@
 	 break;
      }
    if (!ok) return;
+
    bind = e_bindings_edge_get("desk_flip_in_direction", edge);
    if (bind)
      {
+	if (bind->timer) ecore_timer_del(bind->timer);
+	
 	zev = E_NEW(E_Event_Zone_Edge, 1);
 	zev->zone = zone;
 	zev->x = x;
@@ -574,6 +577,7 @@
 	zone->flip.ev = zev;
 	zone->flip.bind = bind;
 	zone->flip.switching = 1;
+
 	bind->timer = ecore_timer_add(((double) bind->delay), _e_zone_cb_edge_timer, zone);
      }
 }
@@ -1138,7 +1142,7 @@
    zev->modifiers = ev->modifiers;
    ecore_event_add(E_EVENT_ZONE_EDGE_IN, zev, NULL, NULL);
    e_bindings_edge_in_event_handle(E_BINDING_CONTEXT_ZONE, E_OBJECT(zone), zev);
-
+   
    return 1;
 }
 
diff -Naur e17-unpatched/src/modules/conf_engine/e_int_config_engine.c ecomorph-e17/src/modules/conf_engine/e_int_config_engine.c
--- e17-unpatched/src/modules/conf_engine/e_int_config_engine.c	2009-03-24 17:45:18.000000000 +0100
+++ ecomorph-e17/src/modules/conf_engine/e_int_config_engine.c	2009-07-18 13:57:45.000000000 +0200
@@ -16,6 +16,8 @@
 
    int use_composite;
    int evas_engine_default;
+   int ecomorph;
+  
    Evas_Object *o_composite;
 };
 
@@ -57,6 +59,7 @@
 {
    cfdata->use_composite = e_config->use_composite;
    cfdata->evas_engine_default = e_config->evas_engine_default;
+   cfdata->ecomorph = evil;
 }
 
 static void
@@ -71,6 +74,16 @@
    e_config->use_composite = cfdata->use_composite;
    e_config->evas_engine_default = cfdata->evas_engine_default;
    e_config_save_queue();
+
+   if (evil != cfdata->ecomorph)
+     {
+       E_Action *a;
+       evil = cfdata->ecomorph;
+       e_util_env_set("E_ECOMORPH", evil ? "1" : "0");
+       a = e_action_find("restart");
+       if ((a) && (a->func.go)) a->func.go(NULL, NULL);
+     }
+   
    return 1;
 }
 
@@ -78,7 +91,8 @@
 _basic_check_changed(E_Config_Dialog *cfd, E_Config_Dialog_Data *cfdata)
 {
    return !((cfdata->use_composite == e_config->use_composite) &&
-	    (cfdata->evas_engine_default == e_config->evas_engine_default));
+	    (cfdata->evas_engine_default == e_config->evas_engine_default) &&
+	    (cfdata->ecomorph == evil));
 }
 
 static Evas_Object *
@@ -94,9 +108,16 @@
    of = e_widget_framelist_add(evas, _("General Settings"), 0);
    ob = e_widget_check_add(evas, _("Enable Composite"),
 			   &(cfdata->use_composite));
+
    cfdata->o_composite = ob;
    e_widget_on_change_hook_set(ob, _cb_composite_change, cfdata);
    e_widget_framelist_object_append(of, ob);
+
+   ob = e_widget_check_add(evas, _("Ecomorph Mode"),
+			   &(cfdata->ecomorph));
+   e_widget_on_change_hook_set(ob, _cb_composite_change, cfdata);
+   e_widget_framelist_object_append(of, ob);
+
    e_widget_list_object_append(o, of, 1, 1, 0.5);
 
    of = e_widget_framelist_add(evas, _("Default Engine"), 0);
diff -Naur e17-unpatched/src/modules/conf_keybindings/e_int_config_keybindings.c ecomorph-e17/src/modules/conf_keybindings/e_int_config_keybindings.c
--- e17-unpatched/src/modules/conf_keybindings/e_int_config_keybindings.c	2009-04-11 08:54:26.000000000 +0200
+++ ecomorph-e17/src/modules/conf_keybindings/e_int_config_keybindings.c	2009-07-18 13:57:45.000000000 +0200
@@ -371,7 +371,7 @@
    /* FIXME: need confirmation dialog */
    EINA_LIST_FREE(cfdata->binding.key, bi)
      {
-	eina_stringshare_del(bi->key);
+        eina_stringshare_del(bi->key);
 	eina_stringshare_del(bi->action);
 	eina_stringshare_del(bi->params);
 	E_FREE(bi);
diff -Naur e17-unpatched/src/modules/exebuf/e_exebuf.c ecomorph-e17/src/modules/exebuf/e_exebuf.c
--- e17-unpatched/src/modules/exebuf/e_exebuf.c	2009-07-09 14:57:48.000000000 +0200
+++ ecomorph-e17/src/modules/exebuf/e_exebuf.c	2009-07-18 13:57:45.000000000 +0200
@@ -170,6 +170,8 @@
    exebuf = e_popup_new(zone, x, y, w, h); 
    if (!exebuf) return 0;
 
+   if(evil) ecore_x_netwm_window_type_set(exebuf->evas_win, ECORE_X_WINDOW_TYPE_UTILITY);
+
    cmd_buf = malloc(EXEBUFLEN);
    if (!cmd_buf)
      {
@@ -1407,7 +1409,9 @@
      _e_exebuf_exec();
    else if (!strcmp(ev->key, "u") && (ev->modifiers & ECORE_EVENT_MODIFIER_CTRL))
      _e_exebuf_clear();
-   else if (!strcmp(ev->key, "Escape"))
+   else if ((!strcmp(ev->key, "Escape")) ||
+	    ((ev->modifiers & ECORE_EVENT_MODIFIER_CTRL) &&
+	     (!strcmp(ev->key, "g"))))
      e_exebuf_hide();
    else if (!strcmp(ev->key, "BackSpace"))
      _e_exebuf_backspace();
@@ -1419,7 +1423,10 @@
 	  {
 	     if ((strlen(cmd_buf) < (EXEBUFLEN - strlen(ev->compose))))
 	       {
-		  strcat(cmd_buf, ev->compose);
+		  /* if (!strcmp(ev->key, "space"))
+		   *   strcat(cmd_buf, "*");
+		   * else  */
+		    strcat(cmd_buf, ev->compose);
 		  _e_exebuf_update();
 		  if (!update_timer)
 		    update_timer = ecore_timer_add(MATCH_LAG, _e_exebuf_update_timer, NULL);
diff -Naur e17-unpatched/src/modules/Makefile.am ecomorph-e17/src/modules/Makefile.am
--- e17-unpatched/src/modules/Makefile.am	2009-05-22 15:21:35.000000000 +0200
+++ ecomorph-e17/src/modules/Makefile.am	2009-07-18 13:57:45.000000000 +0200
@@ -250,6 +250,10 @@
 SUBDIRS += everything
 endif
 
+if USE_MODULE_ECO
+SUBDIRS += eco
+endif
+
 if USE_MODULE_SYSTRAY
 SUBDIRS += systray
 endif
@@ -317,5 +321,6 @@
 connman \
 illume \
 syscon \
+eco \
 everything \
 systray
diff -Naur e17-unpatched/src/modules/mixer/e_mod_main.c ecomorph-e17/src/modules/mixer/e_mod_main.c
--- e17-unpatched/src/modules/mixer/e_mod_main.c	2009-07-02 13:57:39.000000000 +0200
+++ ecomorph-e17/src/modules/mixer/e_mod_main.c	2009-07-18 13:57:45.000000000 +0200
@@ -184,6 +184,11 @@
 
    edje_object_signal_emit(inst->ui.gadget, "e,action,volume,change", "e");
 
+   if(inst->mixer_state.mute)
+     snprintf(inst->info, 1024, "mute");
+   else
+     snprintf(inst->info, 1024, "%i%%", inst->mixer_state.left);
+
    if (inst->popup)
       _mixer_popup_update(inst);
 }
@@ -905,6 +910,11 @@
       ctxt->default_instance = inst;
 
    ctxt->instances = eina_list_append(ctxt->instances, inst);
+   
+   char buf[256];
+   snprintf(buf, 256, "%s-%d", inst->gcc->name, inst->gcc->id);
+   snprintf(inst->info, 1024, "--");
+   e_datastore_set(buf, inst->info);
 
    return inst->gcc;
 }
@@ -915,6 +925,10 @@
    E_Mixer_Module_Context *ctxt;
    E_Mixer_Instance *inst;
 
+   char buf[256];
+   snprintf(buf, 256, "%s-%d", gcc->name, gcc->id);
+   e_datastore_del(buf);
+
    if (!mixer_mod)
       return;
 
diff -Naur e17-unpatched/src/modules/mixer/e_mod_main.h ecomorph-e17/src/modules/mixer/e_mod_main.h
--- e17-unpatched/src/modules/mixer/e_mod_main.h	2009-05-22 15:21:34.000000000 +0200
+++ ecomorph-e17/src/modules/mixer/e_mod_main.h	2009-07-18 13:57:45.000000000 +0200
@@ -52,6 +52,9 @@
    E_Mixer_Channel *channel;
    E_Mixer_Channel_State mixer_state;
    E_Mixer_Gadget_Config *conf;
+ 
+   char info[1024];
+
 } E_Mixer_Instance;
 
 typedef struct E_Mixer_Module_Context
diff -Naur e17-unpatched/src/modules/pager/e_mod_main.c ecomorph-e17/src/modules/pager/e_mod_main.c
--- e17-unpatched/src/modules/pager/e_mod_main.c	2009-07-02 13:57:40.000000000 +0200
+++ ecomorph-e17/src/modules/pager/e_mod_main.c	2009-07-18 13:57:45.000000000 +0200
@@ -709,6 +709,8 @@
 	free(pp);
 	return NULL;
      }
+   if(evil) ecore_x_netwm_window_type_set(pp->popup->evas_win, ECORE_X_WINDOW_TYPE_UTILITY);
+
    e_popup_layer_set(pp->popup, 255);
 
    pp->pager = _pager_new(pp->popup->evas, zone);
diff -Naur e17-unpatched/src/modules/syscon/e_syscon.c ecomorph-e17/src/modules/syscon/e_syscon.c
--- e17-unpatched/src/modules/syscon/e_syscon.c	2009-04-23 17:56:49.000000000 +0200
+++ ecomorph-e17/src/modules/syscon/e_syscon.c	2009-07-18 13:57:45.000000000 +0200
@@ -71,6 +71,7 @@
         input_window = 0;
         return 0;
      }
+   if(evil) ecore_x_netwm_window_type_set(popup->evas_win, ECORE_X_WINDOW_TYPE_UTILITY);
    evas_event_freeze(popup->evas);
    e_popup_layer_set(popup, 500);
 
diff -Naur e17-unpatched/src/modules/winlist/e_winlist.c ecomorph-e17/src/modules/winlist/e_winlist.c
--- e17-unpatched/src/modules/winlist/e_winlist.c	2009-04-11 08:54:25.000000000 +0200
+++ ecomorph-e17/src/modules/winlist/e_winlist.c	2009-07-18 13:57:45.000000000 +0200
@@ -115,6 +115,7 @@
    y = (double)(zone->h - h) * e_config->winlist_pos_align_y;
    
    winlist = e_popup_new(zone, x, y, w, h); 
+
    if (!winlist) return 0;
    e_border_focus_track_freeze();
    
@@ -127,11 +128,14 @@
    bg_object = o;
    e_theme_edje_object_set(o, "base/theme/winlist",
 			   "e/widgets/winlist/main");
+   
    evas_object_move(o, 0, 0);
    evas_object_resize(o, w, h);
    evas_object_show(o);
    e_popup_edje_bg_object_set(winlist, o);
 
+   if (evil) ecore_x_netwm_window_type_set(winlist->evas_win, ECORE_X_WINDOW_TYPE_UTILITY);
+   
    o = e_box_add(winlist->evas);
    list_object = o;
    e_box_align_set(o, 0.5, 0.0);
