#!/bin/sh
# Debian elsa package postinst script
# Copyright 2011 Daniel Dehennin <daniel.dehennin@baby-gnu.org>
#
# Licensed under the GNU General Public License, version 3 or any
# later version.  See the file /usr/share/common-licenses/GPL-3 or
# <http://www.gnu.org/copyleft/gpl.txt>.
#
# see: dh_installdeb(1)

# adapted from xdm's postinst script
# Debian xdm package post configuration script
# Copyright 2000-2003 Branden Robinson.

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

DAEMON=/usr/sbin/elsa
CONFFILE=/etc/elsa.conf
PAMFILE=/etc/pam.d/elsa
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

configure_default_dm () {
    # debconf is not a registry, so we only fiddle with the default file if it
    # does not exist
    if ! [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
        DEFAULT_DISPLAY_MANAGER=
        if db_get shared/default-x-display-manager; then
            DEFAULT_DISPLAY_MANAGER="$RET"
        fi
        if [ -n "$DEFAULT_DISPLAY_MANAGER" ]; then
            DAEMON_NAME=
            if db_get "$DEFAULT_DISPLAY_MANAGER"/daemon_name; then
                DAEMON_NAME="$RET"
            fi
            if [ -z "$DAEMON_NAME" ]; then
            # if we were unable to determine the name of the selected daemon (for
            # instance, if the selected default display manager doesn't provide a
            # daemon_name question), guess
                DAEMON_NAME=$(which "$DEFAULT_DISPLAY_MANAGER" 2>/dev/null)
                if [ -z "$DAEMON_NAME" ]; then
                    warn "unable to determine path to default X display manager" \
                        "$DEFAULT_DISPLAY_MANAGER; not updating" \
                        "$DEFAULT_DISPLAY_MANAGER_FILE"
                fi
            fi
            if [ -n "$DAEMON_NAME" ]; then
                echo "$DAEMON_NAME" > "$DEFAULT_DISPLAY_MANAGER_FILE"
            fi
        fi
    fi


    # remove the displaced old default display manager file if it exists
    if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE.dpkg-tmp" ]; then
        rm "$DEFAULT_DISPLAY_MANAGER_FILE.dpkg-tmp"
    fi
}

# create a default configuration file if nothing exists yet
create_pam() {
    if [ ! -e "$PAMFILE" ]
    then
        cat > "$PAMFILE" << EOM
/* $PAMFILE */
#%PAM-1.0
auth    requisite       pam_nologin.so
auth    required        pam_env.so readenv=1
auth    required        pam_env.so readenv=1 envfile=/etc/default/locale
@include common-auth
auth    optional        pam_gnome_keyring.so
@include common-account
session required        pam_limits.so
@include common-session
session optional        pam_gnome_keyring.so auto_start
@include common-password

}
EOM
    fi
    # we're done
    return 0
}

# create a default configuration file if nothing exists yet
create_config() {
    if [ ! -e "$CONFFILE" ]
    then
        cat > "$CONFFILE" << EOM
/* $CONFFILE */
/* configuration file. See elsa.conf(5) */
/* for details. */

group "Elsa_Config" struct {
    value "session_path" string: "/bin:/usr/bin:/usr/local/bin";

    /* X server path */
    value "xinit_path" string: "/usr/bin/Xorg";
    /* X server args */
    value "xinit_args" string: "-nolisten tcp -br vt7";

    /* xauth path binary */
    value "xauth_path" string: "/usr/bin/xauth";
    /* xauth file for server */
    value "xauth_file" string: "/var/run/elsa.auth";


    /* Commands executed when starting a session */
    value "session_start" string: "/usr/bin/sessreg -a -l :0.0";
    /* Command executed when login. Warning xsession must be set to 0 */
    value "session_login" string: "exec /bin/sh -login /etc/X11/xinit/xinitrc";
    /* Commands executed when exiting a session */
    value "session_stop" string: "/usr/bin/sessreg -d -l :0.0";


    /* Commands executed to shutdown */
    value "shutdown" string: "/sbin/shutdown -h now";
    /* Command executed to reboot */
    value "reboot" string: "/sbin/shutdown -r now";
    /* Command executed to suspend */
    value "suspend" string: "/etc/acpi/sleep.sh force";


   /** Start in daemon mode. This can be overriden by the command line
     *  1 = True, 0 = False */
    value "daemonize" uchar: 1;

    /* Enable numlock */
    value "numlock" uchar: 1;

    /** Bool to determine if elsa must login user with the session_login command
     *  or use xdg desktop and determine the command to use
     *  1 = desktop_file_cmd, 0 = session_login */
    value "xsessions" uchar: 1;

    /** Bool to determine if elsa must autologin user when X start
     *  1 = autologin enabled, 0 = autologin disabled */
    value "autologin" uchar: 0;

    /* The name of the user to use when autologin are enabled */
    value "userlogin" string: "undefined";


    /* Lock file */
    value "lockfile" string: "/var/run/elsa.pid";

    /* Log file */
    value "logfile" string: "/var/log/elsa.log";

    /* Theme to use */
    value "theme" string: "default";
}
EOM
    fi
    # we're done
    return 0
}

# set an option in the configuration file to the specified value
cfg_set()
{
  parameter="$1"
  # values are enclosed in double quotes
  value="\"$2\""
  [ "$value" = '"false"' ] && value=0
  [ "$value" = '"true"' ] && value=1

  # match something like: value "$parameter" <type>:
  param_re="[[:space:]]*value[[:space:]]*['\"]$parameter['\"][[:space:]]*[^:]\+[[:space:]]*:[[:space:]]*"
  # check if the parameter is defined
  line=`sed -n '/^'"$param_re"'/p' "$CONFFILE" | head -n 1`
  if [ -z "$line" ]
  then
    # check if the parameter is commented out
    line=`sed -n '/^#'"$param_re"'/p' "$CONFFILE" | head -n 1`
  fi
  # decide what to do
  if [ -z "$line" ]
  then
      echo "Undefined configuration line: '$line'"
      exit 1
  else
    # replace the first occurrence of the line
    sed -i '1,\|^'"$line"'$| s|^#\?\('"$param_re"'\).*|\1'"$value"';|i' "$CONFFILE"
  fi
  # we're done
  return 0
}

# update a configuration parameter, based on the debconf key
update_config()
{
  debconf_param="$1"
  cfg_param="$2"
  # update configuration option based on debconf value
  db_get "$debconf_param"
  if [ -n "$RET" ]
  then
    cfg_set "$cfg_param" "$RET"
  fi
}

# Do not enable autologin for user with id less than 1000
db_get elsa/autologin
autologin="$RET"

db_get elsa/autologin-user
autologinuser="$RET"

useruid=`getent passwd "$autologinuser" | awk -F':' '{print $3}'`

if [ -z "$autologinuser" ] || [ -z "$useruid" ] || [ "$useruid" -lt 1000 ]
then
    [ -z "$autologin" ] && [ -z "$autologinuser" ] \
        && echo "Disabling autologin: user name not specified."

    [ -z "$autologin" ] && [ -z "$useruid" ] \
        && echo "Disabling autologin: user does not exist."

    [ -z "$autologin" ] && [ "$useruid" -lt 1000 ] \
        && echo "Disabling autologin: user id less than 1000."

    db_set elsa/autologin "false"
    db_set elsa/autologin-user ""
fi

case "$1" in
    configure)
        configure_default_dm
        create_pam
        create_config
        update_config elsa/autologin autologin
        update_config elsa/autologin-user userlogin
        update_config elsa/numlock numlock
        update_config elsa/session-path session_path
        update_config elsa/use-session-login xsessions
        update_config elsa/xorg-args xinit_args
        # Registering the init scripts or starting the daemon may cause output to
        # stdout, which can confuse debconf.
	db_stop
        # fix permissions
        chmod 644 "$CONFFILE"
        chown root:root "$CONFFILE"
        ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
