#!/bin/sh
# Debian elsa package configuration script
# Copyright 2011 Daniel Dehennin <daniel.dehennin@baby-gnu.org>
# Licensed under the GNU General Public License, version 3 or any
# later version. See the file /usr/share/common-licenses/GPL-3 or
# <http://www.gnu.org/copyleft/gpl.txt>.

# adapted from xdm's config script
# Debian xdm package configuration script
# Copyright 2000-2003 Branden Robinson.


set -e

# source debconf library
. /usr/share/debconf/confmodule

THIS_PACKAGE=elsa
THIS_SCRIPT=config
CONFFILE="/etc/elsa.conf"

#INCLUDE_SHELL_LIB#

# set default display manager
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

read_config() {
    debconf_param="$1"
    cfg_param="$2"
    # match something like: value "$parameter" <type>:
    param_re="[[:space:]]*value[[:space:]]*['\"]$cfg_param['\"][[:space:]]*[^:]\+[[:space:]]*:[[:space:]]*"
    # overwrite debconf value if different from config file
    db_get "$debconf_param"
    debconf_value="$RET"
    cfgfile_value=`sed -n 's#^'"$param_re"'\("\|'"'"'\)\?\([^;"'"'"']*\)\("\|'"'"'\)\?[[:space:]]*;[[:space:]]*$#\2#ip' "$CONFFILE" | tail -n 1`
    [ "$cfgfile_value" = "0" ] && cfgfile_value=false
    [ "$cfgfile_value" = "1" ] && cfgfile_value=true
    [ -n "$cfgfile_value" ] && [ "$debconf_value" != "$cfgfile_value" ] && db_set "$debconf_param" "$cfgfile_value"
    # we're done
    return 0
}

parsecfg() {
    # check existance
    [ -f "$CONFFILE" ] || return 0
    # read simple options
    read_config elsa/autologin autologin
    read_config elsa/autologin-user userlogin
    read_config elsa/numlock numlock
    read_config elsa/session-path session_path
    read_config elsa/use-session-login xsessions
    read_config elsa/xorg-args xinit_args
}

OWNERS=
if db_metaget shared/default-x-display-manager owners; then
    OWNERS="$RET"
fi

CHOICES=
if db_metaget shared/default-x-display-manager choices; then
    CHOICES="$RET"
fi

if [ "$OWNERS" != "$CHOICES" ]; then
    db_subst shared/default-x-display-manager choices "$OWNERS"
    db_fset shared/default-x-display-manager seen false
fi

# debconf is not a registry; use the current contents of the default display
# manager file to pre-answer the question if possible
if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
    CURRENT_DEFAULT=$(basename "$(grep -v '^[[:space:]]*#' \
                                "$DEFAULT_DISPLAY_MANAGER_FILE" |
                                head -n 1)")
    if [ -n "$CURRENT_DEFAULT" ]; then
        if which "$CURRENT_DEFAULT" >/dev/null 2>&1; then
            db_set shared/default-x-display-manager "$CURRENT_DEFAULT"
        fi
    fi
else
    CURRENT_DEFAULT=
    if db_get shared/default-x-display-manager; then
        CURRENT_DEFAULT="$RET"
    fi
fi

parsecfg

state="dm"
while [ "$state" != "done" ]
do
    case "$state" in
        dm)
            db_input high shared/default-x-display-manager || true
            state="autologin"
            db_go || state="dm"
            ;;
        autologin)
            db_input medium elsa/autologin || true
            state="autologinuser"
            db_go || state="dm"
            ;;
        autologinuser)
            db_get elsa/autologin
            autologin="$RET"
            state="numlock"
            if [ "$autologin" = "true" ]
            then
                db_input medium elsa/autologin-user || true
                db_go || state="autologin"
            fi
            ;;
        numlock)
            db_input medium elsa/numlock || true
            state="sessionpath"
            db_go || state="autologin"
            ;;
        sessionpath)
            db_input low elsa/session-path || true
            state="usesessionlogin"
            db_go || state="numlock"
            ;;
        usesessionlogin)
            db_input low elsa/use-session-login || true
            state="xorgargs"
            db_go || state="sessionpath"
            ;;
        xorgargs)
            db_input low elsa/xorg-args || true
            state="done"
            db_go || state="usesessionlogin"
            ;;
    esac
done

# using this display manager?
NEW_DEFAULT=
if db_get shared/default-x-display-manager; then
    NEW_DEFAULT="$RET"
fi

# move the default display manager file if we're going to change it
if [ -n "$NEW_DEFAULT" ]; then
    if [ "$NEW_DEFAULT" != "$CURRENT_DEFAULT" ]; then
        if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
            mv "$DEFAULT_DISPLAY_MANAGER_FILE" \
                "$DEFAULT_DISPLAY_MANAGER_FILE.dpkg-tmp"
        fi
    fi
fi

exit 0
