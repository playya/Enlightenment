
button("object.slideshow.bt_previous", "Previous", "arrow_left")
button("object.slideshow.bt_next", "Next", "arrow_right")
button("object.slideshow.bt_start", "Start", "")
button("object.slideshow.bt_stop", "Stop", "")

spinner("object.slideshow.spinner", "%2.0f secs.", 1, 30, 1, 6)
   
group { 											
	name: "object.slideshow.bt_layout"; 								
	parts {												
												
     }							
  }
   

group {
	name: "slideshow/fullscreen";
	script {
		public is_displayed;
	}
	parts {
		alias: "object.previous" 		"tools[bt_previous]:object.slideshow.bt_previous";
		alias: "object.next" 			"tools[bt_next]:object.slideshow.bt_next";
		
		alias: "object.start" 			"timers[bt_start]:object.slideshow.bt_start";
		alias: "object.stop" 			"timers[bt_stop]:object.slideshow.bt_stop";
		alias: "object.timing" 			"timers[spinner]:object.slideshow.spinner";
		
		part {
			name: "object.slideshow";
			type: EXTERNAL;
			source: "elm/slideshow";
			description {
				state: "default" 0.0;
				params {					
	          		bool: "loop" 1;
					string: "layout" "not_fullscreen";
	       		}
			}
		}
		
		part {
			name: "clipper";
			repeat_events: 1;
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
                visible: 0;
			}
			description {
				state: "invisible" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}
		
		part {										
            name: "object.layout"; 							
            type: EXTERNAL;							
            source: "elm/button";	
            clip_to: "clipper";					
            description {							
                state : "default" 0.0;
                rel1.relative: 0.95 0.02;
                rel2.relative: 0.95 0.02;
                align: 1.0 0.0;
                fixed: 1 1;
				params {
					string: "icon" "arrow_up";
					string: "label" "fullscreen";
				}
            }	
            description {
				state: "windowed" 0.0;
				inherit: "default" 0.0;
                params {
					string: "icon" "arrow_down";
					string: "label" "windowed";
				}
			}
			description {
				state: "fullscreen" 0.0;
				inherit: "default" 0.0;
			}		
        } 	
        					
        part {										
            name: "object.styles"; 							
            type: EXTERNAL;							
            source: "elm/hoversel";	
            clip_to: "clipper";						
            description {							
                state : "default" 0.0;
                rel1.relative: 0.05 0.98;
                rel2.relative: 0.05 0.98;
                align: 0.0 1.0;
                fixed: 1 1;
            }						
        } 											
        
		
		part {
            name: "tools";
            type: BOX;
            clip_to: "clipper";		
            description {
                state : "default" 0.0;
                rel1.relative: 0.5 0.02;
                rel2.relative: 0.5 0.02;
                align: 0.5 0.0;
                box {
                    layout: "horizontal";    
                }
            }
            box {
            	items {
            		item {
                        type: GROUP;
                        source: "object.slideshow.bt_previous";
                        name:  "bt_previous";
                        align: 0.5 0;
                        weight: 0 0;
                    }
                    item {
                        type: GROUP;
                        source: "object.slideshow.bt_next";
                        name:  "bt_next";
                        align: 0.5 0;
                        weight: 0 0;
                    }
                }
			}
		}
		part {
            name: "timers";
            type: BOX;
            clip_to: "clipper";		
            description {
                state : "default" 0.0;
                rel1.relative: 0.0 0.98;
                rel2.relative: 1.0 0.98;
                align: 0 0;
                box {
                    layout: "horizontal";    
                }
            }
            box {
            	items {
            		item {
                        type: GROUP;
                        source: "object.slideshow.spinner";
                        name:  "spinner";
                        align: 1 1;
                        weight: 0 0;
                    }
            		item {
                        type: GROUP;
                        source: "object.slideshow.bt_start";
                        name:  "bt_start";
                        align: 1 1;
                        weight: 0 0;
                    }
                    item {
                        type: GROUP;
                        source: "object.slideshow.bt_stop";
                        name:  "bt_stop";
                        align: 1 1;
                        weight: 0 0;
                    }
                }
			}
		}
		
		part {  							
        	name: "object.close";					
	    	type: EXTERNAL;					
	    	repeat_events: 0;				
	    	source: "elm/button"; 
            clip_to: "clipper";			
	    	description {	
                state : "default" 0.0;	
                rel1.relative: 0.95 0.98;
                rel2.relative: 0.95 0.98;
                align: 1.0 1.0;
                fixed: 1 1;
	       		params {					
	          		string: "label" "Close"; 	
	          		string: "icon" "delete"; 	
	       		}							
	    	}					
	    }
		
		part {
			name: "rect"; //catch mouse events
			repeat_events: 1;
			mouse_events: 1;
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}

	}
	programs {
		program {
			name: "fullscreen";
			signal: "fullscreen";
			action: STATE_SET "windowed" 0.0;
			target: "object.layout";
		}
		program {
			name: "windowed";
			signal: "windowed";
			action: STATE_SET "fullscreen" 0.0;
			target: "object.layout";
		}
	
		program {
			name: "mouse_move";
			signal: "mouse,move";
			source: "rect";
			action: ACTION_STOP;
			target: "hide";
			after: "mouse_move_2";
		}
		program {
			name: "mouse_down";
			signal: "mouse,down,1";
			source: "rect";
			after: "mouse_move";
		}
		program {
			name: "mouse_up";
			signal: "mouse,up,1";
			source: "rect";
			after: "mouse_move";
		}
		
		program {
			name: "mouse_move_2";
			script {
				if (get_int(is_displayed) == 0) {
					set_int(is_displayed, 1);
					emit("displayed", "");
				}
				else {
					emit("hide", "");
				}
			}
		}
		
		program {
			name: "displayed";
			signal: "displayed";
			action: STATE_SET "invisible" 0.0;
			target: "clipper";
			after: "displayed_2";
		}
		program {
			name: "displayed_2";
			action: STATE_SET "visible" 0.0;
			target: "clipper";
			transition: SINUSOIDAL 1.0;
			after: "hide";
		}
		program {
			name: "hide";
			signal: "hide";
			in: 3 0;
			script {
				set_int(is_displayed, 0);
			}
			after: "hide_2";
		}
		program {
			name: "hide_2";
			action: STATE_SET "invisible" 0.0;
			target: "clipper";
			transition: SINUSOIDAL 2.0;
			after: "hide_3";
		}
		program {
			name: "hide_3";
			action: STATE_SET "default" 0.0;
			target: "clipper";
		}
		
		
	}
}