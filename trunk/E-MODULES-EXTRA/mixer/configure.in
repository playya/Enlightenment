dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(mixer, 0.0.1, devilhorns@comcast.net)
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR(configure.in)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_ISC_POSIX

AM_INIT_AUTOMAKE(1.6)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST

define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
AC_PROG_LIBTOOL

AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.14)

MODULE_ARCH="$host_os-$host_cpu"
AC_SUBST(MODULE_ARCH)
AC_DEFINE_UNQUOTED(MODULE_ARCH, "$MODULE_ARCH", "Module architecture")

uname=`uname`

AM_CONDITIONAL(BUILD_LINUX, test x$uname = xLinux)
AM_CONDITIONAL(BUILD_FREEBSD, test x$uname = xFreeBSD)

AC_PATH_PROG(EDJE_CC, "edje_cc", "", $PATH)

AC_PATH_PROG(E_CONFIG, "enlightenment-config", "", $PATH)
e_cflags=`$E_CONFIG --cflags`
e_libs=`$E_CONFIG --libs`
e_modules=`$E_CONFIG --module-dir`
AC_SUBST(e_cflags)
AC_SUBST(e_libs)

datadir="${e_modules}/${PACKAGE}"    
AC_ARG_ENABLE(homedir-install,
  AS_HELP_STRING([--enable-homedir-install], [Install module in homedir]),
  [ datadir="${HOME}/.e/e/modules/${PACKAGE}" ]
)

dnl Check for Alsa
AC_ARG_ENABLE(alsa, 
		    AS_HELP_STRING([--enable-alsa], 
		    [enable support for alsa(default=autodetect)]),
		    [ enable_alsa=$enableval ], [ enable_alsa=default ])

if test "x$enable_alsa" = "xdefault" || test "x$enable_alsa" = "xyes"; then
   if test "x$uname" = "xLinux"; then
       	  PKG_CHECK_MODULES(ALSA, [alsa >= 1.0.8],
       	  [ SOUND_CFLAGS="$ALSA_CFLAGS -DHAVE_ALSA $SOUND_CFLAGS"
	    SOUND_LDFLAGS="$ALSA_LIBS $SOUND_LDFLAGS"
	    have_alsa=yes ],
	  [ if test "x$enable_alsa" = "xyes"; then
	       AC_MSG_ERROR([alsa library >= 1.0.8 not found])
	    fi ])
   else
       have_alsa=no
   fi
else
  have_alsa=no
fi

if test "$have_alsa" = "yes"; then
    AC_DEFINE(HAVE_ALSA, 1, [Define if the ALSA output plugin should be built])
else
    have_alsa=no
fi

dnl *** OSS output

AC_ARG_ENABLE(oss,
    [  --disable-oss           disable the OSS output plugin (default=enabled)],
    [have_oss=$enableval],
    [have_oss=yes]
)

if test "$have_oss" = "yes"; then
    AC_MSG_CHECKING(for OSS include dir)
    OSS_CFLAGS=""
    if test -f "/etc/oss.conf" ; then
        for i in `cat /etc/oss.conf`; do
            t=`echo $i | sed -e 's/OSSLIBDIR=//'`
            if test "$i" != "$t" ; then
                if test -f "$t/include/sys/soundcard.h" ; then
                    OSS_CFLAGS="-I$t/include"
                fi
            fi
        done
    fi
    if test -n "$OSS_CFLAGS" ; then
        AC_MSG_RESULT([$OSS_CFLAGS])
    else
        AC_MSG_RESULT([not found])
    fi
    CFLAGS_save=$CFLAGS
    CFLAGS="$CFLAGS $OSS_CFLAGS"
    AC_CHECK_HEADERS(sys/soundcard.h)
    AC_CHECK_HEADERS(machine/soundcard.h)
    CFLAGS=$CFLAGS_save

    if test "${ac_cv_header_sys_soundcard_h}" = "yes" || test "${ac_cv_header_machine_soundcard_h}" = "yes"; then
        have_oss=yes
    fi
fi

if test "$have_oss" = "yes"; then
    AC_DEFINE(HAVE_OSS, 1, [Define if the OSS output plugin should be built])
else
    have_oss=no
fi

dnl FreeBSD newpcm driver detection

AC_CACHE_CHECK(for FreeBSD newpcm driver, freebsd_newpcm_driver,
    if test -r "/dev/sndstat"; then
       grep 'newpcm' /dev/sndstat 2>/dev/null 1>/dev/null
       if test "x$?" = "x0"; then
              freebsd_newpcm_driver="yes"
       else
              freebsd_newpcm_driver="no"
       fi
    else
       freebsd_newpcm_driver="no"
    fi
)
									    
if test "$freebsd_newpcm_driver" = "yes"; then
    AC_DEFINE(HAVE_NEWPCM, 1, [Define if you have the FreeBSD newpcm driver])
fi    

AC_SUBST(SOUND_CFLAGS)
AC_SUBST(SOUND_LDFLAGS)
  
AC_OUTPUT([
Makefile
e_modules-mixer.spec
po/Makefile.in
], [
])

echo
echo "Configuration:"
echo
echo "  Install path:                           ${datadir}"
echo
echo "  Audio Subsystems"
echo "  ----------------"
echo "  Advanced Linux Sound Arch. (alsa):      $have_alsa"
echo "  Open Sound System (oss):                $have_oss"
  
