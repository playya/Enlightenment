EWL 0.2 README
==============
This document was last updated on 20000902-0625-PDT.
The latest version of EWL and this document are available via
Enlightenment CVS (module ewl).  For more information, please visit
http://www.enlightenment.org/cvs.html.


Table of Contents
=================
- Introduction 
- Licensing
- FAQ
- About the Author


Introduction
============
EWL (Enlightened Widget Library)  is a themable widget library using
Imlib2, Evas, and ndbm (db2) configuration files.  EWL features a
GTK+-style programming API, but with a more abstract theming interface
(eg greater customization by the user), layered and translucent widgets,
a simple callback-based event-handling API.  Future plans include an
internal lightweight network protocol, a dynamic widget registry (run-
time objects),


Licensing
=========
EWL is licensed under either a BSD style license, or, at your
discretion, under version 2 or higher of the TVEL.  Please see the
files COPYING and COPYING-TVEL included with this distribution for
additional information regarding each of these licenses.


Frequently Asked Questions (FAQ)
================================
Q.  Are you trying to replace GTK+ and GNOME?
A.  No.  There are thousands ot GTK+ and GNOME programs currently
available -- EWL has none.  GTK+ and GNOME applications have been
ported to a variety of non-UNIX platforms, including Microsoft 
Windows and MacOS.  EWL has currently only been tested under Linux
(although it may work with varying degrees of success under other
UNIX variants).  Also, EWL will give developers a slightly 
different bag of tricks to play with -- EWL does not use reparented
XWindows for child widgets -- rather it translates and propagates
them internally.  This means we are not bound to X (or even to 
Imlib2, as shown by the recent transition to Evas).  This also
allows EWL widgets to be partially translucent and layered (things
neither Qt nor GTK+ can currently do).  EWL themes are not a quick
hack like in Qt or GTK+, but an integral part of the core API.  
This allows users to adjust widget settings on a per-application
basis (without editing code), and it allows developers to worry
less about widget layout and more about the application itself.

Q.  How do I enable OpenGL acceleration?
A.  The following command will enable GL acceleration for EWL-based
applications:

  ewldbtool $HOME/.ewl/preferences render/mode 3D_Hardware
  Note: The key, or "render/mode" portion of the command _is_ case-
  sensitive, while the "3D_Hardware" portion is not.

Q.  Where's the documentation for EWL?
A.  Well, you can see the documentation shell in the doc/ directory,
but most of the meat is currently in the ChangeLog or (gasp!) in the
code itself.


About the Authors
=================
Paul Duncan <pabs@pablotron.org>
http://www.pablotron.org/
(please see the file AUTHORS for contributor contact information)

