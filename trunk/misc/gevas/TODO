------
------
------
------

Remove all the gevas_queue_redraw() calls.
Make sure that the idle evas_render() call gets called every time
the app goes idle.

------

Start of drag and drop. I will polish it up a little more by adding a 
edge_trimmer_evh object that makes sure gevasobjs dont move out of the 
current view.

Other than that there is the need to make evas render a nice icon for 
the drag instead of the gay default "file" image.

------
------

* Playing with adding selections.

--- Version 2 TODO ---

* Improve gevastwin to be able to have the aux object above/to the 
	left of the main object etc.
	

* MAYBE: Retrofit API so that everything is a GtkWidget subclass.
	Then I should be able to use some of Gtk stuff directly
	like add a GtkVBox to the gevas and add buttons to that
	VBox.
  --> The GtkWidget retrofit would be a PITA, because I'd end
  	up writing GtkButton, etc all over, basically this is a 
	huge can of worms (sponsors?).

* seg fault on movein/out of the cat sometimes.
	(can't seem to get this now :)

* gevas should have a ebits attribute so that the bg layers
	can be set from an etcher edb file.

* A more generic "group" concept, so that items can be added to a group
	and then group moved/show/hide etc.

* Should be able to load an ebit into a new GtkImage subclass.
	the ebit would already have clicked images etc, hook 
	these up with a handler.

* Clean up memory handling... check for possible leaks.
	

* better warning msgs if [l]user fails to gevasobj_set_gevas
	after creating a gevasobj.

* evh_obj_changer needs to raise & lower the evas_obj when dragging
	and stopping drag. It currently rasises, but not lowers.

* Should I split out the middle button scrolling into another
	gtkObject so that others can use it too.?

* When scrolling with the middle button, hitting the bottom
  	or far right sometimes causes the display to "bounce"
	about a little bit.

* Color change event handlers. (maybe extend the alpha one todo this
	aswell).

* Looks like I have to do some stuff with GtkScrollablewindow to
	set the viewport size to be smaller in evas... pain.
	There might be a speed gain to be had here.

* A bonobo wrapper for this all? Use monikers for GtkgEvasEventHandler
	types, 
GtkgEvasObject:imagefile="raptor.png",origin="20,20",eventhandlers="resizeEntryExit,Drag"
	This will pay off in the long run, because a view is simply a 
collection of GtkgEvasObjects in a GtkgEvas.
WitmeView:dir="~",origin="200,200",evasorigin="10,400",filter="<moniker>",
sortorder="name,type,size"

Then a witme is a collection of WitmeView monikers.

* A little doco on this all, for the good of myself and other users.


--- PARTLY DONE ---

* Add support for callbacks (evas compatable ones too) from gevas
	There is a bug if you move the mouse out of the window
	too quickly, I think I know how2 fix this.

--- DONE ---

* gevastwin. Has two items, one main one, and one
	that sits BELOW to the main one.
