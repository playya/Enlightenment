dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(engage, 0.0.1)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

AC_CHECK_FUNCS(fmemopen)
AC_CHECK_FUNCS(open_memstream)

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
fi

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [PACKAGE_DATA_DIR])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", [PACKAGE_DATA_DIR])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}", [PACKAGE_DATA_DIR])
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin", [PACKAGE_BIN_DIR])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin", [PACKAGE_BIN_DIR])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}", [PACKAGE_BIN_DIR])
fi

dnl Set PACKAGE_LIB_DIR in config.h.
if test "x${libdir}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${ac_default_prefix}/lib", [PACKAGE_LIB_DIR])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${prefix}/lib", [PACKAGE_LIB_DIR])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${libdir}", [PACKAGE_LIB_DIR])
fi

PROG="esmart-config";
AC_PATH_PROG(ESMART_CONFIG, $PROG, "", $PATH)
if [ test -z $ESMART_CONFIG ]; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  echo "FATAL ERROR. ABORT.";
  exit -1;
fi
esmart_cflags=`$ESMART_CONFIG --cflags`
esmart_libs=`$ESMART_CONFIG --libs`
AC_SUBST(esmart_cflags)
AC_SUBST(esmart_libs)

PROG="imlib2-config";
AC_PATH_PROG(IMLIB_CONFIG, $PROG, "", $PATH)
if [ test -z $IMLIB_CONFIG ]; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  echo "FATAL ERROR. ABORT.";
  exit -1;
fi
imlib_cflags=`$IMLIB_CONFIG --cflags`
imlib_libs=`$IMLIB_CONFIG --libs`
AC_SUBST(imlib_cflags)
AC_SUBST(imlib_libs)
        
PROG="edje-config";
AC_PATH_PROG(EDJE_CONFIG, $PROG, "", $PATH)
if [ test -z $EDJE_CONFIG ]; then
  echo $PROG " is not in your \$PATH. Please ensure it is.";
  echo "Read the manual page for you shell as to how to extend your path.";
  echo "FATAL ERROR. ABORT.";
  exit -1;
fi
edje_cflags=`$EDJE_CONFIG --cflags`
edje_libs=`$EDJE_CONFIG --libs`
AC_SUBST(edje_cflags)
AC_SUBST(edje_libs)


dnl Set PACKAGE_SOURCE_DIR in config.h.
#packagesrcdir=`cd $srcdir && pwd`
#AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "$packagesrcdir", [PACKAGE_SOURCE_DIR]])

evas_cflags=`evas-config --cflags`
evas_libs=`evas-config --libs`
AC_SUBST(evas_cflags)
AC_SUBST(evas_libs)

ecore_cflags=`ecore-config --cflags`
ecore_libs=`ecore-config --libs`
AC_SUBST(ecore_cflags)
AC_SUBST(ecore_libs)

have_esmart_trans="no"
dnl Make sure the esmart header/lib is available
AC_CHECK_HEADER( Esmart/Esmart_Trans.h, 
  [ AC_DEFINE(HAVE_TRANS_BG, [], [Esmart Pseudo-transparency support]) 
    have_esmart_trans="yes"  
  ])

have_imlib="no"
dnl Make sure the imlib header/lib is available
AC_CHECK_HEADER( Imlib2.h,
  [ AC_DEFINE(HAVE_IMLIB, [], [Imlib Image Manipulation support])
    have_imlib="yes"
  ])



AC_OUTPUT([
Makefile
src/Makefile
data/Makefile
data/icons/Makefile
data/themes/Makefile
],[
])
