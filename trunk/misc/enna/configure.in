rm -f config.cache

AC_INIT(configure.in, 0.2.2, www.digital-corner.org)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_ISC_POSIX
AM_INIT_AUTOMAKE(enna, 0.2.2)
dnl AM_CONFIG_HEADER(config.h)
AC_CONFIG_HEADERS([config.h])

AC_C_BIGENDIAN
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL
AC_FUNC_ALLOCA
ALL_LINGUAS="fr"
AC_SUBST(ALL_LINGUAS)

AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION([0.12.1])
if test "x$LIBINTL" = "x"; then
  LIBINTL="$INTLLIBS"
fi

AC_SUBST(LIBINTL)

PKG_CHECK_MODULES([EVAS], [evas >= 0.9.9],
  [ ],
  [ AC_MSG_ERROR(evas not found.) ]
)

PKG_CHECK_MODULES([EDJE], [edje],
  [ ],
  [ AC_MSG_ERROR(edje not found.) ]
)

PKG_CHECK_MODULES([ECORE], [ecore >= 0.9.9.40 ecore-evas ecore-txt ecore-file],
  [ ],
  [ AC_MSG_ERROR(ecore not found.) ]
)

PKG_CHECK_MODULES([EDBUS], [edbus >= 0.0.1],
   [ ],
   [ AC_MSG_ERROR(edbus not found.) ]
)

PKG_CHECK_MODULES([EMOTION], [emotion],
   [ ],
   [ AC_MSG_ERROR(emotion not found.) ]
)

PKG_CHECK_MODULES([LIBXML], [libxml-2.0],
  [ ],
  [ AC_MSG_ERROR(Libxml-2.0 not found.) ]
)

PKG_CHECK_MODULES([EET], [eet],
  [ ],
  [ AC_MSG_ERROR(Eet not found.) ]
)

PKG_CHECK_MODULES([DBUS], [dbus-1],
  [ ],
  [ AC_MSG_ERROR(Dbus not found.) ]
)

PKG_CHECK_MODULES([MUSICBRAINZ], [libmusicbrainz],
  [ ],
  [ AC_MSG_ERROR(Musicbrainz not found.) ]
)

PKG_CHECK_MODULES([SQLITE3], [sqlite3],
  [ ],
  [ AC_MSG_ERROR(sqlite3 not found.) ]
)

PKG_CHECK_MODULES([LIGHTMEDIASCANNER], [lightmediascanner >= 0.1],
  [ ],
  [ AC_MSG_ERROR(lightmediascanner not found.) ]
)

HAVE_LIRC=no
AC_CHECK_HEADER(lirc/lirc_client.h, HAVE_LIRC=yes)
if test "x$HAVE_LIRC" = "xyes"; then
  AC_DEFINE(HAVE_LIRC, 1, [Define if LIRC client lib is present])
  lirc_libs=-llirc_client
  AC_SUBST(lirc_libs)
fi

AC_ARG_WITH(ipod,
            AC_HELP_STRING([--with-ipod],
			   [Enable iPod support]),,
	      with_ipod=auto)
if test "x$with_ipod" != "xno"; then
	PKG_CHECK_MODULES(IPOD, libgpod-1.0 >= 0.4,
	                  have_libgpod=yes, have_libgpod=no)
	if test "x$have_libgpod" = "xno" -a "x$with_ipod" = "xyes"; then
	  AC_MSG_ERROR([iPod explicitly requested but libgpod couldn't be found])
	fi
	if test "x$have_libgpod" = "xyes"; then
	  AC_DEFINE(WITH_IPOD_SUPPORT, 1, [Define if iPod support is enabled])
	  AC_SUBST(IPOD_CFLAGS)
	  AC_SUBST(IPOD_LIBS)
	fi
fi
AM_CONDITIONAL(USE_BLUETOOTH, test x"$use_bluetooth" = xyes)

AC_ARG_WITH(bluetooth,
            AC_HELP_STRING([--with-bluetooth],
			   [Enable Bluetooth support]),,
	      with_bluetooth=auto)
if test "x$with_bluetooth" != "xno"; then
	PKG_CHECK_MODULES(BLUETOOTH, bluez gconf-2.0,
	                  have_bluetooth=yes, have_bluetooth=no)
	if test "x$have_bluetooth" = "xno" -a "x$with_bluetooth" = "xyes"; then
	  AC_MSG_ERROR([Bluetooth support explicitly requested but bluez or gconf2 couldn't be found])
	fi
	if test "x$have_bluetooth" = "xyes"; then
	  AC_DEFINE(WITH_BLUETOOTH_SUPPORT, 1, [Define if Bluetooth support is enabled])
	  AC_SUBST(BLUETOOTH_CFLAGS)
	  AC_SUBST(BLUETOOTH_LIBS)
	fi
fi
AM_CONDITIONAL(USE_BLUETOOTH, test x"$use_bluetooth" = xyes)


AC_OUTPUT([
Makefile
src/Makefile
src/bin/Makefile
po/Makefile.in
data/Makefile
data/theme/Makefile
data/theme/default/Makefile
])

echo
echo "$PACKAGE $VERSION"
echo
echo "Optional Modules:"
echo
echo "  ipod support..................... : $have_libgpod"
echo "  lirc client...................... : $HAVE_LIRC"
echo "  bluetooth support................ : $have_bluetooth"
echo
echo "Now type 'make' ('gmake' on some systems) to compile $PACKAGE."
echo

