AC_INIT(e.spec)

ENLIGHTENMENT_MAJOR=0
ENLIGHTENMENT_MINOR=16
ENLIGHTENMENT_MICRO=8
ENLIGHTENMENT_VERSION=$ENLIGHTENMENT_MAJOR.$ENLIGHTENMENT_MINOR.$ENLIGHTENMENT_MICRO

AM_INIT_AUTOMAKE(e16, $ENLIGHTENMENT_VERSION-pre3)
AM_MAINTAINER_MODE

dnl reasonable guesses for where stuff is installed
if test "x$prefix" = "xNONE"; then
  prefix="/usr/local"
fi
if test "x$exec_prefix" = "xNONE"; then
  exec_prefix=$prefix
fi

AM_CONFIG_HEADER(config.h)

AC_DEFINE_UNQUOTED(ENLIGHTENMENT_VERSION, "$ENLIGHTENMENT_VERSION", [Enlightenment version])
AC_SUBST(ENLIGHTENMENT_VERSION)
AC_DEFINE_UNQUOTED(ENLIGHTENMENT_MAJOR, "$ENLIGHTENMENT_MAJOR", [Major Version])
AC_SUBST(ENLIGHTENMENT_MAJOR)
AC_DEFINE_UNQUOTED(ENLIGHTENMENT_MINOR, "$ENLIGHTENMENT_MINOR", [Minor Version])
AC_SUBST(ENLIGHTENMENT_MINOR)
AC_DEFINE_UNQUOTED(ENLIGHTENMENT_MICRO, "$ENLIGHTENMENT_MICRO", [Micro Version])
AC_SUBST(ENLIGHTENMENT_MICRO)
if test "x$ENLIGHTENMENT_RELEASE" != "x"; then
  AC_DEFINE_UNQUOTED(ENLIGHTENMENT_RELEASE, "$ENLIGHTENMENT_RELEASE", [Release])
fi

ALL_LINGUAS="bg bs da de en_US es fr hu ko nl no ru sv pt pl pt_BR tr ja"

AC_PROG_CC
AC_PROG_MAKE_SET
AC_ISC_POSIX
AC_PROG_INSTALL
AC_PROG_LN_S

AC_HEADER_STDC

AC_PATH_X
AC_PATH_XTRA

AC_CHECK_HEADERS(X11/SM/SMlib.h)
AC_CHECK_HEADERS(alloca.h stdarg.h wctype.h)

AC_TYPE_SIGNAL

AC_C_BIGENDIAN
AC_C___ATTRIBUTE__
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)

AC_CHECK_FUNCS(getcwd)
AC_CHECK_FUNCS(mkdir)
AC_CHECK_FUNCS(snprintf)
AM_CONDITIONAL(USE_ESNPRINTF, test "x$ac_cv_func_snprintf" != "xyes")
AC_CHECK_FUNCS(strcasecmp)
AC_CHECK_FUNCS(setenv)
AC_CHECK_FUNCS(strdup strndup)

AC_CHECK_FUNCS(blumfrub)
AC_CHECK_FUNCS(buckets_of_erogenous_nym)
AC_CHECK_FUNCS(buttox)

AM_GNU_GETTEXT
AM_GNU_GETTEXT_VERSION(0.12.1)
if test "x$LIBINTL" = "x"; then
  LIBINTL="$INTLLIBS"
  AC_SUBST(LIBINTL)
fi

AC_ARG_ENABLE(fsstd,
  [  --enable-fsstd          install files following FSSTD @<:@default=yes@:>@],,
  enable_fsstd=yes)

AC_ARG_ENABLE(sound,
  [  --enable-sound          compile with sound support @<:@default=yes@:>@],,
  enable_sound=yes)

AC_ARG_ENABLE(hints-gnome,
  [  --enable-hints-gnome    compile with GNOME(<2.0) hints support @<:@default=no@:>@],,
  enable_hints_gnome=no)

AC_ARG_ENABLE(ecore-x,
  [  --enable-ecore-x        use ecore-x interface to X11 (for testing only - DO NOT USE!) @<:@default=no@:>@],,
  enable_ecore_x=no)

if test "x$enable_hints_gnome" = "xyes"; then
  AC_DEFINE(ENABLE_GNOME, 1, [GNOME(<2.0) Hints])
fi
AM_CONDITIONAL(ENABLE_GNOME, test "x$enable_hints_gnome" = "xyes")

dnl The following test must come after AM_GNU_GETTEXT as it relies on
dnl ${DATADIRNAME} being defined.

if test "x$enable_fsstd" = "xyes"; then
  LOCALEDIR=${prefix}/${DATADIRNAME}/locale
else
  datadir=${prefix}
  exec_prefix=${prefix}/e16
  LOCALEDIR=${prefix}/e16/locale
fi
ENLIGHTENMENT_ROOT=`eval echo ${datadir}/e16`
ENLIGHTENMENT_BIN=`eval echo ${bindir}`
AC_SUBST(ENLIGHTENMENT_ROOT)
AC_SUBST(ENLIGHTENMENT_BIN)
AC_SUBST(LOCALEDIR)
AC_DEFINE_UNQUOTED(ENLIGHTENMENT_ROOT, "$ENLIGHTENMENT_ROOT", [The installation root directory])
AC_DEFINE_UNQUOTED(ENLIGHTENMENT_BIN, "$ENLIGHTENMENT_BIN", [The installation bin directory])
AC_DEFINE_UNQUOTED(LOCALEDIR, "$LOCALEDIR",  [The installation locale directory])

if test "x$enable_sound" = "xyes"; then
  AM_PATH_ESD(0.2.17,AC_DEFINE(HAVE_LIBESD, 1, [libesd.so]),[
  echo "WARNING: Enlightenment needs a system with libesd.so (esound)"
  echo "0.2.17 or higher to use sound support."
  echo "Enlightenment can use EsounD (ESD) to be installed to compile."
  echo "Sound will be disabled in this binary. If you ever want sound"
  echo "You will need to get and install EsounD then recompile Enlightenment."
  AC_MSG_WARN([Warning: no EsounD detected.])])
else
  echo "Sound support has been turned off, per the --enable-sound=no"
  echo "passed to your configure line."
fi

LDFLAGS="$LDFLAGS -L$prefix/lib"

PKG_CHECK_MODULES(IMLIB2, imlib2 >= 1.2.0, have_good_imlib2=yes)
IMLIB_LIBS=`imlib2-config --libs`
IMLIB_CFLAGS=`imlib2-config --cflags`
AC_SUBST(IMLIB_LIBS)
AC_SUBST(IMLIB_CFLAGS)
AC_CHECK_LIB(Imlib2, imlib_create_image,
  AC_DEFINE(USE_IMLIB2, 1, [Imlib2 support]),
  AC_MSG_ERROR([Fatal Error: no Imlib2 detected.]),
  $IMLIB_LIBS)

if test "x$enable_ecore_x" = "xyes"; then
  AC_CHECK_LIB(ecore_x, ecore_x_init,
    [
      AC_DEFINE(USE_ECORE_X, 1, [Ecore_x support])
      AC_SUBST(ecore_libs)
      AC_SUBST(ecore_cflags)
    ],[
      AC_MSG_ERROR(Cannot find ecore: Is ecore-config in path?)
    ])
  ecore_libs=`ecore-config --libs`
  ecore_cflags=`ecore-config --cflags`
  AC_SUBST(ecore_libs)
  AC_SUBST(ecore_cflags)
fi

AC_CHECK_LIB(Xext, XShapeQueryExtension,
  E_X_LIBS="-lXext $E_X_LIBS", , $X_LIBS -lX11)

AC_ARG_ENABLE(xinerama,
  [  --enable-xinerama       compile with xinerama support @<:@default=yes@:>@],,
  enable_xinerama=yes)
if test "x$enable_xinerama" = "xyes"; then
AC_CHECK_LIB(Xinerama, XineramaQueryExtension,
  AC_DEFINE(HAS_XINERAMA, 1, [Xinerama support])
  E_X_LIBS="-lXinerama $E_X_LIBS", , $X_LIBS -lXext -lX11)
fi

AC_ARG_ENABLE(zoom,
  [  --enable-zoom           compile with zoom support @<:@default=yes@:>@],,
  enable_zoom=yes)
if test "x$enable_zoom" = "xyes"; then
  AC_CHECK_LIB(Xxf86vm, XF86VidModeQueryExtension,
    AC_DEFINE(WITH_ZOOM, 1, [Zoom Support])
    E_X_LIBS="-lXxf86vm $E_X_LIBS", , $X_LIBS -lXext -lX11)
else
  echo "zoom has been turned off by request at compiletime"
fi

AC_ARG_ENABLE(xrandr,
  [  --enable-xrandr         compile with RandR support @<:@default=yes@:>@],,
  enable_xrandr=yes)
if test "x$enable_xrandr" = "xyes"; then
AC_CHECK_LIB(Xrandr, XRRQueryExtension,
    AC_DEFINE(HAS_XRANDR, 1, [RandR support])
    E_X_LIBS="-lXrandr -lXrender $E_X_LIBS", , $X_LIBS -lXrender -lXext -lX11)
  AC_CHECK_HEADERS(X11/extensions/Xrandr.h,,,[#include <X11/Xlib.h>])
fi

# FIXME - Do this properly
AC_ARG_ENABLE(composite,
  [  --enable-composite      compile with Composite support @<:@default=yes@:>@],,
  enable_composite=yes)
if test "x$enable_composite" = "xyes"; then
  AC_CHECK_LIB(Xcomposite, XCompositeQueryExtension,
      AC_DEFINE(HAS_COMPOSITE, 1, [Composite support])
      E_X_LIBS="-lXcomposite -lXdamage -lXfixes -lXrender $E_X_LIBS", , $X_LIBS -lXext -lX11,
      enable_composite=no)
  AC_CHECK_HEADERS(X11/extensions/Xcomposite.h ,,,[#include <X11/Xlib.h>])
  AC_CHECK_HEADERS(X11/extensions/Xdamage.h    ,,,[#include <X11/Xlib.h>])
  AC_CHECK_HEADERS(X11/extensions/Xfixes.h     ,,,[#include <X11/Xlib.h>])
  AC_CHECK_HEADERS(X11/extensions/Xrender.h    ,,,[#include <X11/Xlib.h>])
fi
AM_CONDITIONAL(HAS_COMPOSITE, test "x$enable_composite" = "xyes")

AC_CHECK_LIB(Fridge,mass_quantities_of_bass_ale)
AC_CHECK_LIB(Fridge,mass_quantities_of_any_ale,, [
  echo "Warning: No ales were found in your refrigerator."
  echo "  We highly suggest that you rectify this situation immediately."
])

AC_ARG_ENABLE(gcc-warnings,
  [  --enable-gcc-warnings   enable GCC compiler warnings @<:@default=no@:>@],,
  enable_gcc_warnings=no) 
if test "x$enable_gcc_warnings" = "xyes"; then
  CFLAGS="$CFLAGS -W -Wall -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes -Waggregate-return -Wcast-align -Wpointer-arith -Wshadow -Wwrite-strings #-Wunreachable-code"
fi

AC_SUBST(E_X_LIBS)

AC_OUTPUT([
Makefile
src/Makefile
dox/Makefile
dox/E-docs/Makefile
eesh/Makefile
epp/Makefile
man/Makefile
config/Makefile
config/pix/Makefile
themes/Makefile
scripts/Makefile
misc/Makefile
po/Makefile.in
intl/Makefile
])

if test "x$have_good_imlib2" != "xyes"; then
  echo "***************************************************************"
  echo "*** WARNING: imlib2 >= 1.2.0 was not detected               ***"
  echo "*** WARNING: If you indeed do not have this, expect trouble ***"
  echo "***************************************************************"
fi

echo "***************************************************************"
echo "*** NOTE: If this is your first trip with version 0.16.8    ***"
echo "*** NOTE: you may want to take a look in docs/README-0.16.8 ***"
echo "***************************************************************"
