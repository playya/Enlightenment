#define RATING_STARS_WIDTH 480
#define RATING_STARS_HEIGHT 60
#define RATING_STARS_STEP 55
#define RATING_STARS_COUNT 5

#define MSG_VOLUME 1
#define MSG_POSITION 2
#define MSG_RATING 3
#define MSG_MUTE 4
#define MSG_LOOP 5
#define MSG_SHUFFLE 6

/*
 * TOOLBAR_POSITION() macro below only works with an odd number of items on a toolbar.
 * What it does is calculate the offset relative to the center (on x) of the nth button,
 * and in order to do that, it uses the position of the item in the middle of the toolbar.
 */
#define TOOLBAR_ITEMS 5
#define TOOLBAR_MIDDLE_ITEM 3
#define TOOLBAR_ITEM_SIZE 90
#define TOOLBAR_POSITION(_item_number) ((_item_number)*(TOOLBAR_ITEM_SIZE)-((TOOLBAR_ITEM_SIZE)*(TOOLBAR_MIDDLE_ITEM)))

/*
 * TOOLBAR_NORMAL, ACTION, and MODE specify which kind of button will be created on the
 * toolbar: this changes both the signals emitted and received. Refer to the Enjoy shell
 * code to see which button type to use whenever adding new ones.
 */
#define TOOLBAR_NORMAL ""
#define TOOLBAR_ACTION "action,"
#define TOOLBAR_MODE "mode,"

/*
 * TOOLBAR_BUTTON macro creates a button on the iconbar. It creates all the necessary parts
 * and programs to make the button work.
 * An example of use would be:
 *      TOOLBAR_BUTTON("play", "Play", TOOLBAR_ACTION, 1)
 * That will create a button named "play", using the images "bt_play_normal.png" and
 * "bt_play_selected.png", with the label "Play", type "action" and on the first position
 * on the toolbar.
 */

#define TOOLBAR_BUTTON(_button_name,_button_title,_button_type,_n) \
  _TOOLBAR_BUTTON_STD_PARTS(_button_name, _button_title, _button_type, TOOLBAR_POSITION(_n), TOOLBAR_POSITION(_n)) \
  _TOOLBAR_BUTTON_STD_PROGRAMS(_button_name, _button_type)

#define TOOLBAR_MULTIBUTTON(_button_name1,_button_title1,_button_name2,_button_title2,_button_type,_n) \
  _TOOLBAR_BUTTON_STD_PARTS(_button_name1, _button_title1, _button_type, TOOLBAR_POSITION(_n), TOOLBAR_POSITION((_n - 1))) \
  _TOOLBAR_BUTTON_STD_PARTS(_button_name2, _button_title2, _button_type, TOOLBAR_POSITION(_n), TOOLBAR_POSITION((_n + 1))) \
  _TOOLBAR_BUTTON_MULTI_PROGRAMS(_button_name1, _button_name2, _button_type)

#define _TOOLBAR_BUTTON_STD_PARTS(_button_name,_button_title,_button_type,_xpos,_xpos_hidden) \
    part { name: "button-"_button_name"-clipper"; \
        type: RECT; \
        description { state: "default" 0.0; \
            fixed: 1 1; \
            min: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            max: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            rel1 { \
                to_y: "iconbar.bg"; \
                relative: 0.5 1.0; \
                offset: (_xpos) -47; \
            } \
            rel2 { \
                to_y: "iconbar.bg"; \
                relative: 0.5 1.0; \
                offset: (_xpos) (-TOOLBAR_ITEM_SIZE/2); \
            } \
        } \
    } \
    part { name: "button-"_button_name"-normal"; \
        type: IMAGE; \
        clip_to: "button-"_button_name"-clipper"; \
        description { state: "default" 0.0; \
            min: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            max: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            fixed: 1 1; \
            rel1 { \
                to_y: "iconbar.bg"; \
                relative: 0.5 1.0; \
                offset: (_xpos) -47; \
            } \
            rel2 { \
                to_y: "iconbar.bg"; \
                relative: 0.5 1.0; \
                offset: (_xpos) (-TOOLBAR_ITEM_SIZE/2); \
            } \
            image.normal: "bt_"_button_name"_normal.png"; \
            color: 255 255 255 255; \
        } \
        description { state: "hidden" 0.0; \
            inherit: "default" 0.0; \
            color: 255 255 255 0; \
            visible: 0; \
            rel1.offset: (_xpos_hidden) -47; \
            rel2.offset: (_xpos_hidden) (-TOOLBAR_ITEM_SIZE/2); \
        } \
        description { state: "disabled" 0.0; \
            inherit: "default" 0.0; \
            color: 255 255 255 32; \
        } \
    } \
    part { name: "button-"_button_name"-selected"; \
        type: IMAGE; \
        clip_to: "button-"_button_name"-clipper"; \
        mouse_events: 0; \
        description { state: "default" 0.0; \
            visible: 0; \
            min: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            max: TOOLBAR_ITEM_SIZE TOOLBAR_ITEM_SIZE; \
            fixed: 1 1; \
            rel1.to: "button-"_button_name"-normal"; \
            rel2.to: "button-"_button_name"-normal"; \
            image.normal: "bt_"_button_name"_selected.png"; \
            color: 255 255 255 0; \
            visible: 0; \
        } \
        description { state: "visible" 0.0; \
            inherit: "default" 0.0; \
            visible: 1; \
            color: 255 255 255 255; \
        } \
    } \
    part { name: "button-"_button_name"-left-separator"; \
        type: RECT; \
        description { state: "default" 0.0; \
            fixed: 1 1; \
            min: 2 90; \
            max: 2 90; \
            rel1 { \
                to: "button-"_button_name"-clipper"; \
                relative: 0.0 0.0; \
                offset: -1 12; \
            } \
            rel2 { \
                to: "button-"_button_name"-clipper"; \
                relative: 0.0 1.0; \
                offset: -1 -1; \
            } \
            color: 0 0 0 128; \
        } \
    } \
    part { name: "button-"_button_name"-label"; \
        type: TEXT; \
        scale: 1; \
        clip_to: "button-"_button_name"-clipper"; \
        effect: GLOW; \
        mouse_events: 0; \
        description { state: "default" 0.0; \
            rel1 { \
                to: "button-"_button_name"-normal"; \
                relative: 0.0 0.0; \
                offset: 0 5; \
            } \
            rel2 { \
                to: "button-"_button_name"-normal"; \
                relative: 1.0 1.0; \
                offset: -1 -1; \
            } \
            text { \
                font: "Sans:style=Bold,Edje-Vera-Bold"; \
                size: 11; \
                text: _button_title; \
                align: 0.5 0.5; \
            } \
            color: 190 190 190 255; \
            color2: 20 20 20 255; \
        } \
        description { state: "hidden" 0.0; \
            inherit: "default" 0.0; \
            visible: 0; \
            color: 190 190 190 0; \
            color2: 20 20 20 0; \
        } \
        description { state: "disabled" 0.0; \
            inherit: "default" 0.0; \
            color: 100 100 100 255; \
            color2: 50 50 50 255; \
        } \
    } \
    part { name: "button-"_button_name"-disable-mask"; \
        type: RECT; \
        mouse_events: 1; \
        description { state: "default" 0.0; \
            rel1.to: "button-"_button_name"-normal"; \
            rel2.to: "button-"_button_name"-normal"; \
            fixed: 1 1; \
            visible: 0; \
            color: 255 255 255 0; \
        } \
        description { state: "hidden" 0.0; \
            inherit: "default" 0.0; \
        } \
        description { state: "disabled" 0.0; \
            inherit: "default" 0.0; \
            visible: 1; \
        } \
    }

#define _TOOLBAR_BUTTON_MULTI_PROGRAMS(_button_name1,_button_name2,_button_type) \
   _TOOLBAR_BUTTON_STD_PROGRAMS(_button_name1, _button_type) \
   _TOOLBAR_BUTTON_STD_PROGRAMS(_button_name2, _button_type)

#define _TOOLBAR_BUTTON_STD_PROGRAMS(_button_name,_button_type) \
    programs { \
        program { name: _button_name"-pressed"; \
            signal: "mouse,down,*"; \
            source: "button-"_button_name"-normal"; \
            action: STATE_SET "visible" 0.0; \
            target: "button-"_button_name"-selected"; \
            transition: ACCELERATE 0.3; \
        } \
        program { name: _button_name"-released"; \
            signal: "mouse,up,*"; \
            source: "button-"_button_name"-normal"; \
            action: STATE_SET "default" 0.0; \
            target: "button-"_button_name"-selected"; \
            transition: DECELERATE 0.6; \
        } \
        program { name: _button_name"-clicked"; \
            signal: "mouse,clicked,*"; \
            source: "button-"_button_name"-normal"; \
            action: SIGNAL_EMIT "ejy,"_button_type""_button_name",clicked" "ejy"; \
        } \
        program { name: _button_name"-hide"; \
            signal: "ejy,"_button_type""_button_name",hide"; \
            source: "ejy"; \
            action: STATE_SET "hidden" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            transition: ACCELERATE 0.3; \
        } \
        program { name: _button_name"-show"; \
            signal: "ejy,"_button_type""_button_name",show"; \
            source: "ejy"; \
            action: STATE_SET "default" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            transition: ACCELERATE 0.3; \
        } \
        program { name: _button_name"-disable-visible-anim"; \
            action: STATE_SET "disabled" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            target: "button-"_button_name"-disable-mask"; \
            transition: DECELERATE 0.3; \
        } \
        program { name: _button_name"-disable-hidden-anim"; \
            action: STATE_SET "hidden" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            target: "button-"_button_name"-disable-mask"; \
        } \
        program { name: _button_name"-disable"; \
            signal: "ejy,"_button_type""_button_name",disable"; \
            source: "ejy"; \
            script { \
                new st[31]; \
                new Float:idx; \
                get_state(PART:"button-"_button_name"-normal", st, 30, idx); \
                if (strcmp(st, "hidden") == 0) run_program(PROGRAM:_button_name"-disable-hidden-anim"); \
                else run_program(PROGRAM:_button_name"-disable-visible-anim"); \
            } \
        } \
        program { name: _button_name"-enable-visible-anim"; \
            action: STATE_SET "default" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            target: "button-"_button_name"-disable-mask"; \
            transition: DECELERATE 0.3; \
        } \
        program { name: _button_name"-enable-hidden-anim"; \
            action: STATE_SET "hidden" 0.0; \
            target: "button-"_button_name"-normal"; \
            target: "button-"_button_name"-label"; \
            target: "button-"_button_name"-disable-mask"; \
        } \
        program { name: _button_name"-enable"; \
            signal: "ejy,"_button_type""_button_name",enable"; \
            source: "ejy"; \
            script { \
                new st[31]; \
                new Float:idx; \
                get_state(PART:"button-"_button_name"-normal", st, 30, idx); \
                if (strcmp(st, "hidden") == 0) run_program(PROGRAM:_button_name"-enable-hidden-anim"); \
                else run_program(PROGRAM:_button_name"-enable-visible-anim"); \
            } \
        } \
    }

collections {
   externals {
      external: "elm";
   }

   group {
      name: "all-songs-icon";
      images {
         image: "all_songs.png" COMP;
      }
      parts {
          part {
              name: "icon";
              type: IMAGE;
              description {
                  state: "default" 0.0;
                  image.normal: "all_songs.png";
              }
          }
      }
   }
   group {
      name: "album-without-cover";
      images {
         set {
            name: "no-cover";
            image {
               image: "no-cover-66.png" COMP;
               size: 1 1 70 70;
            }
            image {
               image: "no-cover-146.png" COMP;
               size: 71 71 146 146;
            }
            image {
               image: "no-cover-1024.png" COMP;
               size: 147 147 2048 2048;
            }
         }
      }
      parts {
          part {
              name: "icon";
              type: IMAGE;
              description {
                  aspect: 1.0 1.0;
                  aspect_preference: BOTH;
                  state: "default" 0.0;
                  image.normal: "no-cover";
              }
          }
      }
   }
   group { /*
            *  TODO: make a proper theme, see TODO and src/bin/win.c
            *
            * Theme should be based on efenniht, see THEMES/efenniht
            * and eve/data/theme/default.
            *
            * - add "more" button
            */
      name: "win";
      min: 480 320;
      data.item: "initial_size" "480 800";

      images {
         image: "bottom_bg.png" COMP;
         image: "bt_prev_normal.png" COMP;
         image: "bt_prev_selected.png" COMP;
         image: "bt_nowplaying_normal.png" COMP;
         image: "bt_nowplaying_selected.png" COMP;
         image: "bt_next_normal.png" COMP;
         image: "bt_next_selected.png" COMP;
         image: "bt_list_normal.png" COMP;
         image: "bt_list_selected.png" COMP;
         image: "bt_more_normal.png" COMP;
         image: "bt_more_selected.png" COMP;
         image: "bt_pause_normal.png" COMP;
         image: "bt_pause_selected.png" COMP;
         image: "bt_play_normal.png" COMP;
         image: "bt_play_selected.png" COMP;
         image: "bg_gradient_bottom.png" COMP;
         image: "bg_gradient_top.png" COMP;
      }
      parts {
         part { name: "_bg_gradient_clipper";
            mouse_events: 0;
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -85;
               }
            }
         }
         part { name: "_bg_gradient_bg";
            mouse_events: 0;
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -85;
               }
            }
         }
         part { name: "_bg_gradient_top";
            clip_to: "_bg_gradient_clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "bg_gradient_top.png";
               min: 0 184;
               max: 9999 184;
               rel1 {
                  to: "_bg_gradient_bottom";
                  relative: 0.0 0.0;
                  offset: 0 -184;
               }
               rel2 {
                  to: "_bg_gradient_bottom";
                  relative: 1.0 0.0;
                  offset: -1 -1;
               }
            }
            description { state: "fixed" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "_bg_gradient_clipper";
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "_bg_gradient_clipper";
                  relative: 1.0 0.0;
                  offset: -1 184;
               }
            }
         }
         part { name: "_bg_gradient_bottom";
            clip_to: "_bg_gradient_clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 184;
               max: 9999 184;
               rel1 {
                  to: "_bg_gradient_clipper";
                  relative: 0.0 1.0;
                  offset: 0 -185;
               }
               rel2 {
                  to: "_bg_gradient_clipper";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image.normal: "bg_gradient_bottom.png";
            }
         }
         programs {
            program { name: "_bg_gradient_resize";
               signal: "resize";
               script {
                  new x, y, w, h;
                  get_geometry(PART:"_bg_gradient_clipper", x, y, w, h);
                  if ( h >= 368 )
                     set_state(PART:"_bg_gradient_top", "fixed", 0.0);
                  else
                     set_state(PART:"_bg_gradient_top", "default", 0.0);
               }
            }
            program { name: "_bg_gradient_show";
               signal: "show";
               after: "_bg_gradient_resize";
            }
         }

         part {
            name: "list.clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "invisible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
         }
         part {
            name: "ejy.swallow.list";
            type: SWALLOW;
            clip_to: "list.clipper";
            description {
               state: "default" 0.0;
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -85;
               }
            }
            description {
               state: "invisible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }

         part {
            name: "nowplaying.clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ejy.swallow.nowplaying";
            type: SWALLOW;
            clip_to: "nowplaying.clipper";
            description {
               state: "default" 0.0;
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -85;
               }
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: default 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               signal: "ejy,screen,nowplaying,show";
               source: "ejy";
               action: STATE_SET "visible" 0.0;
               transition: SINUSOIDAL 0.2;
               target: "ejy.swallow.nowplaying";
               target: "nowplaying.clipper";
            }
            program {
               signal: "ejy,screen,nowplaying,show";
               source: "ejy";
               action: STATE_SET "invisible" 0.0;
               transition: SINUSOIDAL 0.2;
               target: "ejy.swallow.list";
               target: "list.clipper";
            }

            program {
               signal: "ejy,screen,nowplaying,hide";
               source: "ejy";
               action: STATE_SET "default" 0.0;
               transition: SINUSOIDAL 0.2;
               target: "ejy.swallow.nowplaying";
               target: "nowplaying.clipper";
            }
            program {
               signal: "ejy,screen,nowplaying,hide";
               source: "ejy";
               action: STATE_SET "default" 0.0;
               transition: SINUSOIDAL 0.2;
               target: "ejy.swallow.list";
               target: "list.clipper";
            }
         }
         part {
            name: "iconbar.bg";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "bottom_bg.png";
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -90;
            }
         }

         TOOLBAR_BUTTON("prev", "Previous", TOOLBAR_NORMAL, 1)
         TOOLBAR_BUTTON("next", "Next", TOOLBAR_NORMAL, 2)
         TOOLBAR_BUTTON("more", "More", TOOLBAR_NORMAL, 5)
         TOOLBAR_MULTIBUTTON("play", "Play", "pause", "Pause", TOOLBAR_ACTION, 3)
         TOOLBAR_MULTIBUTTON("list", "Playlist", "nowplaying", "Playing", TOOLBAR_MODE, 4)

         part { name: "button-more-right-separator";
             type: RECT;
             description { state: "default" 0.0;
                 fixed: 1 1;
                 min: 2 90;
                 max: 2 90;
                 rel1 {
                     to: "button-more-normal";
                     relative: 1.0 0.0;
                     offset: -2 12;
                 }
                 rel2 {
                     to: "button-more-normal";
                     relative: 1.0 1.0;
                     offset: -2 -1;
                 }
                 color: 0 0 0 128;
             }
         }
      }
   }

   group {
      name: "page/roots";
      images {
         image: "songs-button.png" COMP;
         image: "top_bg.png" COMP;
      }
      data.item: "homogeneous" "1";
      parts {
         part {
            name: "ejy.swallow.list";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "ejy.swallow.index";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "ejy.swallow.list";
               rel2.to: "ejy.swallow.list";
            }
         }

         part {
            name: "title.bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel2 {
                  to_y: "ejy.text.title";
                  offset: -1 8;
               }
               image {
                  normal: "top_bg.png";
                  border: 0 0 0 1;
               }
            }
         }

         part {
            name: "songs-button-text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 0.0;
                  offset: -51 -1;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 1.0;
                  offset: -11 -1;
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  text: "Playing";
                  min: 1 1;
                  align: 1.0 0.5;
               }
            }
         }
         part {
            name: "songs-arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               min: 13 16;
               max: 13 16;
               fixed: 1 1;
               rel1 {
                  to_y: "songs";
                  relative: 1.0 0.0;
                  offset: -15 0;
               }
               rel2 {
                  to_y: "songs";
                  relative: 1.0 1.0;
                  offset: -15 -1;
               }
               image.normal: "songs-button.png";
            }
         }
         part {
            name: "songs_clipper";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1.to: "songs";
               rel2.to: "songs";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
            description {
               state: "pressed" 0.0;
               inherit: "visible" 0.0;
               color: 255 255 255 128;
               visible: 1;
            }
         }
         part {
            name: "songs";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2.to_y: "title.bg";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  to_x: "songs-button-text";
                  relative: 0.0 0.0; /* reset inherited from "default" 0.0 */
                  offset: 0 0;
               }
               rel2.to_y: "title.bg";
            }
         }
         programs {
            program {
               signal: "mouse,clicked,1";
               source: "songs";
               action: SIGNAL_EMIT "ejy,songs,clicked" "ejy";
            }
            program {
               signal: "mouse,down,1";
               source: "songs";
               action: STATE_SET "pressed" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "mouse,up,1";
               source: "songs";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "ejy,songs,show";
               source: "ejy";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
            program {
               signal: "ejy,songs,hide";
               source: "ejy";
               action: STATE_SET "default" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
         }

         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               rel1.offset: 26 8;
               rel2 {
                  to_x: "songs";
                  relative: 0.0 0.0;
                  offset: -21 25;
               }
               color: 255 255 255 255;
               text {
                  font: "Sans:style=Bold";
                  size: 14;
                  min: 0 1;
                  text: "title";
               }
            }
         }
      }
   }

   group {
      name: "page/songs";
      alias: "page/albums";
      alias: "page/nameids";
      images {
         image: "back-button.png" COMP;
         image: "songs-button.png" COMP;
         image: "top_bg.png" COMP;
      }
      data.item: "homogeneous" "1";
      parts {
         part {
            name: "ejy.swallow.list";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "ejy.swallow.index";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "ejy.swallow.list";
               rel2.to: "ejy.swallow.list";
            }
         }

         part {
            name: "title.bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel2 {
                  to_y: "ejy.text.title";
                  offset: -1 8;
               }
               image {
                  normal: "top_bg.png";
                  border: 0 0 0 1;
               }
            }
         }

         part {
            name: "back-button-text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "back_clipper";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  to_y: "ejy.text.title";
                  to_x: "back-arrow";
                  relative: 0.0 0.0;
                  offset: 24 0;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  to_x: "back-arrow";
                  relative: 0.0 1.0;
                  offset: 51 -1;
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  text: "Back";
                  min: 1 1;
                  align: 0.0 0.5;
               }
            }
         }
         part {
            name: "back-arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "back_clipper";
            description {
               state: "default" 0.0;
               min: 13 16;
               max: 13 16;
               fixed: 1 1;
               rel1 {
                  to_y: "back";
                  relative: 0.0 0.0;
                  offset: 14 0;
               }
               rel2 {
                  to_y: "back";
                  relative: 0.0 1.0;
                  offset: 14 -1;
               }
               image.normal: "back-button.png";
            }
         }
         part {
            name: "back_clipper";
            type: RECT;
            description {
               state: "default" 0.0;
            }
            description {
               state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "back";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel2 {
                  to_x: "back-button-text";
                  to_y: "title.bg";
               }
            }
         }
         programs {
            program {
               signal: "mouse,clicked,1";
               source: "back";
               action: SIGNAL_EMIT "ejy,back,clicked" "ejy";
            }
            program {
               signal: "mouse,down,1";
               source: "back";
               action: STATE_SET "pressed" 0.0;
               target: "back_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "mouse,up,1";
               source: "back";
               action: STATE_SET "visible" 0.0;
               target: "back_clipper";
               transition: ACCELERATE 0.2;
            }
         }

         part {
            name: "songs-button-text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 0.0;
                  offset: -51 -1;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 1.0;
                  offset: -11 -1;
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  text: "Playing";
                  min: 1 1;
                  align: 1.0 0.5;
               }
            }
         }
         part {
            name: "songs-arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               min: 13 16;
               max: 13 16;
               fixed: 1 1;
               rel1 {
                  to_y: "songs";
                  relative: 1.0 0.0;
                  offset: -15 0;
               }
               rel2 {
                  to_y: "songs";
                  relative: 1.0 1.0;
                  offset: -15 -1;
               }
               image.normal: "songs-button.png";
            }
         }
         part {
            name: "songs_clipper";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1.to: "songs";
               rel2.to: "songs";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
            description {
               state: "pressed" 0.0;
               inherit: "visible" 0.0;
               color: 255 255 255 128;
               visible: 1;
            }
         }
         part {
            name: "songs";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2.to_y: "title.bg";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  to_x: "songs-button-text";
                  relative: 0.0 0.0; /* reset inherited from "default" 0.0 */
                  offset: 0 0;
               }
               rel2.to_y: "title.bg";
            }
         }
         programs {
            program {
               signal: "mouse,clicked,1";
               source: "songs";
               action: SIGNAL_EMIT "ejy,songs,clicked" "ejy";
            }
            program {
               signal: "mouse,down,1";
               source: "songs";
               action: STATE_SET "pressed" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "mouse,up,1";
               source: "songs";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "ejy,songs,show";
               source: "ejy";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
            program {
               signal: "ejy,songs,hide";
               source: "ejy";
               action: STATE_SET "default" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
         }

         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "back";
                  relative: 1.0 0.0;
                  offset: 20 8;
               }
               rel2 {
                  to_x: "songs";
                  relative: 0.0 0.0;
                  offset: -21 25;
               }
               color: 255 255 255 255;
               text {
                  font: "Sans:style=Bold";
                  size: 14;
                  min: 0 1;
                  text: "title";
               }
            }
         }
      }
   }

   group {
      name: "page/songs-album";
      images {
         image: "back-button.png" COMP;
         image: "songs-button.png" COMP;
         image: "top_bg.png" COMP;
      }
      data {
         item: "homogeneous" "1";
         item: "cover_size" "128";
      }
      parts {
         part {
            name: "ejy.swallow.list";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "ejy.swallow.cover";
                  relative: 0.0 1.0;
                  offset: 0 10;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "ejy.swallow.index";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "ejy.swallow.list";
               rel2.to: "ejy.swallow.list";
            }
         }

         part {
            name: "title.bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel2 {
                  to_y: "ejy.text.title";
                  offset: -1 8;
               }
               image {
                  normal: "top_bg.png";
                  border: 0 0 0 1;
               }
            }
         }

         part {
            name: "back-button-text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "back_clipper";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  to_y: "ejy.text.title";
                  to_x: "back-arrow";
                  relative: 0.0 0.0;
                  offset: 24 0;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  to_x: "back-arrow";
                  relative: 0.0 1.0;
                  offset: 51 -1;
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  text: "Back";
                  min: 1 1;
                  align: 0.0 0.5;
               }
            }
         }
         part {
            name: "back-arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "back_clipper";
            description {
               state: "default" 0.0;
               min: 13 16;
               max: 13 16;
               fixed: 1 1;
               rel1 {
                  to_y: "back";
                  relative: 0.0 0.0;
                  offset: 14 0;
               }
               rel2 {
                  to_y: "back";
                  relative: 0.0 1.0;
                  offset: 14 -1;
               }
               image.normal: "back-button.png";
            }
         }
         part {
            name: "back_clipper";
            type: RECT;
            description {
               state: "default" 0.0;
            }
            description {
               state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "back";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel2 {
                  to_x: "back-button-text";
                  to_y: "title.bg";
               }
            }
         }
         programs {
            program {
               signal: "mouse,clicked,1";
               source: "back";
               action: SIGNAL_EMIT "ejy,back,clicked" "ejy";
            }
            program {
               signal: "mouse,down,1";
               source: "back";
               action: STATE_SET "pressed" 0.0;
               target: "back_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "mouse,up,1";
               source: "back";
               action: STATE_SET "visible" 0.0;
               target: "back_clipper";
               transition: ACCELERATE 0.2;
            }
         }

         part {
            name: "songs-button-text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 0.0;
                  offset: -51 -1;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  to_x: "songs-arrow";
                  relative: 0.0 1.0;
                  offset: -11 -1;
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  text: "Playing";
                  min: 1 1;
                  align: 1.0 0.5;
               }
            }
         }
         part {
            name: "songs-arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "songs_clipper";
            description {
               state: "default" 0.0;
               min: 13 16;
               max: 13 16;
               fixed: 1 1;
               rel1 {
                  to_y: "songs";
                  relative: 1.0 0.0;
                  offset: -15 0;
               }
               rel2 {
                  to_y: "songs";
                  relative: 1.0 1.0;
                  offset: -15 -1;
               }
               image.normal: "songs-button.png";
            }
         }
         part {
            name: "songs_clipper";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1.to: "songs";
               rel2.to: "songs";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
            description {
               state: "pressed" 0.0;
               inherit: "visible" 0.0;
               color: 255 255 255 128;
               visible: 1;
            }
         }
         part {
            name: "songs";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2.to_y: "title.bg";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  to_x: "songs-button-text";
                  relative: 0.0 0.0; /* reset inherited from "default" 0.0 */
                  offset: 0 0;
               }
               rel2.to_y: "title.bg";
            }
         }
         programs {
            program {
               signal: "mouse,clicked,1";
               source: "songs";
               action: SIGNAL_EMIT "ejy,songs,clicked" "ejy";
            }
            program {
               signal: "mouse,down,1";
               source: "songs";
               action: STATE_SET "pressed" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "mouse,up,1";
               source: "songs";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               transition: ACCELERATE 0.2;
            }
            program {
               signal: "ejy,songs,show";
               source: "ejy";
               action: STATE_SET "visible" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
            program {
               signal: "ejy,songs,hide";
               source: "ejy";
               action: STATE_SET "default" 0.0;
               target: "songs_clipper";
               target: "songs";
            }
         }

         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "back";
                  relative: 1.0 0.0;
                  offset: 20 8;
               }
               rel2 {
                  to_x: "songs";
                  relative: 0.0 0.0;
                  offset: -21 25;
               }
               color: 255 255 255 255;
               text {
                  font: "Sans:style=Bold";
                  size: 14;
                  min: 0 1;
                  text: "title";
               }
            }
         }

         part {
            name: "ejy.swallow.cover";
            type: SWALLOW;
            description {
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               state: "default" 0.0;
               rel1 {
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 26 10;
               }
               rel2 {
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 153 137;
               }
            }
         }

         part {
            name: "infoarea";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  to: "ejy.swallow.cover";
                  relative: 1.0 0.0;
                  offset: 20 0;
               }
               rel2 {
                  to_y: "ejy.swallow.cover";
                  relative: 1.0 1.0;
                  offset: -27 -1;
               }
            }
         }

         part {
            name: "ejy.text.album";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "infoarea";
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 1.0;
               fixed: 1 1;
               rel1 {
                  to: "infoarea";
                  relative: 0.0 0.0;
                  offset: 0 5;
               }
               rel2 {
                  to: "infoarea";
                  relative: 1.0 0.5;
                  offset: -1 -5;
               }
               text {
                  font: "Sans:style=Bold";
                  align: 0.0 1.0;
                  size: 18;
                  fit: 1 1;
                  text: "";
               }
            }
         }

         part {
            name: "ejy.text.artist";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            clip_to: "infoarea";
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to: "infoarea";
                  relative: 0.0 0.5;
                  offset: 0 5;
               }
               rel2 {
                  to: "infoarea";
                  relative: 1.0 0.5;
                  offset: -1 5;
               }
               text {
                  font: "Sans";
                  align: 0.0 0.0;
                  size: 14;
                  min: 0 1;
                  text: "";
               }
            }
         }
      }
   }
   group {
      name: "nowplaying";
      script {
         public cur_length;
         public mute;

         public get_time_str(Float:time, time_str[6])
         {
            if (round(time) % 60 < 10)
               snprintf(time_str, 6, "%d:0%d", round(time) / 60, round(time) % 60);
            else
               snprintf(time_str, 6, "%d:%d", round(time) / 60, round(time) % 60);
         }
         public message(Msg_Type:type, id, ...){
            if (type == MSG_FLOAT_SET && id == MSG_POSITION) {
               new Float:position = getfarg(2);
               new Float:length = getfarg(3);
               if (length > 0)
                  external_param_set_float(PART:"progress.slider", "value", position / length * 100);
               else
                  external_param_set_float(PART:"progress.slider", "value", 0);

               new time_str[6];
               get_time_str(position, time_str);
               set_text(PART:"ejy.text.current_time", time_str);
               get_time_str(length, time_str);
               set_text(PART:"ejy.text.total_time", time_str);
               set_float(cur_length, length);
            } else if (type == MSG_INT && id == MSG_SHUFFLE) {
               external_param_set_bool(PART:"buttons.shuffle", "state", getarg(2));
            } else if (type == MSG_INT && id == MSG_LOOP) {
               external_param_set_bool(PART:"buttons.repeat", "state", getarg(2));
            }
         }
      }
      parts {
         images {
            image: "main.png" COMP;
            image: "menu_separation.png" COMP;
            image: "base.png" COMP;
            image: "bottom_bg.png" COMP;
            image: "sound_max.png" COMP;
            image: "sound_min.png" COMP;
            image: "sound_mute.png" COMP;
         }
         part {
            name: "title.bg";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "main.png";
               rel2 {
                  to_y: "stars.slider";
                  offset: -1 5;
               }
            }
         }
         part {
            name: "buttons.bg";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               align: 0.5 0.0;
               min: 0 50;
               rel1 {
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to_y: "buttons.shuffle";
                  relative: 1.0 1.0;
                  offset: 0 5;
               }
            }
         }
         part {
            name: "cover.bg";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               rel1.to_y: "buttons.bg";
               rel2.to_y: "volume.bg";
            }
         }
         part {
            name: "volume.bg";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               min: 0 50;
               image.normal: "main.png";
               rel1 {
                  to_y: "volume.slider";
                  offset: 0 -4;
               }
            }
         }

         part {
            name: "title.separator";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "menu_separation.png";
               rel1 {
                  to: "title.bg";
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  to: "title.bg";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "volume.separator";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "menu_separation.png";
               rel1 {
                  to: "volume.bg";
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "volume.bg";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
            }
         }

         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               rel1.offset: 26 8;
               rel2 {
                  relative: 1.0 0.0;
                  offset: -27 25;
               }
               color: 255 255 255 255;
               text {
                  font: "Sans:style=Bold";
                  size: 14;
                  min: 0 1;
                  text: "title";
               }
            }
         }

         part {
            name: "ejy.text.current_time";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  to: "progress.slider";
                  relative: 0.0 1.0;
                  offset: 14 0;
               }
               rel2 {
                  to: "progress.slider";
                  relative: 0.0 1.0;
                  offset: 14 0;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 12;
                  min: 1 1;
                  align: 0.0 0.0;
                  text: "0:00";
               }
            }
         }
         part {
            name: "ejy.text.total_time";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 1.0 0.0;
               fixed: 1 0;
               rel1 {
                  to: "progress.slider";
                  relative: 1.0 1.0;
                  offset: -14 0;
               }
               rel2 {
                  to: "progress.slider";
                  relative: 1.0 1.0;
                  offset: -14 0;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 12;
                  min: 1 1;
                  align: 0.0 0.0;
                  text: "0:00";
               }
            }
         }
         part {
            name: "progress.slider";
            type: EXTERNAL;
            source: "elm/slider";
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "ejy.text.title";
                  relative: 0.0 1.0;
                  offset: 40 20;
               }
               rel2 {
                  to_y: "ejy.text.title";
                  relative: 1.0 1.0;
                  offset: -40 20;
               }
               params.double: "min" 0.0;
               params.double: "max" 100.0;
               params.double: "value" 0.0;
            }
         }

         part { /* TODO: make slider able to do this rating */
            name: "stars.slider";
            type: GROUP;
            source: "group_rating_stars";
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               rel1 {
                  to_y: "progress.slider";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to_y: "progress.slider";
                  relative: 1.0 1.0;
                  offset: 0 RATING_STARS_HEIGHT;
               }
            }
         }

         part {
            name: "buttons.separator";
            type: IMAGE;
            description {
               state: "default" 0.0;
               min: 0 4;
               max: 99999 4;
               rel1 {
                  to: "buttons.bg";
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  to: "buttons.bg";
                  relative: 1.0 1.0;
                  offset: -1 3;
               }
               image.normal: "base.png";
            }
         }
         part {
            name: "buttons.repeat";
            type: EXTERNAL;
            source: "elm/toggle";
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  to_x: "ejy.text.current_time";
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 0 5;
               }
               rel2 {
                  to_x: "ejy.text.current_time";
                  to_y: "title.bg";
                  relative: 0.0 1.0;
                  offset: 150 5;
               }
               params.string: "label on" "Repeat ON";
               params.string: "label off" "Repeat OFF";
            }
         }
         part {
            name: "buttons.shuffle";
            type: EXTERNAL;
            source: "elm/toggle";
            description {
               state: "default" 0.0;
               align: 1.0 0.0;
               rel1 {
                  to_x: "ejy.text.total_time";
                  to_y: "title.bg";
                  relative: 1.0 1.0;
                  offset: -150 5;
               }
               rel2 {
                  to_x: "ejy.text.total_time";
                  to_y: "title.bg";
                  relative: 1.0 1.0;
                  offset: -1 5;
               }
               params.string: "label on" "Shuffle ON";
               params.string: "label off" "Shuffle OFF";
            }
         }

         part {
            name: "cover.clip";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "buttons.separator";
                  relative: 0.0 1.0;
                  offset: 0 1;
               }
               rel2 {
                  to_y: "volume.separator";
                  relative: 1.0 0.0;
                  offset: -1 -2;
               }
            }
         }
         part {
            name: "ejy.swallow.cover";
            type: SWALLOW;
            clip_to: "cover.clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect_preference: BOTH;
               rel1.to: "cover.clip";
               rel2.to: "cover.clip";
            }
         }

         part {
            name: "volume.min";
            type: IMAGE;
            description {
               image.normal: "sound_min.png";
               aspect_preference: BOTH;
               aspect: 1.133 1.0;
               min: 34 30;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1 {
                  to_y: "volume.bg";
                  offset: 10 10;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 75 -11;
               }
            }
         }
         part {
            name: "volume.mute";
            type: IMAGE;
            description {
               image.normal: "sound_mute.png";
               color: 255 255 255 0;
               fixed: 1 1;
               visible: 0;
               rel1.to: "volume.min";
               rel2.to: "volume.min";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }

         part {
            name: "volume.slider";
            type: EXTERNAL;
            source: "elm/slider";
            description {
               align: 0.5 1.0;
               fixed: 1 0;
               rel1 {
                  to_x: "volume.min";
                  relative: 1.0 1.0;
                  offset: 5 -1;
               }
               rel2 {
                  to_x: "volume.max";
                  relative: 0.0 1.0;
                  offset: -6 -5;
               }
               params.double: "min" 0.0;
               params.double: "max" 100.0;
               params.double: "value" 80.0;
            }
         }

         part {
            name: "volume.max";
            type: IMAGE;
            mouse_events: 0;
            description {
               image.normal: "sound_max.png";
               aspect_preference: BOTH;
               aspect: 1.133 1.0;
               fixed: 1 1;
               min: 34 30;
               align: 1.0 0.5;
               rel1 {
                  to_y: "volume.bg";
                  relative: 1.0 0.0;
                  offset: -76 10;
               }
               rel2.offset: -11 -11;
            }
         }
      }
      programs {
         program {
            name: "buttons.shuffle,changed";
            source: "buttons.shuffle";
            signal: "changed";
            script {
               if (external_param_get_bool(PART:"buttons.shuffle", "state"))
                  emit("ejy,shuffle,on", "ejy");
               else
                  emit("ejy,shuffle,off", "ejy");
            }
         }
         program {
            name: "buttons.repeat,changed";
            source: "buttons.repeat";
            signal: "changed";
            script {
               if (external_param_get_bool(PART:"buttons.repeat", "state"))
                  emit("ejy,repeat,on", "ejy");
               else
                  emit("ejy,repeat,off", "ejy");
            }
         }
         program {
            name: "ejy,progress,changed";
            source: "progress.slider";
            signal: "changed";
            script {
               send_message(MSG_FLOAT, MSG_POSITION, (external_param_get_float(PART:"progress.slider", "value") * get_float(cur_length) / 100));
            }
         }
         program {
            name: "volume.slider,changed";
            source: "volume.slider";
            signal: "changed";
            script {
               send_message(MSG_FLOAT, MSG_VOLUME, (external_param_get_float(PART:"volume.slider", "value") / 100));
            }
         }
         program {
            name: "volume.slider,drag,stop";
            source: "volume.slider";
            signal: "slider,drag,stop";
            script {
               run_program(PROGRAM:"volume,unmute");
            }
         }
         program {
            name: "volume,mute";
            source: "volume.min";
            signal: "mouse,clicked,1";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.1;
            target: "volume.mute";
            after: "volume,mute,2";
         }
         program {
            name: "volume,mute,2";
            script {
               send_message(MSG_INT, MSG_MUTE, 1);
            }
         }

         program {
            name: "volume,unmute";
            source: "volume.mute";
            signal: "mouse,clicked,1";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "volume.mute";
            after: "volume,unmute,2";
         }
         program {
            name: "volume,unmute,2";
            script {
               send_message(MSG_INT, MSG_MUTE, 0);
            }
         }
      }
   }
   /* All Songs */
   group { name: "elm/genlist/item_compress/song/default";
      alias: "elm/genlist/item_compress_odd/song/default";
      data.item: "labels" "ejy.text.title ejy.text.album-artist";
      parts {
         images.image: "list-highlight.png" COMP;
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "elm.swallow.pad";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -5;
               }
            }
         }
         part {
            name: "bg";
            type: IMAGE;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               image {
                  normal: "list-highlight.png";
                  border: 0 0 4 4;
               }
               rel1 {
                  to_y: "ejy.text.title";
                  offset: 0 -8;
               }
               rel2 {
                  to_y: "ejy.text.album-artist";
                  offset: -10 7;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 26 8;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -27 4;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
         }

         part {
            name: "ejy.text.album-artist";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 140 140 140 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  to_y: "ejy.text.title";
                  relative: 0.0 1.0;
                  offset: 26 2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -27 -9;
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
                  text: "";
               }
            }
         }
      }
      programs {
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "bg";
            }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target:  "bg";
         }
      }
   }

   /* Songs */
   group { name: "elm/genlist/item_compress/song-album/default";
      alias: "elm/genlist/item_compress_odd/song-album/default";
      data {
         item: "labels" "ejy.text.title ejy.text.trackno ejy.text.length";
         item: "states" "ejy.state.trackno";
      }
      parts {
         images.image: "list-highlight.png" COMP;
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "elm.swallow.pad";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -5;
               }
            }
         }
         part {
            name: "bg";
            type: IMAGE;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               image {
                  normal: "list-highlight.png";
                  border: 0 0 4 4;
               }
               rel1 {
                  to_y: "ejy.text.title";
                  relative: 0.0 0.0;
                  offset: 0 -8;
               }
               rel2 {
                  to_y: "ejy.text.length";
                  relative: 1.0 1.0;
                  offset: -10 7;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ejy.text.trackno";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 15 7;
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: 30 7;
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 1.0 0.0;
               }
            }
         }
         part {
            name: "dot";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 {
                  to_x: "ejy.text.trackno";
                  relative: 1.0 0.0;
                  offset: 1 7;
               }
               rel2 {
                  to_x: "ejy.text.trackno";
                  relative: 1.0 0.0;
                  offset: 1 7;

               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.0;
                  text: ".";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               signal: "elm,state,ejy.state.trackno,active";
               source: "elm";
               action: STATE_SET "visible" 0.0;
               target: "dot";
            }
         }

         part {
            name: "ejy.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  to_x: "dot";
                  relative: 1.0 0.0;
                  offset: 5 7;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -10 7;
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
         }
         part {
            name: "ejy.text.length";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 130 130 130 255;
               fixed: 1 0;
               rel1 {
                  to: "ejy.text.title";
                  relative: 0.0 1.0;
                  offset: 0 5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -10 -3;
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
                  text: "";
               }
            }
         }
      }
      programs {
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "bg";
         }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target:  "bg";
         }
      }
   }

   group { name: "elm/genlist/item_compress/root/default";
      alias: "elm/genlist/item_compress_odd/root/default";
      alias: "elm/genlist/item_compress/nameid/default";
      alias: "elm/genlist/item_compress_odd/nameid/default";
      data.item: "labels" "ejy.text.title";
      parts {
          images.image: "list-highlight.png" COMP;
          part {
             name: "events";
             type: RECT;
             description {
                state: "default" 0.0;
                color: 0 0 0 0;
             }
          }
          part {
             name: "elm.swallow.pad";
             type: SWALLOW;
             mouse_events: 0;
             description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -5;
               }
             }
          }
          part {
             name: "bg";
             type: IMAGE;
             mouse_events: 0;
             description {
                state: "default" 0.0;
                visible: 0;
                color: 255 255 255 0;
                rel1 {
                   to_y: "ejy.text.title";
                   offset: 0 -8;
                }
                rel2 {
                   to_y: "ejy.text.title";
                   offset: -10 7;
                }
                image {
                   normal: "list-highlight.png";
                   border: 0 0 4 4;
                }
             }
             description {
                state: "selected" 0.0;
                inherit: "default" 0.0;
                color: 255 255 255 255;
                visible: 1;
             }
          }
          part {
             name: "ejy.text.title";
             type: TEXT;
             scale: 1;
             mouse_events: 0;
             description {
                state: "default" 0.0;
                color: 255 255 255 255;
                align: 0.0 0.5;
                fixed: 1 0;
                min: 0 30;
                rel1 {
                   relative: 0.0 0.0;
                   offset: 26 4;
                }
                rel2 {
                   relative: 1.0 1.0;
                   offset: -27 -5;
                }
                text {
                   font: "Sans";
                   size: 10;
                   min: 0 1;
                   align: 0.0 0.5;
                }
             }
          }
      }
      programs {
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "ejy.text.title";
            target:  "bg";
         }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target:  "ejy.text.title";
            target:  "bg";
         }
      }
   }

   group { name: "elm/genlist/item_compress/album-artist/default";
      alias: "elm/genlist/item_compress_odd/album-artist/default";
      alias: "elm/genlist/item_compress/all-song/default";
      alias: "elm/genlist/item_compress_odd/all-song/default";
      alias: "elm/genlist/item_compress/album/default";
      alias: "elm/genlist/item_compress_odd/album/default";
      data {
         item: "labels" "ejy.text.album ejy.text.artist";
         item: "icons" "ejy.swallow.cover";
         item: "icon_size" "68";
      }
      parts {
         images.image: "list-highlight.png" COMP;
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "elm.swallow.pad";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -5;
               }
            }
         }
         part {
            name: "bg";
            type: IMAGE;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               visible: 0;
               image {
                  normal: "list-highlight.png";
                  border: 0 0 4 4;
               }
               rel1 {
                  to_x: "ejy.swallow.cover";
                  to_y: "ejy.text.album";
                  relative: 1.0 0.0;
                  offset: 0 -14;
               }
               rel2 {
                  to_y: "ejy.text.artist";
                  offset: -10 15;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "cover.bg";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 66 66 66 255;
               rel1 {
                  to: "ejy.swallow.cover";
                  offset: -1 -1;
               }
               rel2 {
                  to: "ejy.swallow.cover";
                  offset: 0 0;
               }
            }
         }
         part {
            name: "ejy.swallow.cover";
            type: SWALLOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 68 68;
               max: 68 68;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 26 8;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 94 -9;
               }
            }
         }
         part {
            name: "ejy.text.album";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 210 210 210 255;
               align: 0.0 1.0;
               fixed: 1 0;
               rel1 {
                  to_x: "ejy.swallow.cover";
                  relative: 1.0 0.5;
                  offset: 21 -1;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -11 -1;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 0 1;
                  align: 0.0 1.0;
               }
            }
         }
         part {
            name: "ejy.text.artist";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 112 112 112 255;
               align: 0.0 0.0;
               fixed: 1 0;
               rel1 {
                  to_x: "ejy.swallow.cover";
                  relative: 1.0 0.5;
                  offset: 21 1;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -11 1;
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
                  text: "";
               }
            }
         }
      }
      programs {
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "ejy.text.album";
            target:  "bg";
         }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target:  "ejy.text.album";
            target:  "bg";
         }
      }
   }
   /*
    * TODO: taken from eve edc but not perfect yet
    * Add fade effects for show and hide signals
    */
group { name: "elm/scroller/base/enjoy";
   alias: "elm/genlist/base/enjoy";
    alias: "elm/list/base/enjoy";
    alias: "elm/genlist/base/enjoy";
    alias: "elm/carousel/base/enjoy";
    alias: "elm/gengrid/base/enjoy";
    images {
       image: "scrollbar-knob.png" COMP;
       image: "scrollbar-bg.png" COMP;
    }
    script {
       public sbvis_v, sbvis_h, sbalways_v, sbalways_h;
    }
    parts {
       part { name: "bg";
          type: RECT;
          description { state: "default" 0.0;
             //rel1.offset: 1 1;
             //rel2.offset: -2 -2;
             color: 0 0 0 0;
          }
       }
       part { name: "clipper";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "bg";
             rel2.to: "bg";
          }
       }
       part { name: "elm.swallow.content";
          clip_to: "clipper";
          type: SWALLOW;
          description { state: "default" 0.0;
             //rel1.offset: 1 1;
             //rel2.offset: -2 -2;
          }
       }
       part { name: "conf_over";
          mouse_events:  0;
          description { state: "default" 0.0;
             rel1.offset: 0 0;
             rel2.offset: -1 -1;
          }
       }
       part { name: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar_clip";
          clip_to: "sb_vbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_vbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 2 32;
             align: 1.0 0.0;
             rel1 {
                relative: 1.0 0.0;
                offset:   -8 25;
             }
             rel2 {
                relative: 1.0 0.0;
                offset:   -7 -7;
                to_y:     "sb_hbar";
             }
          }
       }
       part { name: "sb_vbar_runner";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 3 99999;
             rel1.to:       "sb_vbar";
             rel2.to:       "sb_vbar";
             fixed: 1 1;
          }
       }
       part { name: "vknob-bg";
          type: IMAGE;
          mouse_events: 0;
          clip_to: sb_vbar_clip;
          description { state: "default" 0.0;
            image.normal: "scrollbar-bg.png";
            image.border: 1 1 3 2;
            max: 3 99999;
            rel1 {
            	relative: 1.0 0.0;
            	offset: -10 25;
            }
            rel2 {
            	relative: 1.0 1.0;
            	offset: -6 -25;
            }
          }
       }
       part { name: "elm.dragable.vbar";
          clip_to: "sb_vbar_clip";
          mouse_events: 0;
          dragable {
             x: 0 0 0;
             y: 1 1 0;
             confine: "sb_vbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 2 12;
             rel1 {
                relative: 1.0  0.5;
                offset:   -3    0;
                to: "sb_vbar";
             }
             rel2 {
                relative: 1.0  0.5;
                offset:   -1    0;
                to: "sb_vbar";
             }
             image {
                normal: "scrollbar-knob.png";
             }
          }
       }
       part { name: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar_clip";
          clip_to: "sb_hbar_clip_master";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
          }
          description { state: "hidden" 0.0;
             visible: 0;
             color: 255 255 255 0;
          }
       }
       part { name: "sb_hbar";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             visible: 0;
             min: 17 17;
             align: 0.0 1.0;
             rel1 {
                relative: 0.0 1.0;
                offset:   0 -2;
             }
             rel2 {
                relative: 0.0 1.0;
                offset:   -1 -2;
                to_x:     "sb_vbar";
             }
          }
       }
       part { name: "sb_hbar_runner";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             min: 3 3;
             max: 99999 3;
             rel1.to:       "sb_hbar";
             rel2.to:       "sb_hbar";
          }
       }
       part { name: "elm.dragable.hbar";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          dragable {
             x: 1 1 0;
             y: 0 0 0;
             confine: "sb_hbar";
          }
          description { state: "default" 0.0;
             fixed: 1 1;
             min: 17 17;
             rel1 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
             rel2 {
                relative: 0.5  0.5;
                offset:   0    0;
                to: "sb_hbar";
             }
          }
       }
       part { name: "sb_hbar_over1";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.relative: 1.0 0.5;
             rel2.to: "elm.dragable.hbar";
          }
       }
       part { name: "sb_hbar_over2";
          clip_to: "sb_hbar_clip";
          mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
          }
       }
    }
    programs {
       program { name: "load";
          signal: "load";
          source: "";
          script {
             set_state(PART:"sb_hbar_clip", "hidden", 0.0);
             set_state(PART:"sb_vbar_clip", "hidden", 0.0);
             set_int(sbvis_h, 0);
             set_int(sbalways_v, 0);
             set_int(sbalways_h, 0);

             emit("do-show-vbar", "");
             set_int(sbvis_v, 1);
          }
       }

       program { name: "vbar_show";
          signal: "elm,action,show,vbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_hide";
          signal: "elm,action,hide,vbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_vbar_clip_master";
       }
       program { name: "vbar_show_always";
          signal: "elm,action,show_always,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_v);
             v |= get_int(sbalways_v);
             if (!v) {
                set_int(sbalways_v, 1);
                emit("do-show-vbar", "");
                set_int(sbvis_v, 1);
             }
          }
       }
       program { name: "vbar_show_notalways";
          signal: "elm,action,show_notalways,vbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_v);
             if (v) {
                set_int(sbalways_v, 0);
                v = get_int(sbvis_v);
                if (!v) {
                   emit("do-hide-vbar", "");
                   set_int(sbvis_v, 0);
                }
             }
          }
       }
       program { name: "sb_vbar_show";
          signal: "do-show-vbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }
       program { name: "sb_vbar_hide";
          signal: "do-hide-vbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_vbar_clip";
       }

       program { name: "hbar_show";
          signal: "elm,action,show,hbar";
          source: "elm";
          action:  STATE_SET "default" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_hide";
          signal: "elm,action,hide,hbar";
          source: "elm";
          action:  STATE_SET "hidden" 0.0;
          target: "sb_hbar_clip_master";
       }
       program { name: "hbar_show_always";
          signal: "elm,action,show_always,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbvis_h);
             v |= get_int(sbalways_h);
             if (!v) {
                set_int(sbalways_h, 1);
                emit("do-show-hbar", "");
                set_int(sbvis_h, 1);
             }
          }
       }
       program { name: "hbar_show_notalways";
          signal: "elm,action,show_notalways,hbar";
          source: "elm";
          script {
             new v;
             v = get_int(sbalways_h);
             if (v) {
                set_int(sbalways_h, 0);
                v = get_int(sbvis_h);
                if (!v) {
                   emit("do-hide-hbar", "");
                   set_int(sbvis_h, 0);
                }
             }
          }
       }
       program { name: "sb_hbar_show";
          signal: "do-show-hbar";
          source: "";
          action:  STATE_SET "default" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
       program { name: "sb_hbar_hide";
          signal: "do-hide-hbar";
          source: "";
          action:  STATE_SET "hidden" 0.0;
          transition: LINEAR 1.0;
          target: "sb_hbar_clip";
       }
    }
 }


   group { name: "elm/pager/base/default";
      data.item: "onshow" "raise";
      parts {
         part { name: "clip";
            type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
                  offset: -9999 -9999;
               }
	       rel2 {
                  to: "base";
                  offset: 9999 9999;
               }
               color: 255 255 255 255;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
	    }
	 }
	 part { name: "base";
	    mouse_events:  0;
            clip_to: "clip";
	    description { state: "default" 0.0; }
	    description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
	    }
	 }
	 part { name: "elm.swallow.content";
	    type: SWALLOW;
            clip_to: "clip";
	    description { state: "default" 0.0;
	       rel1 {
                  to: "base";
                  offset: 0 0;
               }
	       rel2 {
                  to: "base";
                  offset: -1 -1;
               }
	    }
	 }
      }
      programs {
	 program { name: "push_start";
	    signal: "elm,action,push";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }
         program { name: "show_start";
	    signal: "elm,action,show";
	    source: "elm";
	    action:  STATE_SET "hidden" 0.0;
	    target: "base";
	    target: "clip";
            after: "show_start2";
	 }
         program { name: "show_start2";
	    action:  STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
	    target: "base";
	    target: "clip";
            after: "show_end";
	 }
         program { name: "show_end";
            action: SIGNAL_EMIT "elm,action,show,finished" "";
	 }
         program { name: "pop_start";
	    signal: "elm,action,pop";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }
         program { name: "hide_start";
	    signal: "elm,action,hide";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "base";
	    target: "clip";
            after: "hide_start2";
	 }
         program { name: "hide_start2";
	    action:  STATE_SET "hidden" 0.0;
            transition: DECELERATE 0.5;
	    target: "base";
	    target: "clip";
            after: "hide_end";
	 }
         program { name: "hide_end";
            action: SIGNAL_EMIT "elm,action,hide,finished" "";
	 }
         program { name: "reset";
	    signal: "elm,action,reset";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "base";
	    target: "clip";
	 }
      }
   }
   group { name: "elm/toggle/base/default";
      images {
         image: "toggle_bg.png" COMP;
         image: "toggle_on.png" COMP;
         image: "toggle_off.png" COMP;
      }
      parts {
         part { name: "bg";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel1.offset: -4 3;
               rel2.offset: -4 -4;
               align: 1.0 0.5;
               min: 130 30;
               max: 130 30;
               fixed: 1 1;
               image {
                  normal: "toggle_bg.png";
                  border: 3 3 3 3;
               }
            }
         }
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "bg";
                  offset: 2 2;
               }
               rel2 {
                  to: "bg";
                  offset: -3 -3;
               }
               color: 255 255 255 255;
            }
         }
         part { name: "button";
            type: RECT;
            scale: 1;
            clip_to: "clipper";
            mouse_events: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "bg";
               rel2.to: "bg";
               min: 30 30;
               max: 30 30;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
            }
         }
         part { name: "button_events";
            type: RECT;
            dragable {
               events: "button";
            }
            description { state: "default" 0.0;
               rel1.to_x: "bg";
               rel1.offset: 0 0;
               rel1.relative: 0.0 0.0;
               rel2.to_x: "bg";
               rel2.offset: -1 -1;
               rel2.relative: 1.0 1.0;
               color: 0 0 0 0;
            }
         }
         part { name: "bg2";
            type: IMAGE;
            clip_to: "disable_clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               image {
                  normal: "toggle_off.png";
                  border: 2 16 9 9;
               }
               rel1 {
                  to: "bg";
                  offset: 3 3;
               }
               rel2 {
                  to_x: "button";
                  to_y: "bg";
                  relative: 1.0 1.0;
                  offset: -4 -4;
               }
               align: 0.0 0.5;
               fixed: 1 0;
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "toggle_on.png";
                  border: 2 11 9 9;
               }
            }
         }
         part { name: "onrect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "bg2";
               rel2 {
                  to: "bg2";
                  offset: -17 -1;
               }
               min: 106 0;
               max: 106 99999;
               align: 1.0 0.5;
               color: 0 0 0 0;
               visible: 0;
            }
         }
         part { name: "offrect";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
            color: 255 0 0 255;
               fixed: 1 1;
               rel1 {
                  to: "bg2";
                  relative: 1.0 0.0;
               }
               rel2.to: "bg2";
               min: 104 0;
               max: 104 99999;
               align: 0.0 0.5;
               color: 0 0 0 0;
               visible: 0;
            }
         }
         part { name: "elm.offtext";
            type: TEXT;
            scale: 1;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to_x: "offrect";
               rel2.to_x: "offrect";
               color_class: "toggle_text_off";
               text {
                  font:     "Sans,Edje-Vera";
                  size:     12;
                  min:      0 1;
                  align:    0.5 0.5;
                  text:     "OFF";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "toggle_text_off_disabled";
            }
         }
         part { name: "elm.ontext";
            type: TEXT;
            scale: 1;
            mouse_events:  0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to_x: "onrect";
               rel1.offset: 1 1;
               rel2.to_x: "onrect";
               rel2.offset: 0 0;
               color_class: "toggle_text_on";
               text {
                  font:     "Sans,Edje-Vera";
                  size:     12;
                  min:      0 1;
                  align:    0.5 0.5;
                  text:     "ON";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "toggle_text_on_disabled";
            }
         }
         part { name: "elm.swallow.content";
            clip_to: "disable_clipper";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               visible: 0;
               align: 0.0 0.5;
               rel1.offset: 4 4;
               rel2.relative: 0.0 1.0;
               rel2.offset: 3 -5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -5;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: 0 4;
               rel2.to_x: "bg";
               rel2.relative: 0.0 1.0;
               rel2.offset: -5 -5;
               color: 255 255 255 0;
               color_class: "toggle_text";
               text {
                  font: "Sans,Edje-Vera";
                  size: 12;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               text.min: 1 1;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               text.min: 1 1;
               color_class: "toggle_text_disabled";
            }
         }
         part { name: "disable_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "toggle_disable_clipper";
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name:   "drag_end";
            signal: "mouse,up,1";
            source: "button";
            script {
               new Float:dx, Float:dy;
               get_drag(PART:"button", dx, dy);
               if (dx > 0.5)
               {
                  set_drag(PART:"button", 1.0, 0.0);
                  emit("elm,action,toggle,on", "");
                  set_state(PART:"bg2", "on", 0.0);
               }
               else
               {
                  set_drag(PART:"button", 0.0, 0.0);
                  emit("elm,action,toggle,off", "");
                  set_state(PART:"bg2", "default", 0.0);
               }
            }
         }
         program { name: "toggle_on";
            signal: "elm,state,toggle,on";
            source: "elm";
            script {
               set_drag(PART:"button", 100.0, 0.0);
               set_state(PART:"bg2", "on", 0.0);
            }
         }
         program { name: "toggle_off";
            signal: "elm,state,toggle,off";
            source: "elm";
            script {
               set_drag(PART:"button", 0.0, 0.0);
               set_state(PART:"bg2", "default", 0.0);
            }
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.offtext";
            target: "elm.ontext";
            target: "disabler";
            target: "disable_clipper";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
               set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.offtext";
            target: "elm.ontext";
            target: "disabler";
            target: "disable_clipper";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
               else
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
      }
   }
   group { name: "elm/slider/horizontal/volume_disabled";
      images {
         image: "slider_horizontal_normal.png" COMP;
         image: "slider_horizontal_clicked.png" COMP;
         image: "slider_horizontal_indicator.png" COMP;
         image: "progress_horizontal_stroke.png" COMP;
         image: "progress_horizontal_fill_volume.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               min: 21 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
            }
         }
         part { name: "fill";
            mouse_events: 0;
            clip_to: "fill_clip";
            description { state: "default" 0.0;
               min: 0 2;
               max: 99999 2;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "progress_horizontal_fill_volume.png";
               fill.smooth: 1;
            }
         }
         part { name: "fill_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2 {
                  to_x: "elm.dragable.slider";
                  relative: 0.5 1.0;
                  offset: 0 -1;
               }
            }
         }
         part { name: "runner";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 4;
               max: 99999 4;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "progress_horizontal_stroke.png";
               fill.smooth: 1;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 24;
               max: 99999 24;
               align: 1.0 0.5;
               rel1 {
                  to_x: "elm.text";
                  relative: 1.0 0.0;
                  offset: 8 0;
               }
               rel2 {
                  to_x: "elm.units";
                  relative: 0.0 1.0;
                  offset: -10 -1;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 4 0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  offset: 3 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color_class: "slider_label";
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1.relative: 1.0 0.0;
               rel1.offset: 0 8;
               rel2.relative: 1.0 1.0;
               rel2.offset: 0 -9;
               color_class: "slider_units";
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "base";
            }
            description { state: "default" 0.0;
               min: 0 24;
               max: 0 24;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "base";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "base";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "indicator_bg";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 40 40;
               align: 0.5 1.0;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.indicator";
                  to_y: "elm.indicator";
                  relative: 0.0 0.0;
                  offset: -10 -10;
               }
               rel2 {
                  to_x: "elm.indicator";
                  to_y: "toggle";
                  relative: 1.0 0.0;
                  offset: 9 1;
               }
               image.normal: "slider_horizontal_indicator.png";
               image.border: 6 6 6 2;
            }
         }
         part { name: "toggle";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 16 21;
               max: 16 21;
               align: 0.5 1.0;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.dragable.slider";
                  to_y: "runner";
                  relative: 0.0 1.0;
                  offset: 0 6;
               }
               rel2 {
                  to_x: "elm.dragable.slider";
                  to_y: "runner";
                  relative: 1.0 1.0;
                  offset: -1 6;
               }
               image.normal: "slider_horizontal_normal.png";
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               min: 24 14;
               max: 24 14;
               image.normal: "slider_horizontal_clicked.png";
            }
         }
         part { name: "elm.indicator";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1 {
                  to_x: "elm.dragable.slider";
                  to_y: "button_events";
                  relative: 0.0 0.0;
                  offset: 0 -1;
               }
               rel2 {
                  to_x: "elm.dragable.slider";
                  to_y: "button_events";
                  relative: 1.0 0.0;
                  offset: -1 -1;
               }
               color_class: "slider_indicator";
               text {
                  font:     "Sans,Edje-Vera";
                  size:     10;
                  min:      0 0;
                  align:    0.5 1.0;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 -1;
               rel2.offset: -1 -1;
            }
         }
         part { name: "button_events";
            type: RECT;
            dragable {
               events: "elm.dragable.slider";
            }
            mouse_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 16 16;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to_x: "elm.dragable.slider";
               rel2.to_x: "elm.dragable.slider";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
         }
         //program { name: "invert_on";
         //   signal: "elm,state,inverted,on";
         //   source: "elm";
         //   action:  STATE_SET "inverted" 0.0;
         //   target: "level";
         //   target: "level2";
         //}
         //program { name: "invert_off";
         //   signal: "elm,state,inverted,off";
         //   source: "elm";
         //   action:  STATE_SET "default" 0.0;
         //   target: "level";
         //   target: "level2";
         //}
         program { name: "selected";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            action:  STATE_SET "selected" 0.0;
            target: "toggle";
            target: "indicator_bg";
            target: "elm.indicator";
         }
         program { name: "unselected";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            action:  STATE_SET "default" 0.0;
            target: "toggle";
            target: "indicator_bg";
            target: "elm.indicator";
         }
      }
   }
   group { name: "elm/slider/horizontal/default";
      images {
         image: "slider_horizontal_normal.png" COMP;
         image: "slider_horizontal_clicked.png" COMP;
         image: "slider_horizontal_indicator.png" COMP;
         image: "progress_horizontal_stroke.png" COMP;
         image: "progress_horizontal_fill.png" COMP;
      }
      parts {
         part { name: "base";
            type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               min: 21 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
            }
         }
         part { name: "fill";
            mouse_events: 0;
            clip_to: "fill_clip";
            description { state: "default" 0.0;
               min: 0 2;
               max: 99999 2;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "progress_horizontal_fill.png";
               fill.smooth: 1;
            }
         }
         part { name: "fill_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2 {
                  to_x: "elm.dragable.slider";
                  relative: 0.5 1.0;
                  offset: 0 -1;
               }
            }
         }
         part { name: "runner";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 4;
               max: 99999 4;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "progress_horizontal_stroke.png";
               fill.smooth: 1;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 24;
               max: 99999 24;
               align: 1.0 0.5;
               rel1 {
                  to_x: "elm.text";
                  relative: 1.0 0.0;
                  offset: 8 0;
               }
               rel2 {
                  to_x: "elm.units";
                  relative: 0.0 1.0;
                  offset: -10 -1;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 4 0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  offset: 3 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.content";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.content";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -5;
               color_class: "slider_label";
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1.relative: 1.0 0.0;
               rel1.offset: 0 8;
               rel2.relative: 1.0 1.0;
               rel2.offset: 0 -9;
               color_class: "slider_units";
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "base";
            }
            description { state: "default" 0.0;
               min: 0 24;
               max: 0 24;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "base";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "base";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "indicator_bg";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               min: 40 40;
               align: 0.5 1.0;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.indicator";
                  to_y: "elm.indicator";
                  relative: 0.0 0.0;
                  offset: -10 -10;
               }
               rel2 {
                  to_x: "elm.indicator";
                  to_y: "toggle";
                  relative: 1.0 0.0;
                  offset: 9 1;
               }
               image.normal: "slider_horizontal_indicator.png";
               image.border: 6 6 6 2;
            }
         }
         part { name: "toggle";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 16 21;
               max: 16 21;
               align: 0.5 1.0;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.dragable.slider";
                  to_y: "runner";
                  relative: 0.0 1.0;
                  offset: 0 6;
               }
               rel2 {
                  to_x: "elm.dragable.slider";
                  to_y: "runner";
                  relative: 1.0 1.0;
                  offset: -1 6;
               }
               image.normal: "slider_horizontal_normal.png";
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               min: 24 14;
               max: 24 14;
               image.normal: "slider_horizontal_clicked.png";
            }
         }
         part { name: "elm.indicator";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1 {
                  to_x: "elm.dragable.slider";
                  to_y: "button_events";
                  relative: 0.0 0.0;
                  offset: 0 -1;
               }
               rel2 {
                  to_x: "elm.dragable.slider";
                  to_y: "button_events";
                  relative: 1.0 0.0;
                  offset: -1 -1;
               }
               color_class: "slider_indicator";
               text {
                  font:     "Sans,Edje-Vera";
                  size:     10;
                  min:      0 0;
                  align:    0.5 1.0;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 -1;
               rel2.offset: -1 -1;
            }
         }
         part { name: "button_events";
            type: RECT;
            dragable {
               events: "elm.dragable.slider";
            }
            mouse_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 16 16;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to_x: "elm.dragable.slider";
               rel2.to_x: "elm.dragable.slider";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
         }
         //program { name: "invert_on";
         //   signal: "elm,state,inverted,on";
         //   source: "elm";
         //   action:  STATE_SET "inverted" 0.0;
         //   target: "level";
         //   target: "level2";
         //}
         //program { name: "invert_off";
         //   signal: "elm,state,inverted,off";
         //   source: "elm";
         //   action:  STATE_SET "default" 0.0;
         //   target: "level";
         //   target: "level2";
         //}
         program { name: "selected";
            signal: "mouse,down,*";
            source: "elm.dragable.slider";
            action:  STATE_SET "selected" 0.0;
            target: "toggle";
            target: "indicator_bg";
            target: "elm.indicator";
         }
         program { name: "unselected";
            signal: "mouse,up,*";
            source: "elm.dragable.slider";
            action:  STATE_SET "default" 0.0;
            target: "toggle";
            target: "indicator_bg";
            target: "elm.indicator";
         }
      }
   }
   group {
      name: "group_rating_stars";
      min: RATING_STARS_WIDTH RATING_STARS_HEIGHT;
      max: RATING_STARS_WIDTH RATING_STARS_HEIGHT;

      images {
         image: "rating_stars.png" COMP;
         image: "rating_stars_highlight.png" COMP;
      }
      script {
         public is_mouse_down = 0;
         public current_rating = -1;

         public recalc(part_name, knob) {
            new mx, my, ox, oy, ow, oh, res;
            new Float:p;

            get_mouse(mx, my);
            get_geometry(part_name, ox, oy, ow, oh);

            res = mx - ox;
            if (res > 0) {
               p = Float:res / Float:ow;
               set_drag(knob, p, 0.0);
            }
            else
               set_drag(knob, 0.0, 0.0);
         }
         public send_drag_signal() {
            new Float:dx;
            new Float:dy;
            new rating;
            get_drag(PART:"rect_rating_stars_knob", dx, dy);
            rating = round(dx * (RATING_STARS_COUNT + 1), FLOOR);
            if (rating > 5)
               rating = 5;
            if (get_int(current_rating) != rating)
            {
               send_message(MSG_INT, MSG_RATING, rating);
               set_int(current_rating, rating);
            }
         }
         public message(Msg_Type:type, id, ...){
            if (type == MSG_INT && id == MSG_RATING)
            {
               new rating = getarg(2);
               new Float:position;
               position = float_div(rating, RATING_STARS_COUNT);
               set_drag(PART:"rect_rating_stars_knob", position, 0.0);
            }
         }
      }
      parts {
         part {
            name: "img_rating_stars";
            type: IMAGE;
            mouse_events: 0;
            description {
               min: RATING_STARS_WIDTH RATING_STARS_HEIGHT;
               max: RATING_STARS_WIDTH RATING_STARS_HEIGHT;
               image.normal: "rating_stars.png";
            }
         }
         part {
            name: "img_rating_stars_highlight";
            type: IMAGE;
            clip_to: "rect_img_rating_stars_highlight";
            mouse_events: 0;

            description {
               image.normal: "rating_stars_highlight.png";
               min: RATING_STARS_WIDTH RATING_STARS_HEIGHT;
               max: RATING_STARS_WIDTH RATING_STARS_HEIGHT;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "rect_img_rating_stars_highlight";
            type: RECT;
            mouse_events: 0;

            description {
               step: RATING_STARS_STEP 0;
               rel1{
                  to: "img_rating_stars";
                  offset: 0 -1;
               }
               rel2 {
                  to: "rect_rating_stars_knob";
                  relative: 0.0 1.0;
                  offset: (RATING_STARS_STEP-5) 0;
               }
            }

            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "rect_rating_stars_knob_confine";
            type: RECT;
            mouse_events: 0;

            description {
               color: 255 255 255 0;
               rel1 {
                  to: "img_rating_stars";
                  offset: 60 0;
               }
               rel2 {
                  to: "img_rating_stars";
                  offset: -100 -1;
               }
            }
         }
         part {
            name: "rect_rating_stars_knob";
            type: RECT;
            mouse_events: 1;

            dragable {
               confine: "rect_rating_stars_knob_confine";
               x: 1 RATING_STARS_STEP 1;
               y: 0 0 0 ;
            }

            description {
               min: 10 RATING_STARS_HEIGHT;
               max: 10 RATING_STARS_HEIGHT;
               color: 255 255 0 0;
            }
         }
         part {
            name: "rect_rating_stars_knob_confine_area";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               rel1.to: "rect_rating_stars_knob_confine";
               rel2.to: "rect_rating_stars_knob_confine";
            }
         }
         programs {
            program {
               name: "rect_rating_stars_knob_confine_show";
               signal: "show";
               source: "*";
               script {
                  set_int(is_mouse_down, 0);
               }
            }
            program {
               name: "rect_rating_stars_knob_confine_clicked";
               signal: "mouse,clicked,1";
               source: "rect_rating_stars_knob_confine_area";
               script {
                  recalc(PART:"rect_rating_stars_knob_confine_area", PART:"rect_rating_stars_knob");
               }
            }
            program {
               name: "rect_rating_stars_knob_confine_down";
               signal: "mouse,down,1";
               source: "rect_rating_stars_knob_confine_area";
               script {
                  set_int(is_mouse_down, 1);
               }
            }
            program {
               name: "rect_rating_stars_knob_confine_up";
               signal: "mouse,up,1";
               source: "rect_rating_stars_knob_confine_area";
               script {
                  set_int(is_mouse_down, 0);
                  recalc(PART:"rect_rating_stars_knob_confine_area", PART:"rect_rating_stars_knob");
                  send_drag_signal()
               }
            }
            program {
               name: "rect_rating_stars_knob_confine_move";
               signal: "mouse,move";
               source: "rect_rating_stars_knob_confine_area";
               script {
                  if (get_int(is_mouse_down) == 1) {
                     recalc(PART:"rect_rating_stars_knob_confine_area", PART:"rect_rating_stars_knob");
                     send_drag_signal()
                  }
               }
            }
            program {
               name: knob"_drag_stop";
               signal: "drag,stop";
               source: "knob";
               script {
                  send_drag_signal()
               }
            }
        }
      }
   }
}
