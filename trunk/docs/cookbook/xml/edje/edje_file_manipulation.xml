<section>
<sectioninfo>
  <author>
    <firstname>dan</firstname>
    <surname>sinclair</surname>
    <email>zero@perplexity.org</email>
    <othername>'dj2'</othername>
  </author>
  <date>22 November 2004</date>
</sectioninfo>

<title>Recipe: Working with Edje files</title>
<para>
When your working with .edc files and .eet files you often need to transform
one into the other. In order to do this Edje provides a set of tools to
facilitate these transformations.
</para>

<para>
The available programs include:
<variablelist mark="bullet" spacing="compact">
 <varlistentry>
  <term>edje_cc</term>
  <listitem><para>Compile an EDC file, images and fonts into an EET file</para></listitem>
 </varlistentry>

 <varlistentry>
  <term>edje_decc</term>
  <listitem><para>De-compile an EET file back into its EDC file, images and fonts</para></listitem>
 </varlistentry>

 <varlistentry>
  <term>edje_recc</term>
  <listitem><para>Re-compile an EET file</para></listitem>
 </varlistentry>

 <varlistentry>
  <term>edje_ls</term>
  <listitem><para>List the groups in an EET file</para></listitem>
 </varlistentry>

 <varlistentry>
  <term>edje</term>
  <listitem><para>Display the groups in an EET file</para></listitem>
 </varlistentry>
</variablelist>
Each of these programs are discussed in more detail below.
</para>


<section>
<title>edje_cc</title>
<para>
<literal>edje_cc</literal> is one of the main Edje programs that you will be
using. It is responsible for the compilation of your EDC files, including
images and fonts, into there corresponding EET files.
</para>

<example>
<title>edje_cc Usage</title>
<screen>
  edje_cc [OPTIONS] input_file.edc [output_file.eet]
</screen>
</example>

<variablelist mark="bullet" spacing="compact">
  <title>Options</title>
  <varlistentry>
   <term>-id <emphasis>image/directory</emphasis></term>
   <listitem><para>Add a directory to look in for relative path images</para></listitem>
  </varlistentry>
  
  <varlistentry>
   <term>-fd <emphasis>font/directory</emphasis></term>
   <listitem><para>Add a directory to look in for relative path fonts</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-v</term>
   <listitem><para>Verbose output</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-lossy</term>
   <listitem><para>Do NOT allow images to be lossy</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-comp</term>
   <listitem><para>Do NOT allow images to be stored with lossless compression</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-raw</term>
   <listitem><para>Do NOT allow images to be stored with zero compression (raw)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-min-quality <emphasis>VAL</emphasis></term>
   <listitem><para>Do NOT allow lossy images with quality &lt; VAL (0-100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-max-quality <emphasis>VAL</emphasis></term>
   <listitem><para>Do NOT allow lossy images with quality &gt; VAL (0-100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-scale-lossy <emphasis>VAL</emphasis></term>
   <listitem><para>Scale lossy image pixels by this percentage factor (0 - 100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-scale-comp <emphasis>VAL</emphasis></term>
   <listitem><para>Scale lossless compressed image pixels by this percentage factor (0 - 100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-scale-raw <emphasis>VAL</emphasis></term>
   <listitem><para>Scale uncompressed (raw) image pixels by this percentage factor (0 - 100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-D<emphasis>define_val</emphasis>=<emphasis>to</emphasis></term>
   <listitem><para>CPP style define to define input macro definitions to the .edc source</para></listitem>
  </varlistentry>
</variablelist>
</section>



<section>
<title>edje_decc</title>
<para>
<literal>edje_decc</literal> allows you to decompile EET files back into
there EDC, image and font parts. This makes is easy to distributed your
source as you only ever need to provide the EET file and the end user will
have access to the source and the final product.
</para>

<example>
<title>edje_decc Usage</title>
<screen>
  edje_decc input_file.eet
</screen>
</example>
</section>



<section>
<title>edje_recc</title>
<para>
<literal>edje_recc</literal> allows you to recompile an EET file without
needed to first decompile. This allows you to modify the parameters passed
into the <literal>edje_cc</literal> to better fit your viewing and EET size
requirements.
</para>

<example>
<title>edje_recc Usage</title>
<screen>
  edje_recc [OPTIONS] input_file.eet
</screen>
</example>

<variablelist mark="bullet" spacing="compact">
  <title>Options</title>
  <varlistentry>
   <term>-v</term>
   <listitem><para>Verbose output</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-lossy</term>
   <listitem><para>Do NOT allow images to be lossy</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-comp</term>
   <listitem><para>Do NOT allow images to be stored with lossless compression</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-no-raw</term>
   <listitem><para>Do NOT allow images to be stored with zero compression (raw)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-min-quality <emphasis>VAL</emphasis></term>
   <listitem><para>Do NOT allow lossy images with quality &lt; VAL (0-100)</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-max-quality <emphasis>VAL</emphasis></term>
   <listitem><para>Do NOT allow lossy images with quality &gt; VAL (0-100)</para></listitem>
  </varlistentry>
</variablelist>
</section>



<section>
<title>edje_ls</title>
<para>
<literal>edje_ls</literal> provides a listing of all the groups inside a
given EET file. This is a quick way to see what a given EET is providing.
</para>

<example>
<title>edje_ls Usage</title>
<screen>
  edje_ls [OPTIONS] input_file.eet ...
</screen>
</example>

<variablelist mark="bullet" spacing="compact" termlength="15">
  <title>Options</title>
  <varlistentry>
   <term>-o <emphasis>outputfile.txt</emphasis></term>
   <listitem><para>Output the listing of the collections to a file</para></listitem>
  </varlistentry>
</variablelist>
</section>




<section>
<title>edje</title>
<para>
<literal>edje</literal> is also one of the main programs you will be using.
<literal>edje</literal> allows you to view each of the groups of your
program. It allows you to see how your parts are going to look and how they
react to certain signals.
</para>

<example>
<title>edje Usage</title>
<screen>
  edje file_to_show.eet [OPTIONS] [collection_to_show] ...
</screen>
</example>

<variablelist mark="bullet" spacing="compact" termlength="15">
  <title>Options</title>
  <varlistentry>
   <term>-gl</term>
   <listitem><para>Render with OpenGL</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-g <emphasis>W</emphasis>x<emphasis>H</emphasis></term>
   <listitem><para>Set window geometry to WxH</para></listitem>
  </varlistentry>

  <varlistentry>
   <term>-fill</term>
   <listitem><para>Make the parts fill the entire window</para></listitem>
  </varlistentry>
</variablelist>
</section>

<para>
These five simple tools should provide all of the access to build and
maintain your Edje EETs. They also make it easy to retrieve the source that
comprises a given EET making it easy to learn how different effect operate.
</para>

</section>

