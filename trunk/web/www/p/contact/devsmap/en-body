<?php
//******* SET THIS TO YOUR e/devs DIRECTORY  ********
$cvs_dir="/var/www/web/devs";
$geocache_file="/tmp/e_devs_map_geocache";
//***************************************************

function
GetValueFromInfoFile($field, $InfoFile)
{
   if ($i=eregi("$field:[ \t]*([ ,@.:/~()!a-zA-Z0-9_-]*)", "$InfoFile", $result))
      return trim($result[1]);
   else return "";
}

function
GeoCoordsQuery($address)
{
   global $geocache_file;
   global $geocache;

   $coords['lat'] = 0;
   $coords['lon'] = 0;

   /* check if address is already in the geocache */
   if (array_key_exists($address, $geocache))
   {
      $coords['lat'] = $geocache[$address][0];
      $coords['lon'] = $geocache[$address][1];
      if (isset($_REQUEST["debug"]))
         print "CACHED: $address COORDS: $coords[lat] $coords[lon]<br><br>";
      return $coords;
   }

   /* or perform the heavy query */
   if (isset($_REQUEST["debug"])) print "GEOCODING: $address<br>";
   $url = "http://maps.google.com/maps/api/geocode/json?sensor=false&address=".
          rawurlencode($address);
   if($result = file_get_contents($url))
   {
      $result_parts = json_decode($result);
      if($result_parts->status == "OK")
      {
         $coords['lat'] = $result_parts->results[0]->geometry->location->lat;
         $coords['lon'] = $result_parts->results[0]->geometry->location->lng;
         if (isset($_REQUEST["debug"]))
            print "RES: $coords[lat]   $coords[lon]<br><br>";

         /* store the result in the cache */
         $line = "$address=$coords[lat]|$coords[lon]\n";
         file_put_contents($geocache_file, $line, FILE_APPEND);
      }
      elseif (isset($_REQUEST["debug"]))
         print "<font color=red>ERR: $result_parts->status </font><br><br>";
   }
   return $coords;
}

/* check cvs dir */
if (!is_dir($cvs_dir))
{
   echo "<div align=center><b>ERROR: can't find cvs devs directory path.</b></div>";
   exit();
}

/* load cache file if present */
$geocache = array();
if (file_exists($geocache_file))
{
   $blob = file_get_contents($geocache_file);
   $lines = explode("\n", $blob);

   /* parse lines */
   foreach ($lines as $line)
   {
      /* line format: 'Sant Cugat, Barcelona, Spain=41.4718638|2.0821392' */
      $fields = explode("=", $line);
      $geocache[$fields[0]] = explode("|", $fields[1]);
   }

   /* debug: print the whole cache */
   if (isset($_REQUEST["debug"]))
   {
      print "<b>GEOCACHE:</b><pre>"; print_r($geocache); print "</pre><hr>";
   }
}

/* build a list of directory that contain the info.txt file */
$dirs = array();
if ($dh = opendir($cvs_dir))
{
   while (($file = readdir($dh)) !== false)
      if (is_dir("$cvs_dir/$file") AND file_exists("$cvs_dir/$file/info.txt"))
         $dirs[] = $file;
}

/* build the devs array, populated by parsing all the info.txt files */
$devs = array();
$tot_geodata = 0;
$tot_guessed = 0;
foreach ($dirs as $dir)
{
   /* get user info from info.txt file */
   $txt = file_get_contents("$cvs_dir/$dir/info.txt");
   $Coords = GetValueFromInfoFile("GeoData", $txt); 
   $Location = GetValueFromInfoFile("Location", $txt);
   $IRC =  GetValueFromInfoFile("IRC Nick", $txt);

   /* skip user without a nickname */
   if (!$IRC OR $IRC == "N/A")
      continue;

   /* parse the GeoData fields */
   $lat = $lon = 0;
   $Coords = explode(" ", str_replace(",", " ", $Coords));
   if($Coords && (count($Coords) == 2))
   {
      $tot_geodata ++;
      $lat = floatval($Coords[0]);
      $lon = floatval($Coords[1]);
      $icon = "http://labs.google.com/ridefinder/images/mm_20_green.png";
   }

   /* or use the geocoder to guess the position */
   if (!($lat AND $lon) AND $Location)
   {
      $coords = GeoCoordsQuery($Location);
      if ($coords["lat"] AND $coords["lon"])
      {
         $tot_guessed ++;
         $lat = $coords["lat"];
         $lon = $coords["lon"];
         $icon = "http://labs.google.com/ridefinder/images/mm_20_red.png";
      }
   }
   
   /* skip users without a position */
   if (!($lat AND $lon))
      continue;

   /* create an array entry for this developer */
   $dev = array();
   $dev["IRC"] = $IRC;
   $dev["lat"] = $lat;
   $dev["lon"] = $lon;
   $dev["Location"] = $Location;
   $dev["Name"] = GetvalueFrominfoFile("Name", $txt);
   $dev["Email"] = GetvalueFrominfoFile("E-Mail", $txt);
   if ($dev["Email"][0] == '-') $dev["Email"] = ""; 
   $dev["WWW"] = GetValueFromInfoFile("WWW", $txt);
   $dev["Managing"] = GetValueFromInfoFile("Managing", $txt);
   $dev["Contributing"] = GetValueFromInfoFile("Contributing", $txt);
   $dev["Group"] = GetValueFromInfoFile("Group", $txt);
   $dev["Platform"] = GetValueFromInfoFile("Platform", $txt );

   /* check the user icon (icon-map.png, green or red) */ 
   if (file_exists("$cvs_dir/$dir/icon-map.png"))
      $dev["Icon"] = "http://download.enlightenment.org/devs/$dir/icon-map.png";
   else
      $dev["Icon"] = $icon;

   /* check the user image (icon-med.png) */
   if (file_exists("$cvs_dir/$dir/icon-med.png"))
      $dev["IconBig"] = "http://download.enlightenment.org/devs/$dir/icon-med.png";
   else
      $dev["IconBig"] = "";

   $devs[] = $dev;
}

/* sort the devs array by nickname */
function sort_by_irc($a, $b) { return strcasecmp($a["IRC"], $b["IRC"]); }
usort($devs, "sort_by_irc");

/* debug: print the whole devs array */
if (isset($_REQUEST["debug"]))
{
   print "<hr><b>DEVS ARRAY</b><pre>"; print_r($devs); print "</pre><hr>";
}

/******************************************************************************/
?>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<!--script type="text/javascript" src="ClusterMarker.js"></script-->

<style type="text/css">
   html { height: 100% }
   body { height: 100% }
   #map_canvas { height: 500px; width: 100% }
   #map_table { width: 100%; font-size: 11px; border: 1px solid #CCC }
   .infowin td { font-size: 11px }

   #sidebar { height: 500px; overflow-y: scroll }
   #sidebar a { display: block ; padding-right: 5px }
   #sidebar a:nth-child(2n) { background-color: #EEE }

   #totals { float: right; font-size: 11px; margin-right: 5px }
   #coords { float: left; font-size: 11px; margin-left: 5px }
</style>

<center><h1>Enlightenment Developers World Map</h1></center>
<p>This map shows, in a geographical way, the information of all the people
having a svn account. The information is taken directly from the info.txt file
in svn. The green markers are the developers that have a 'GeoData' field in
their file, on the other side the position of the red one is guessed from
the 'Location' field, and will not be as accurate.</p>
<p>Clicking on a marker will open a popup showing all the information about
a specific developer (contacts, in which project is involved and the used
platform). With the control on the left you can zoom, pan and recenter as
you wish.
</p>

<div id="coords">Coords:</div>
<div  id="totals">
   Total devs: <?=$tot_geodata+$tot_guessed?> (<?=$tot_guessed?> guessed)
</div>
<table id="map_table" border=0>
   <tr>
      <td><div id="sidebar"></div></td>
      <td width="100%"><div id="map_canvas"></div></td>
   </tr>
</table>
<br><br>


<script type="text/javascript">
/******************************************************************************/
/* Initialize map canvas */
var canvas = document.getElementById("map_canvas")
var map = new google.maps.Map(canvas, {
      zoom: 2,
      center: new google.maps.LatLng(26, 0),
      mapTypeId: google.maps.MapTypeId.SATELLITE
    })
var infowin = new google.maps.InfoWindow()

/* on mouse-move update the coords div */
google.maps.event.addListener(map, 'mousemove', function(event) {
      update_coords(event.latLng);
   });

/* Place all the markers (from the php array)*/
<?php 
foreach ($devs as $dev)
   echo "create_dev_marker($dev[lat], $dev[lon], '$dev[IRC]', '$dev[Location]',
                  '$dev[Icon]', '$dev[IconBig]', '$dev[Name]', '$dev[Email]',
                  '$dev[WWW]', '$dev[Managing]', '$dev[Contributing]',
                  '$dev[Platform]', '$dev[Group]')\n";   
?>

/* Create a new developer marker */
function
create_dev_marker(lat, lon, IRC, Location, Icon, IconBig, Name, Email, WWW,
                  Managing, Contributing, Platform, Group)
{
   /* set icons sizes */
   if (Icon.match("icon-map.png$") == "icon-map.png")
      var icon = new google.maps.MarkerImage(Icon,
         new google.maps.Size(22, 29),   // icon size
         new google.maps.Point(0,0),     // icon origin point
         new google.maps.Point(11, 29))  // icon anchor point
   else
      var icon = new google.maps.MarkerImage(Icon,
         new google.maps.Size(12, 20),   // icon size
         new google.maps.Point(0,0),     // icon origin point
         new google.maps.Point(6, 20))   // icon anchor point
 
   var shadow = new google.maps.MarkerImage(
         'http://labs.google.com/ridefinder/images/mm_20_shadow.png',
         new google.maps.Size(22, 20),  // shadow size
         new google.maps.Point(0,0),    // shadow origin point
         new google.maps.Point(6, 20))  // shadow anchor point

   /* create infowindow html content */
   var html = ""
   html += '<div class="infowin">'
   html += '<table><tr>'
   if (IconBig)      html += '<td><img src="' + IconBig + '"></td>'
                     html += '<td><h3>' + IRC
   if (Name)         html += ' (' + Name + ')'
                     html += '</h3>'
   if (Email)        html += Email
   if (Email && WWW) html += ' - '
   if (WWW)          html += '<a href="' + WWW + '">' + WWW + '</a>'
                     html += '<br>'
   if (Managing)     html += '<b>Managing:</b> ' + Managing + '<br>'
   if (Contributing) html += '<b>Contributing:</b> ' + Contributing + '<br>'
   if (Group)        html += '<b>Group:</b> ' + Group + '<br>'
   if (Platform)     html += '<b>Platform:</b> ' + Platform + '<br>'
   if (Location)     html += '<b>Location:</b> ' + Location + '<br>'
   html += '</td></tr></table>'
   html += '</div>'

   /* create the marker */
   if (lat != 0 && lon != 0)
   {
      var latlng = new google.maps.LatLng(lat, lon)
      var marker = new google.maps.Marker({
         position: latlng,
         title: IRC,
         map: map,
         icon: icon,
         shadow: shadow
       })

      /* on marker click show the infowin */
      google.maps.event.addListener(marker, 'click', function() {
            show_infowin(marker, html)
         })

      /* add the marker to the sidebar list */
      sidebar_add_entry(IRC, marker, html)
   }
}

function
show_infowin(marker, html)
{
   infowin.setContent(html)
   infowin.open(map, marker)
}

function
sidebar_add_entry(IRC, marker, html)
{
   var newlink = document.createElement('a')
   newlink.onclick = function() { show_infowin(marker, html); return false; }
   newlink.innerHTML = IRC
   newlink.setAttribute('href', '#');
   document.getElementById("sidebar").appendChild(newlink)
}

function
update_coords(latLng)
{
   var coords_div = document.getElementById("coords")
   var coords = "Coords: " + latLng.toUrlValue(5)
   coords_div.innerHTML = coords.replace(",", " ")
}

</script>
