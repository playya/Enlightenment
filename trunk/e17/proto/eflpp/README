//=========================================================================================================//
// Enlightenment Foundation Libraries C++ Bindings. (C) 2004-2006 Vanille Media, Michael 'Mickey' Lauer.
//=========================================================================================================//

Some FAQs to get you started:

Q: Where's the homepage?
A: http://www.vanille-media.de/site/index.php/projects/efl/

Q: What's the license?
A: LGPL

Q: What are the requirements?
A: You need a C++ toolchain (recommended: g++ 4.1.1), libsigc-2.x, Evas, Ecore, Edje.
   For a debugging build, you need libcwd, see http://libcwd.sourceforge.net
   Optional parts need Esmart, Epsilon, Ewl, Etk, and Emotion

Q: How do I build eflpp?
A: ./autogen.sh && make && make install

Q: Why no inline functions [yet]?
A: Premature optimization is the root of all evil.

Q: Why is it using const char* and not some string class?
A: I couldn't decide yet whether libstdc++ should be optional or not.
   After all, I'm targetting embedded systems...

Q: Why a monolithic library and not just one library for every EFL sublibrary?
A: EFLpp as a class library benefits from putting everything into one library.
   I may reconsider this when I have more knowledge about the EFLpp use-cases.

Q: How stable is the API yet?
A: Not at all! Trust me, everything can change. I know this is a bit sucky for all potential
   users of this library and I promise it will improve once we get nearer towards v0.9.

Q: How can I contribute?
A: Send patches adding more C-API coverage, tests, examples, etc.

Q: Where are the largest construction sites?
A: See TODO

Q: How can I see the debug messages?
A: export EFL_DEBUG="1" and regenerate all Makefiles

Q: It takes a long time to 'make' and 'make install'. This is bad while development. Are there alternatives?
A: Yes. You could simpy add the eflpp top level directory to the PKG_CONFIG_PATH variable. Then pkg-config is able to find the unsinstalled lib and include files. No need to do a 'make install'.
