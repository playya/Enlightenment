dnl Process this file with autoconf to produce a configure script.

rm -f config.cache

# AC_INIT(acinclude.m4)
AC_INIT(configure.in)

AC_DEFINE_UNQUOTED([CONFIGURED_WITH], "$*", [what options were given to configure])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

# AC_INIT_PACKAGE(entropy, 0.0.1, alex@logisticchaos.com)
AM_INIT_AUTOMAKE(entropy, 0.0.1)

AC_PREREQ(2.52)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_CXX
AC_LANG(C)


AM_ENABLE_SHARED
dnl AM_DISABLE_STATIC
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL
# AM_WITH_DMALLOC

if test X"$enable_shared" = Xyes; then
 DLLDFLAGS=-export-dynamic
 AC_SUBST(DLLDFLAGS)
fi






dnl ###########################################################################
dnl # functions
dnl ###################

AC_C_CONST
AC_C_INLINE
AC_C_VOLATILE
AC_C_BIGENDIAN

AC_STRUCT_TM
AC_STRUCT_ST_BLKSIZE
AC_STRUCT_ST_BLOCKS

AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_TYPE_SIGNAL
AC_TYPE_OFF_T
AC_TYPE_MODE_T

AC_CHECK_TYPE(ulong, ,[AC_DEFINE(ulong, u_long,[FreeBSD compat])])

AC_CHECK_HEADERS([limits.h])

AC_HEADER_TIME

AC_CHECK_FUNCS([localtime_r])
AC_CHECK_FUNCS([nl_langinfo])
AC_CHECK_FUNCS([memset])
AC_CHECK_FUNCS([memmove])
AC_CHECK_FUNCS([strcasecmp])
AC_CHECK_FUNCS([strncasecmp])
AC_CHECK_FUNCS([strtol])
AC_CHECK_FUNCS([strstr])
AC_CHECK_FUNCS([strrchr])
AC_CHECK_FUNCS([strchr])
AC_CHECK_FUNCS([strdup])
AC_CHECK_FUNCS([select])

AC_CHECK_FUNCS([ftello])
AC_CHECK_FUNCS([fseeko])
AC_CHECK_FUNCS([strtoul])
AC_CHECK_FUNCS([strtoull])

AC_CHECK_FUNCS([statfs])
AC_CHECK_FUNCS([statvfs])

AC_SYS_LARGEFILE
# AC_SYS_LONG_FILE_NAMES

AC_FUNC_SELECT_ARGTYPES
AC_FUNC_STAT
AC_FUNC_MALLOC
AC_FUNC_FORK
AC_FUNC_MKTIME
AC_FUNC_LSTAT
AC_FUNC_CLOSEDIR_VOID

ACX_PTHREAD()

# inspired by Bruno Haible
langinfo=no
AC_TRY_LINK([#include <langinfo.h>],
      [char *cs=nl_langinfo(CODESET);],
      [AC_DEFINE(HAVE_LANGINFO_CODESET,1,[Have <langinfo.h> and nl_langinfo(CODESET).])
      langinfo=yes])


valgrind="no"
PKG_CHECK_MODULES(VALGRIND,valgrind,[AC_DEFINE(HAVE_VALGRIND, 1, build with valgrind detection)],
                                    [AC_MSG_NOTICE([Building without valgrind detection -- if you don't know what this means, you don't need this])])
AC_SUBST(VALGRIND_CFLAGS)
AC_SUBST(VALGRIND_LIBS)



btrace=no
AC_MSG_CHECKING(whether to link in libbtrace)
AC_ARG_ENABLE(btrace, AC_HELP_STRING([--enable-btrace],[build with extra debugging using libbtrace]),
        [ ac_btrace="$enableval" ],
        [ ac_btrace="no" ]
        )
if test X"$ac_btrace" = Xyes; then
  AC_CHECK_HEADER(btrace.h,
                  [AC_CHECK_LIB(btrace, btrace_print,
                                [btrace_libs="-lbtrace"
                                 btrace=yes
                                 AC_DEFINE(HAVE_BTRACE, 1, add support for libbtrace)])])
fi
AC_SUBST(btrace_cflags)
AC_SUBST(btrace_libs)


AC_CHECK_HEADER(wordexp.h,AC_DEFINE(HAVE_WORDEXP, 1, [whether wordexp is present; otherwise glob will be used]))


#check for ewl
AC_PATH_GENERIC(ewl,,[ewl_libs=`ewl-config --libs`
                         ewl_cflags=`ewl-config --cflags`
                         AC_DEFINE(HAVE_EWL, 1, have EWL)
                         ewl="EWL "; ],[
                         AC_MSG_WARN([No EWL, can't build.])
                        ]) AC_SUBST(ewl_libs)
AC_SUBST(ewl_cflags)

#check for etk
AM_CONDITIONAL(HAVE_ETK, false)
AC_PATH_GENERIC(etk,,[etk_libs=`etk-config --libs`
                         etk_cflags=`etk-config --cflags`
                         AC_DEFINE(HAVE_ETK, 1, have ETK)
                         etk="ETK ";
			 AM_CONDITIONAL(HAVE_ETK, true) ],[
                         AC_MSG_WARN([No ETK, can't build.])
                        ]) AC_SUBST(etk_libs)
AC_SUBST(etk_cflags)

#Check for evfs
AC_PATH_GENERIC(evfs,,[evfs_libs=`evfs-config --libs`
                         evfs_cflags=`evfs-config --cflags`
                         AC_DEFINE(HAVE_EVFS, 1, have EVFS)
                         evfs="EVFS "; ],[
                         AC_MSG_WARN([No EVFS, can't build.])
                        ]) AC_SUBST(evfs_libs)
AC_SUBST(evfs_cflags) 



# check for Imlib2
AC_PATH_GENERIC(imlib2,,[imlib2_libs=`imlib2-config --libs`
                         imlib2_cflags=`imlib2-config --cflags`
                         AC_DEFINE(HAVE_IMLIB2, 1, have Imlib2)
                         imlib2="Imlib2 "; ],[
                         AC_MSG_WARN([Without Imlib2 the number of image formats we can create thumbnails for will be greatly reduced. Getting Imlib2 is recommended.])
                        ])
AC_SUBST(imlib2_libs)
AC_SUBST(imlib2_cflags)



# check for libpng
AC_ARG_WITH(libpng,
            AC_HELP_STRING([--with-libpng=DIR],[use libPNG in <DIR>]),
                           [libpng="PNG "
                            libpng_cflags="-I$withval/include"
                            libpng_libs="-L$withval/lib"
                            AC_DEFINE(HAVE_LIBPNG,1,[have libpng for thumbnailing])],
                           [AC_PATH_GENERIC(libpng,,[libpng_libs=`libpng-config --libs`
                                                     libpng_cflags=`libpng-config --cflags`
                                                     libpng="PNG "
                                                     AC_DEFINE(HAVE_LIBPNG, 1,[have libpng for thumbnailing])],
                                                    [PKG_CHECK_MODULES(PNG,libpng12,
                                                      [libpng="PNG "
                                                       libpng_cflags=`pkg-config --cflags libpng12`
                                                       libpng_libs=`pkg-config --libs libpng12`
                                                       libpng="PNG "
                                                       AC_DEFINE(HAVE_LIBPNG, 1,[have libpng for thumbnailing])],
                                                      [AC_MSG_WARN([blubbadupbleepblopbleet])])])])

if test "$libpng_libs" != ""; then
  libpng_libs="$libpng_libs -lz -lm"
fi
AC_SUBST(libpng_cflags)
AC_SUBST(libpng_libs)
if test "$libpng" = ""; then
  AC_MSG_WARN([Building without PNG image library libpng -- disabling thumbnail image previews!!])
fi




dnl Check for F_NOTIFY.
dnl We don't really have to, but it's nice to let the user know in the summary.
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#define _GNU_SOURCE
#include <fcntl.h>
]],[[int x=F_NOTIFY;]])],[fnotify="with F_NOTIFY support"],
                         [fnotify="without F_NOTIFY support"])



dnl ###########################################################################
dnl ###########################################################################
dnl ###########################################################################






dnl prefix
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_PREFIX,
  "${ac_default_prefix}", Prefix)
else
  AC_DEFINE_UNQUOTED(PACKAGE_PREFIX, "${prefix}", Prefix)
fi

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
  "${ac_default_prefix}/${DATADIRNAME}/locale", locale)
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale", locale)
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR,
    "${ac_default_prefix}/share/${PACKAGE}", "")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", data)
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}", data)
fi

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", src)

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl



dnl pthread.
AC_SUBST(PTHREAD_LIBS)
AC_SUBST(PTHREAD_CFLAGS)
AC_SUBST(PTHREAD_CC)



dnl
dnl Adjust the Makefile.am conditionals accordingly
dnl

AC_OUTPUT([
Makefile
images/Makefile
src/Makefile
src/plugins/Makefile
])

echo -e "\nBuild summary:"
echo    "------------------------"

AC_MSG_RESULT([
Install in:                   $prefix

  ])


