dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(exhibit, 0.0.1)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL
LIBS=""

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
fi

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
fi
      
dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}")
fi

dnl Set PACKAGE_LIB_DIR in config.h.
if test "x${libdir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${ac_default_prefix}/lib")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${prefix}/lib")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${libdir}")
fi

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

dnl ecore
ECORE_REQUIRED_VERSION=0.9.9.022
PKG_CHECK_MODULES(ECORE, ecore >= $ECORE_REQUIRED_VERSION)

dnl evas
EVAS_REQUIRED_VERSION=0.9.9.022
PKG_CHECK_MODULES(EVAS, evas >= $EVAS_REQUIRED_VERSION)

dnl edje
EDJE_REQUIRED_VERSION=0.5.0.022
PKG_CHECK_MODULES(EDJE, edje >= $EDJE_REQUIRED_VERSION)

dnl etk
ETK_REQUIRED_VERSION=0.1.0.001
PKG_CHECK_MODULES(ETK, etk >= $ETK_REQUIRED_VERSION)

dnl epsilon
EPSILON_REQUIRED_VERSION=0.3.0.004
PKG_CHECK_MODULES(EPSILON, epsilon >= $EPSILON_REQUIRED_VERSION)

dnl Set ETK_PACKAGE_DATA_DIR in config.h.  
etk_prefix="\"`etk-config --prefix`/share/etk\""
AC_DEFINE_UNQUOTED(ETK_PACKAGE_DATA_DIR, $etk_prefix, [Data dir for etk lib.])


ecore_libs=`ecore-config --libs`
ecore_cflags=`ecore-config --cflags`
evas_libs=`evas-config --libs`
evas_cflags=`evas-config --cflags`
edje_libs=`edje-config --libs`
edje_cflags=`edje-config --cflags`
etk_libs=`etk-config --libs`
etk_cflags=`etk-config --cflags`
epsilon_libs=`epsilon-config --libs`
epsilon_cflags=`epsilon-config --cflags`

# add your required libs / include here
my_includes="$ecore_cflags $evas_cflags $edje_cflags $etk_cflags $epsilon_cflags"
my_libs="$ecore_libs $evas_libs $edje_libs $etk_libs $epsilon_libs"
AC_SUBST(my_includes)
AC_SUBST(my_libs)

AC_OUTPUT([
Makefile
src/Makefile
src/bin/Makefile
data/Makefile
],[
touch exhibit_docs.tar.gz
])
