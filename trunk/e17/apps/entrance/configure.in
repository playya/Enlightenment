dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(entrance, 0.9.0.006)
AM_CONFIG_HEADER(src/config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(PREFIX, "/usr/local", [Install prefix])
else
	AC_DEFINE_UNQUOTED(PREFIX, "${prefix}", [Install prefix])
fi

AC_EXPAND_DIR(PACKAGE_DATA_DIR, "$datadir/${PACKAGE}")
AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "$PACKAGE_DATA_DIR", [Shared data directory])
AC_EXPAND_DIR(PACKAGE_BIN_DIR, "$bindir")
AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "$PACKAGE_BIN_DIR", [Location of binaries])

# Override autosplat's destination dir settings
test $sysconfdir = '${prefix}/etc' && sysconfdir="/etc"
test $localstatedir = '${prefix}/var' && localstatedir="/var/lib/${PACKAGE}"

AC_DEFINE_UNQUOTED(PACKAGE_CFG_DIR, "${sysconfdir}", [Config data directory])
AC_DEFINE_UNQUOTED(PACKAGE_STATE_DIR, "${localstatedir}", [State data directory])

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", [Program source directory])

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_PATH_GENERIC(evas, 0.9.9,
  [ ],
  [ AC_MSG_ERROR(Evas isn't installed) ]
)

AC_PATH_GENERIC(ecore, 0.9.9,
  [ ],
  [ AC_MSG_ERROR(Ecore isn't installed) ]
)

AC_PATH_GENERIC(edje, 0.5.0,
  [ ],
  [ AC_MSG_ERROR(Edje isn't installed) ]
)

AC_PATH_GENERIC(esmart, 0.9.0,
  [ ],
  [ AC_MSG_ERROR(Esmart isn't installed) ]
)

have_clearenv=no
AC_CHECK_LIB(c, clearenv, [
	have_clearenv=yes
	AC_DEFINE(HAVE_CLEARENV, 1, [clearenv() function available])])

have_pam=no
AC_CHECK_HEADERS(security/pam_appl.h, [
	LIBS="$LIBS -lpam"
	have_pam=yes
    AC_DEFINE(HAVE_PAM, 1, [PAM Authentication Support])])

have_crypt=no
AC_CHECK_LIB(crypt, crypt, [
	LIBS="$LIBS -lcrypt"
	have_crypt=yes])
AC_CHECK_HEADERS(crypt.h)

have_shadow=no
AC_CHECK_LIB(crypt, getspnam, [
	AC_DEFINE(HAVE_SHADOW, 1, [Shadow Authentication Support])
	have_shadow=yes])

if test "x${have_shadow}" = "x"; then
AC_CHECK_LIB(shadow, getspnam, [
	LIBS="$LIBS -lshadow"
	AC_DEFINE(HAVE_SHADOW, 1, [Shadow Authentication Support])
	have_shadow=yes])
fi

# Default authentication mode, 1 for PAM/2 for shadow
auth_mode=1

if test "x${have_pam}" != "xyes"; then
    auth_mode=2
fi

AC_ARG_WITH(auth_mode,
    [ --with-auth-mode=AUTHMODE  Specify the default authentication mode (pam or shadow)],
    [
     if test "x$withval" = "xshadow"; then
         auth_mode=2
     fi
    ]
)

AC_SUBST(auth_mode)

# what Xsession file we're using
xsession=/etc/X11/xdm/Xsession
AC_ARG_WITH(xsession,
	[ --with-xsession=PATH	Specify the location of system Xsession file],
	[
	    if test "x$withval" != "xno" ; then
		xsession=$withval
	    fi
	]
)
if test ! -x $xsession ; then
    AC_MSG_WARN([** no $xsession file on this system **])
    AC_MSG_WARN([** Perhaps you need to specify --with-xsession **])
    xsession="You should reconfigure --with-xsession"
fi

AC_DEFINE_UNQUOTED(ENTRANCE_XSESSION, "$xsession", [Xsession script])
AC_SUBST(xsession)

AC_PATH_XTRA

EDJE_DEF=""
AC_SUBST(EDJE_DEF)

edje_cc="`$EDJE_CONFIG --prefix`/bin/edje_cc"
AC_ARG_WITH(edje-cc,
[  --with-edje-cc=PATH              specify a specific path to edje_cc],
[
  v=$withval;
  edje_cc=$v
  echo "  Enlightenment edje_cc explicitly set to "$edje_cc;
],[
  edje_cc="`$EDJE_CONFIG --prefix`/bin/edje_cc"
])
AC_SUBST(edje_cc)


AC_OUTPUT([
Makefile
src/Makefile
src/client/Makefile
src/daemon/Makefile
src/daemon/entrance_wrapper
config/Makefile
config/init.d/Makefile
config/init.d/entrance
config/pam.d/Makefile
data/Makefile
data/config/Makefile
data/config/build_config.sh
data/config/autodetect.sh
data/fonts/Makefile
data/images/Makefile
data/images/sessions/Makefile
data/users/Makefile
data/users/default/Makefile
data/users/default/images/Makefile
data/themes/Makefile
data/themes/default/Makefile
data/themes/default/img/Makefile
data/themes/darkrock/Makefile
data/themes/darkrock/img/Makefile
data/themes/Nebulous/Makefile
data/themes/Nebulous/images/Makefile
data/themes/taillights/Makefile
data/themes/taillights/embryo/Makefile
data/themes/taillights/parts/Makefile
data/themes/taillights/programs/Makefile
data/themes/taillights/images/Makefile
data/themes/taillights/fonts/Makefile
entrance.spec
debian/changelog
])

echo
echo "Finished configuring $PACKAGE $VERSION"
echo
echo "OpenGL engine support ............... $have_ecore_gl_x11"
echo "Support for crypt authentication .... $have_crypt"
echo "Support for shadow authentication ... $have_shadow"
echo "Support for PAM authentication ...... $have_pam"
echo "XSession file to use ................ $xsession "
echo
echo "Now type 'make' (gmake on some systems) to compile $PACKAGE"
echo
