dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(entrance, 0.0.2)
AM_CONFIG_HEADER(src/config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_EXPAND_DIR(PACKAGE_DATA_DIR, "$datadir/${PACKAGE}")
AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "$PACKAGE_DATA_DIR")

if test "x${prefix}" = "xNONE"; then
	AC_DEFINE_UNQUOTED(PREFIX, "/usr/local/")
else
	AC_DEFINE_UNQUOTED(PREFIX, "${prefix}")
fi

AC_EXPAND_DIR(PACKAGE_CFG_DIR, "$sysconfdir")
AC_DEFINE_UNQUOTED(PACKAGE_CFG_DIR, "$PACKAGE_CFG_DIR")

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_ARG_WITH(edb,
	[ --with-edb=DIR		use edb in <DIR>],
	[ CFLAGS="$CFLAGS -I$withval/include"
	LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(ebg,
	[ --with-ebg=DIR		use ebg in <DIR>],
	[ CFLAGS="$CFLAGS -I$withval/include"
	LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(evas,
	[ --with-evas=DIR		use evas in <DIR>],
	[ CFLAGS="$CFLAGS -I$withval/include"
	LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(ecore,
	[ --with-ecore=DIR		use ecore in <DIR>],
	[ CFLAGS="$CFLAGS -I$withval/include"
	LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(edb, 1.0.3, [
	AC_SUBST(edb_libs)
	AC_SUBST(edb_cflags) ],
	AC_MSG_ERROR(Cannot find edb: Is edb-config in path?))
edb_libs=`edb-config --libs`
edb_cflags=`edb-config --cflags`
AC_SUBST(edb_libs)
AC_SUBST(edb_cflags)

AC_PATH_GENERIC(ecore, 0.0.2, [
	AC_SUBST(ecore_libs)
	AC_SUBST(ecore_cflags) ],
	AC_MSG_ERROR(Cannot find ecore: Is ecore-config in path?))
ecore_libs=`ecore-config --libs`
ecore_cflags=`ecore-config --cflags`
AC_SUBST(ecore_libs)
AC_SUBST(ecore_cflags)

AC_PATH_GENERIC(evas, 1.0.0, [
	AC_SUBST(evas_libs)
	AC_SUBST(evas_cflags) ],
	AC_MSG_ERROR(Cannot find evas: Is evas-config in path?))
evas_libs=`evas-config --libs`
evas_cflags=`evas-config --cflags`
AC_SUBST(evas_libs)
AC_SUBST(evas_cflags)

AC_PATH_GENERIC(ebg, 1.0.0, [
	AC_SUBST(ebg_libs)
	AC_SUBST(ebg_cflags) ],
	AC_MSG_ERROR(Cannot find ebg: Is ebg-config in path?))
ebg_libs=`ebg-config --libs`
ebg_cflags=`ebg-config --cflags`
AC_SUBST(ebg_libs)
AC_SUBST(ebg_cflags)

have_pam=no
AC_CHECK_HEADERS(security/pam_appl.h, [
	LIBS="$LIBS -lpam"
	have_pam=yes
    AC_DEFINE(HAVE_PAM)])

have_crypt = no
AC_CHECK_LIB(crypt, crypt, [
	LIBS="$LIBS -lcrypt"
	have_crypt=yes])
AC_CHECK_HEADERS(crypt.h)

have_shadow=no
AC_CHECK_LIB(crypt, getspnam, [
	AC_DEFINE(HAVE_SHADOW)
	have_shadow=yes])

if test "x${have_shadow}" = "x"; then
AC_CHECK_LIB(shadow, getspnam, [
	LIBS="$LIBS -lshadow"
	AC_DEFINE(HAVE_SHADOW)
	have_shadow=yes])
fi

#AC_CONFIG_FILES([src/daemon/entrance_wrapper:src/daemon/entrance_wrapper.in],
#				[chmod a+x src/daemon/entrance_wrapper])

AC_OUTPUT([
Makefile
src/Makefile
src/client/Makefile
src/daemon/Makefile
src/daemon/entrance_wrapper
config/init.d/entrance
data/Makefile
data/config/Makefile
data/images/Makefile
data/images/sessions/Makefile
data/themes/Makefile
data/themes/BlueCrystal/Makefile
data/themes/matrix0/Makefile
])

echo
echo "$PACKAGE $VERSION"
echo
echo "Support for crypt authentication... $have_crypt"
echo "Support for shadow authentication... $have_shadow"
echo "Support for PAM authentication...... $have_pam"
echo
echo "Now type 'make' (gmake on some systems) to compile $PACKAGE"
echo
