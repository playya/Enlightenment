dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(entrance, 0.9.0.012)
AM_CONFIG_HEADER(src/config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_LIBTOOL
AC_HEADER_STDC

if test "x${prefix}" = "xNONE"; then
	prefix="${ac_default_prefix}"
fi

AC_DEFINE_UNQUOTED(PREFIX, "${prefix}", [Install prefix])

AC_EXPAND_DIR(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "$PACKAGE_DATA_DIR", [Shared data directory])
AC_EXPAND_DIR(PACKAGE_BIN_DIR, "$bindir")
AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "$PACKAGE_BIN_DIR", [Location of binaries])
AC_EXPAND_DIR(PACKAGE_LIBEXEC_DIR, "$libexecdir")
AC_DEFINE_UNQUOTED(PACKAGE_LIBEXEC_DIR, "$PACKAGE_LIBEXEC_DIR", [Location of private executables])

# Override autosplat's destination dir settings
if test $sysconfdir = '${prefix}/etc'; then
    if test $prefix = '/usr' -o $prefix = '/usr/local'; then
        # "make distcheck" does weird shit with $prefix without properly
        # setting DESTDIR, at least with some autoSPLAT versions.  So only
        # reset this if we're installing to /usr or /usr/local.
        sysconfdir="/etc"
    fi
fi
test $localstatedir = '${prefix}/var' && localstatedir="/var/run/${PACKAGE}"

AC_EXPAND_DIR(PACKAGE_CFG_DIR, "$sysconfdir")
AC_DEFINE_UNQUOTED(PACKAGE_CFG_DIR, "$PACKAGE_CFG_DIR", [Config data directory])
AC_DEFINE_UNQUOTED(PACKAGE_STATE_DIR, "${localstatedir}", [State data directory])

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", [Program source directory])

dnl Set path to X_BINARIES in config.h
dnl# FIXME:  Use AC_PATH_PROG macro here.
xbin=""
AC_ARG_WITH(xbin,
	AC_HELP_STRING([--with-xbin=DIR],[Directory where X binaries are installed]),
            [
                xbin="$withval"
            ], [
                AC_PATH_PROG(xbin, X, /usr/X11R6/bin, $PATH:/usr/X11R6/bin:/usr/X11R7/bin)
                xbin=`dirname $xbin`
            ])
AC_DEFINE_UNQUOTED(X_BINARIES, "${xbin}", [Path to X binaries])
AC_SUBST(xbin)

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

PKG_CHECK_MODULES(EVAS, [evas >= 0.9.9])
PKG_CHECK_MODULES(ECORE, [
  ecore >= 0.9.9
  ecore-evas >= 0.9.9
  ecore-file >= 0.9.9
  ecore-ipc >= 0.9.9
  ecore-config >= 0.9.9
])
PKG_CHECK_MODULES(EDJE, [edje >= 0.5.0])
PKG_CHECK_MODULES(ESMART, [
  esmart_container >= 0.9.0
  esmart_text_entry >= 0.9.0
])
PKG_CHECK_MODULES(EFREET, [efreet >= 0.0.3.004])


have_clearenv=no
AC_CHECK_LIB(c, clearenv, [
	have_clearenv=yes
	AC_DEFINE(HAVE_CLEARENV, 1, [clearenv() function available])])

have_pam=no
AC_ARG_ENABLE(pam,
	AC_HELP_STRING([--enable-pam],[enable PAM support @<:@default=detect@:>@]),
	[want_pam=$enableval],
	[want_pam=auto]
)
if test "x$want_pam" != "xno" ; then
	have_pam=no
	AC_CHECK_HEADERS(security/pam_appl.h, [
		LIBS="$LIBS -lpam"
		have_pam=yes
	    AC_DEFINE(HAVE_PAM, 1, [PAM Authentication Support])])
	if test "x$want_pam$have_pam" = "xyesno" ; then
		AC_MSG_ERROR(PAM not found)
	fi
fi

have_crypt=no
AC_CHECK_LIB(crypt, crypt, [
	LIBS="$LIBS -lcrypt"
	have_crypt=yes])
AC_CHECK_HEADERS(crypt.h)

have_shadow=no
AC_CHECK_LIB(crypt, getspnam, [
	AC_DEFINE(HAVE_SHADOW, 1, [Shadow Authentication Support])
	have_shadow=yes])

if test "x${have_shadow}" = "x"; then
AC_CHECK_LIB(shadow, getspnam, [
	LIBS="$LIBS -lshadow"
	AC_DEFINE(HAVE_SHADOW, 1, [Shadow Authentication Support])
	have_shadow=yes])
fi

# Default authentication mode, 1 for PAM/2 for shadow
auth_mode=1

if test "x${have_pam}" != "xyes"; then
    auth_mode=2
fi

AC_ARG_WITH(auth_mode,
    AC_HELP_STRING([--with-auth-mode=AUTHMODE],[Specify the default authentication mode (pam or shadow)]),
    [
     if test "x$withval" = "xshadow"; then
         auth_mode=2
     fi
    ]
)

AC_SUBST(auth_mode)

AC_MSG_CHECKING([for pam configuration source])
AC_ARG_WITH(pam-config,
	AC_HELP_STRING([--with-pam-config=SRC],[Specify PAM config source (entrance, gdm, xdm, etc. or "auto")]),
            [
                if test "x$have_pam" = "yes"; then
                    AC_MSG_RESULT([N/A, pam disabled])
                    PAM_CONFIG=entrance
                elif test "x$withval" = "xauto"; then
                    AC_MSG_RESULT([runtime auto-detect])
                    PAM_CONFIG=auto
                elif test "x$withval" = "xyes"; then
                    AC_MSG_ERROR([Parameter to --with-pam-config required.])
                elif test "x$withval" = "xno"; then
                    AC_MSG_RESULT([disabled])
                    PAM_CONFIG=entrance
                else
                    AC_MSG_RESULT([$withval])
                    PAM_CONFIG="$withval"
                fi
            ], [
                AC_MSG_RESULT([runtime auto-detect])
                PAM_CONFIG=auto
            ])
if test "x$PAM_CONFIG" = "x"; then
    PAM_CONFIG=:
elif test "x$PAM_CONFIG" = "xentrance"; then
    PAM_CONFIG=:
elif test "x$PAM_CONFIG" = "xauto"; then
    PAM_CONFIG='(cd '"${sysconfdir}"'/pam.d ; for i in gdm kdm wdm xdm ; do test -s $i && cp -a $i entrance && break ; done)'
else
    PAM_CONFIG="(cd ${sysconfdir}/pam.d ; cp -a $PAM_CONFIG entrance)"
fi
AC_SUBST(PAM_CONFIG)

# what Xsession file we're using
xsession=/etc/X11/xdm/Xsession
if test ! -x "$xsession" ; then
    xsession=/etc/X11/Xsession
fi

AC_ARG_WITH(xsession,
	AC_HELP_STRING([--with-xsession=PATH],[Specify the location of system Xsession file]),
	[
	    if test "x$withval" != "xno" ; then
		xsession=$withval
	    fi
	]
)
if test ! -x "$xsession" ; then
    AC_MSG_WARN([** $xsession does not exist or is not executable **])
    AC_MSG_WARN([** Please consider overriding with --with-xsession **])
fi

AC_DEFINE_UNQUOTED(ENTRANCE_XSESSION, "$xsession", [Xsession script])
AC_SUBST(xsession)

# what Sessions dir we're using
sessions=$prefix/share/xsessions
if test ! -d "$sessions" ; then
    sessions=/usr/share/xsessions
fi

AC_ARG_WITH(sessions,
			AC_HELP_STRING([--with-sessions=PATH],[Specify the location of sessions .desktop files]),
	[
	    if test "x$withval" != "xno" ; then
		sessions=$withval
	    fi
	]
)
if test ! -d "$sessions" ; then
    AC_MSG_WARN([** $sessions does not exist or is not a directory **])
    AC_MSG_WARN([** Please consider overriding with --with-sessions **])
fi

AC_DEFINE_UNQUOTED(ENTRANCE_SESSIONS_DIR, "$sessions", [Sessions .desktop directory])
AC_SUBST(sessions)


AC_PATH_XTRA

EDJE_DEF=""
AC_SUBST(EDJE_DEF)

AC_ARG_WITH(edje-cc,
	AC_HELP_STRING([--with-edje-cc=PATH],[Specify a specific path to edje_cc]),
[
  v=$withval;
  edje_cc=$v
  echo "  Enlightenment edje_cc explicitly set to "$edje_cc;
],[
  edje_cc=$(pkg-config --variable=prefix edje)/bin/edje_cc
])
AC_SUBST(edje_cc)

AC_MSG_CHECKING([for virtual console for X startup])
AC_ARG_WITH(vt, AC_HELP_STRING([--with-vt=NUM],[Specify on which virtual console to start X (default 7)]),
            [
                if (test $withval -ge 0) >/dev/null 2>&1; then
                    AC_MSG_RESULT([$withval])
                    ENTRANCE_VT_ARG=" vt$withval"
                elif test "x$withval" = "xauto"; then
                    AC_MSG_RESULT([X autodetect])
                    ENTRANCE_VT_ARG=""
                else
                    AC_MSG_ERROR([Parameter to --with-vt must be numeric or "auto"])
                fi
            ], [
                ENTRANCE_VT_ARG=" vt7"
                AC_MSG_RESULT([7 (default)])
            ])
AC_DEFINE_UNQUOTED([ENTRANCE_VT_ARG], ["$ENTRANCE_VT_ARG"], [vtXX parameter to pass to X on startup])
AC_SUBST([ENTRANCE_VT_ARG])

AC_OUTPUT([
Makefile
src/Makefile
src/lib/Makefile
src/lib/entrance_edit-config
src/client/Makefile
src/daemon/Makefile
src/daemon/entrance_wrapper
src/config/Makefile
config/Makefile
config/init.d/Makefile
config/init.d/entrance
config/pam.d/Makefile
data/Makefile
data/config/Makefile
data/config/build_config.sh
data/fonts/Makefile
data/images/Makefile
data/images/sessions/Makefile
data/users/Makefile
data/users/default/Makefile
data/users/default/images/Makefile
data/themes/Makefile
data/themes/default/Makefile
data/themes/default/img/Makefile
data/themes/darkrock/Makefile
data/themes/darkrock/img/Makefile
entrance.spec
debian/changelog
],
[
 chmod +x src/lib/entrance_edit-config
])

echo
echo "Finished configuring $PACKAGE $VERSION"
echo
echo "Support for crypt authentication .... $have_crypt"
echo "Support for shadow authentication ... $have_shadow"
echo "Support for PAM authentication ...... $have_pam"
echo "XSession file to use ................ $xsession "
echo "Sessions dir to use ................ $sessions "
echo "X binaries prefix  .................. $xbin"
echo
echo "Now type 'make' (gmake on some systems) to compile $PACKAGE"
echo
