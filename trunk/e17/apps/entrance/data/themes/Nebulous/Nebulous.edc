// For users with an even number of displays search for //relative and
// uncomment those lines, then comment out the ones above them.

fonts
{
    font, "orbit.ttf" "Edje Orbit";
}

images
{
    image, "e.png"	LOSSY 80;
    image, "e_logo.png"		LOSSY 80;
    image, "e_logo_bg.jpg"		LOSSY 80;
    image, "menu_bottom_center.png"		LOSSY 80;
    image, "menu_bottom_left.png"		LOSSY 80;
    image, "menu_bottom_right.png"		LOSSY 80;
    image, "menu_top_center.png"		LOSSY 80;
    image, "menu_top_left.png"		LOSSY 80;
    image, "menu_top_right.png"		LOSSY 80;
    image, "menu.png"		LOSSY 80;
    image, "Nebulous_preview.png"		LOSSY 80;
}
collections
{
    group
    {
	name, "Main";
	parts
	{
	    part
	    {
		name, "base";
		type, RECT;
		mouse_events, 0;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		    color, 100 100 100 255;
		}
	    }
	    part
	    {
		name, "bg";
		type, IMAGE;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		    image
		    {
			normal, "e_logo_bg.jpg";
		    }
		    // set the offset to the size of each display
		    //fill 
		    //{
		    //	smooth, 0;
		    //	size 
		    //	{
		    //	    relative, 0.0 0.0;
		    //	    offset, 1280 1024;
		    //	}
		    //}
		}
		description
		{
		    state, "postauth" 0.0;
		    visible, 1;
		    color, 255 255 255 0;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
		    }
		    image
		    {
			normal, "e_logo_bg.jpg";
		    }
		    // set the offset to the size of each display
		    //fill 
		    //{
		    //	smooth, 0;
		    //	size 
		    //	{
		    //	    relative, 0.0 0.0;
		    //	    offset, 1280 1024;
		    //	}
		    //}
		}
	    }
	    part
	    {
		name, "EntranceUserMessage";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, -100 0;
		    }
		    rel2
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, 100 70;
		    }
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    text
		    {
			text, "Enter Username:";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, -100 0;
		    }
		    rel2
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, 100 70;
		    }
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    text
		    {
			text, "Enter Username:";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntrancePassMessage";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, -100 0;
		    }
		    rel2
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, 100 70;
		    }
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    text
		    {
			text, "Password:";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, -100 0;
		    }
		    rel2
		    {
			relative, 0.5 0.8;
			//relative, 0.25 0.8;
			offset, 100 70;
		    }
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    text
		    {
			text, "Password:";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntranceErrorUser";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, -30 -35;
			to, "EntranceUserMessage";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 30 5;
			to, "EntranceUserMessage";
		    }
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    text
		    {
			text, "User Unknown";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "visible" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, -30 -35;
			to, "EntranceUserMessage";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 30 5;
			to, "EntranceUserMessage";
		    }
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    text
		    {
			text, "User Unknown";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntranceErrorPass";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, -30 -35;
			to, "EntrancePassMessage";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 30 5;
			to, "EntrancePassMessage";
		    }
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    text
		    {
			text, "Authentication Failed.";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "visible" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, -30 -35;
			to, "EntrancePassMessage";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 30 5;
			to, "EntrancePassMessage";
		    }
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    text
		    {
			text, "Authentication Failed.";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "entrance.entry.user";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 10 0;
			to, "EntranceUserEntryArea";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceUserEntryArea";
		    }
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 10 0;
			to, "EntranceUserEntryArea";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceUserEntryArea";
		    }
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntranceFaceClip";
		type,	RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 1.0;
			offset, -80 -80;
			to_y, "entrance.entry.pass";
		    }
		    rel2
		    {
			relative, 0.5 1.0;
			offset, 80 5;
			to_y, "entrance.entry.pass";
		    }
		    color, 255 255 255 0;
		}
		description
		{
		    state, "visible" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.5 1.00;
			offset, -120 -140;
			to_y, "entrance.entry.pass";
		    }
		    rel2
		    {
			relative, 0.5 1.0;
			offset, 120 5;
			to_y, "entrance.entry.pass";
		    }
		    color, 255 255 255 255;
		}
	    }
	    part
	    {
		name, "EntranceFaceBorder";
		type,	IMAGE;
		mouse_events, 1;
		clip_to, "EntranceFaceClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
			to, "EntranceFaceClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceFaceClip";
		    }
		    image
		    {
			normal, "menu.png";
		    border, 20 20 20 20;
		    }
		}
	    }
	    part
	    {
		name, "entrance.users.avatar";
		type,	RECT;
		mouse_events, 1;
		clip_to, "EntranceFaceClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 5 20;
			to, "EntranceFaceClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -5 -20;
			to, "EntranceFaceClip";
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "entrance.entry.pass";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    color, 100 100 100 255;
		    color3, 229 229 229 255;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 10 0;
			to, "EntrancePassEntryArea";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntrancePassEntryArea";
		    }
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    color, 100 100 100 0;
		    color3, 229 229 229 0;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 10 0;
			to, "EntrancePassEntryArea";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntrancePassEntryArea";
		    }
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit,  0 0;
			align, 0.5 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntranceUserEntryArea";
		type, RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 0;
			to, "EntranceUserMessage";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 30;
			to, "EntranceUserMessage";
		    }
		    color, 100 100 100 0;
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 0;
			to, "EntranceUserMessage";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 30;
			to, "EntranceUserMessage";
		    }
		    color, 100 100 100 0;
		}
	    }
	    part
	    {
		name, "EntrancePassEntryArea";
		type, RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 0;
			to, "EntrancePassMessage";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 30;
			to, "EntrancePassMessage";
		    }
		    color, 100 100 100 0;
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 0;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 0;
			to, "EntrancePassMessage";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 30;
			to, "EntrancePassMessage";
		    }
		    color, 100 100 100 0;
		}
	    }
	    part
	    {
		name, "entrance.hostname";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    color, 100 100 100 192;
		    color3, 227 227 227 64;
		    rel1
		    {
			relative, 0.1 0.1;
			offset, 10 30;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.1 0.1;
			offset, 300 70;
			to, "bg";
		    }
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit, 1 1;
			align, 0.0 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    color, 100 100 100 0;
		    color3, 227 227 227 0;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 10 30;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.0 0.0;
			offset, 300 70;
			to, "bg";
		    }
		    text
		    {
			text, "";
			font, "Edje Orbit";
			size, 16;
			fit, 1 1;
			align, 0.0 0.5;
		    }
		}
	    }
	    part
	    {
		name, "entrance.date";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 5;
			to, "entrance.time";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 35;
			to, "entrance.time";
		    }
		    color, 100 100 100 192;
		    color3, 227 227 227 192;
		    text
		    {
			text, "Date";
			font, "Edje Orbit";
			size, 18;
			fit,  1 1;
			align, 1.0 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 5;
			to, "entrance.time";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 35;
			to, "entrance.time";
		    }
		    color, 100 100 100 0;
		    color3, 227 227 227 0;
		    text
		    {
			text, "Date";
			font, "Edje Orbit";
			size, 18;
			fit,  1 1;
			align, 1.0 0.5;
		    }
		}
	    }
	    part
	    {
		name, "entrance.time";
		type,	TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    color, 100 100 100 192;
		    color3, 227 227 227 192;
		    rel1
		    {
			relative, 1.0 1.0;
			offset, -300 -70;
			to, "bg";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -10 -40;
			to, "bg";
		    }
		    text
		    {
			text, "Time";
			font, "Edje Orbit";
			size, 18;
			fit,  1 1;
			align, 1.0 0.5;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    color, 100 100 100 0;
		    color3, 227 227 227 0;
		    rel1
		    {
			relative, 1.0 1.0;
			offset, -300 -70;
			to, "bg";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -10 -40;
			to, "bg";
		    }
		    text
		    {
			text, "Time";
			font, "Edje Orbit";
			size, 18;
			fit,  1 1;
			align, 1.0 0.5;
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionListClip";
		type, RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.5;
			offset, 0 0;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.0 0.5;
			offset, 0 0;
			to, "bg";
		    }
		    color, 255 255 255 0;
		}
		description
		{
		    state, "opening" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.5;
			offset, 20 -40;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.0 0.5;
			offset, 240 40;
			to, "bg";
		    }
		    color, 255 255 255 32;
		}
		description
		{
		    state, "visible" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.5;
			offset, 20 -230;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.0 0.5;
			offset, 200 230;
			to, "bg";
		    }
		    color, 255 255 255 255;
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuTopLeft";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 0.0 0.0;
			offset, 5 20;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_top_left.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuTopRight";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 1.0 0.0;
			offset, -5 0;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 0 20;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_top_right.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuTopCenter";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 5 0;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, -5 20;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_top_center.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuTitle";
		type, TEXT;
		mouse_events, 1;
		effect, SOFT_SHADOW;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 1.0 0.0;
			offset, 2 2;
			to_x, "EntranceSessionMenuTopLeft";
			to_y, "EntranceSessionMenuTopCenter";
		    }
		    rel2
		    {
			relative, 0.0 1.0;
			offset, -2 -2;
			to_x, "EntranceSessionMenuTopRight";
			to_y, "EntranceSessionMenuTopCenter";
		    }
		    color, 100 100 100 192;
		    color3, 255 255 255 255;
		    text
		    {
			text, "Select a Session";
			font, "Edje Orbit";
			size, 12;
			align, 0.5 0.5;
			fit, 0 0;
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuBottomCenter";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 5 -20;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -5 0;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_bottom_center.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuBottomLeft";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 0 -20;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 0.0 1.0;
			offset, 5 0;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_bottom_left.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenuBottomRight";
		type,	IMAGE;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 1.0 1.0;
			offset, -5 -20;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceSessionListClip";
		    }
		    image
		    {
			normal, "menu_bottom_right.png";
		    }
		}
	    }
	    part
	    {
		name, "EntranceSessionMenu";
		type,	RECT;
		mouse_events, 0;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 1 20;
			to, "EntranceSessionListClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -1 -20;
			to, "EntranceSessionListClip";
		    }
		    color, 255 255 255 64;
		}
	    }
	    part
	    {
		name, "entrance.xsessions.list";
		type,	RECT;
		mouse_events, 1;
		clip_to, "EntranceSessionListClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 5 5;
			to, "EntranceSessionMenu";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -5 -5;
			to, "EntranceSessionMenu";
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "EntranceSessionClip";
		type,	RECT;
		mouse_events, 0;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 1.0;
			offset, 25 -53;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.0 1.0;
			offset, 200 -5;
			to, "bg";
		    }
		    color, 255 255 255 255;
		}
	    }
	    part
	    {
		name, "entrance.xsessions.selected";
		type,	RECT;
		mouse_events, 0;
		clip_to, "EntranceSessionClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "EntranceSessionMouseArea";
		type,	RECT;
		mouse_events, 1;
		clip_to, "EntranceSessionClip";
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "EntranceSessionListMouseArea";
		type,	RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    rel2
		    {
			relative, 0.0 0.0;
			offset, 0 0;
		    }
		    color, 255 255 255 0;
		}
		description
		{
		    state, "visible" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, 0 0;
			to, "EntranceSessionClip";
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "EntranceUserMenu";
		type,	IMAGE;
		mouse_events, 1;
		dragable 
		{
		    confine, "bg";
		    x, 1 1 0;
		    y, 1 1 0;
		}
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    min, 300 90;
		    rel1
		    {
			relative, 1.0 0.0;
			offset, -300 0;
			to, "bg";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, 0 120;
			to, "bg";
		    }
		    image
		    {
			normal, "menu.png";
		    border, 20 20 20 20;
		    }
		}
		description
		{
		    state, "hidden" 0.0;
		    visible, 1;
		    min, 300 40;
		    rel1
		    {
			relative, 0.5 0.5;
			offset, 0 0;
			to, "bg";
		    }
		    rel2
		    {
			relative, 0.5 0.5;
			offset, 0 0;
			to, "bg";
		    }
		    image
		    {
			normal, "menu.png";
		    border, 20 20 20 20;
		    }
		}
	    }
	    part
	    {
		name, "EntranceUserMenuTitle";
		type, TEXT;
		mouse_events, 0;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 2 2;
			to, "EntranceUserMenu";
		    }
		    rel2
		    {
			relative, 1.0 0.0;
			offset, -2 30;
			to, "EntranceUserMenu";
		    }
		    color, 100 100 100 192;
		    color3, 255 255 255 255;
		    text
		    {
			text, "Users";
			font, "Edje Orbit";
			size, 12;
			align, 0.5 0.0;
			fit, 0 0;
		    }
		}
	    }
	    part
	    {
		name, "entrance.users.list";
		type,	RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 5 25;
			to, "EntranceUserMenu";
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -5 -25;
			to, "EntranceUserMenu";
		    }
		    color, 255 255 255 0;
		}
	    }
	    // TODO 
	    // Callback for Entrance[Session|User]List
	}
	programs
	{
	    // later we could add a post authorization animation here =)
	    program
	    {
		name,	"EntranceAuth";
		signal,	"entrance,user,auth,success";
		source,	"";
		action, STATE_SET "postauth" 0.0;
		target, "bg";
		transition, SINUSOIDAL 1.0;
		after, "EntranceEnd";
	    }
	    program
	    {
		name,	"EntranceAuthToo";
		signal,	"entrance,user,auth,success";
		source,	"";
		action, STATE_SET "hidden" 0.0;
		target, "entrance.hostname";
		target, "entrance.date";
		target, "entrance.time";
		target, "EntrancePassMessage";
		target, "entrance.entry.pass";
		target, "EntrancePassEntryArea";
		target, "EntranceUserMessage";
		target, "entrance.entry.user";
		target, "EntranceUserEntryArea";
		transition, SINUSOIDAL 0.5;
	    }
	    program
	    {
		name,   "EntranceEnd";
		signal, "";
		source, "";
		action,	SIGNAL_EMIT "entrance,user,auth,success,done" "";
	    }
	    program
	    {
		// when the user is unknown to the system
		name,	"DisplayErrorUser";
		signal,	"entrance,user,fail";
		source, "";
		action, STATE_SET "visible" 0.0;
		target, "EntranceErrorUser";
		transition, SINUSOIDAL 1.0;
		after,  "ErrorHide";
	    }
	    program
	    {
		// when the user's password failed
		name,	"DisplayErrorPass";
		signal,	"entrance,user,auth,fail";
		source, "";
		action, STATE_SET "visible" 0.0;
		target, "EntranceErrorPass";
		transition, SINUSOIDAL 1.0;
		after,  "ErrorHide";
	    }
	    program
	    {
		// callback to hide our error messages after a time
		name,	"ErrorHide";
		signal,	"";
		source, "";
		action, STATE_SET "default" 0.0;
		target, "EntranceErrorPass";
		target, "EntranceErrorUser";
		transition, DECELERATE 2.0;
	    }
	    program
	    {
		name,  "Setup";
		signal, "show";
		source, "";
		action, STATE_SET "hidden" 0.0;
		target, "EntrancePassMessage";
		target, "entrance.entry.pass";
		target, "EntrancePassEntryArea";
	    }
	    program
	    {
		name, "ToPass";
		signal, "entrance,user,success";
		source, "";
		action, STATE_SET "hidden" 0.0;
		target, "EntranceUserMessage";
		target, "entrance.entry.user";
		target, "EntranceUserEntryArea";
		transition, SINUSOIDAL 1.0;
		after, "ToPassAfter";
	    }
	    program
	    {
		name, "ToPassAfter";
		signal, "";
		source, "";
		action, STATE_SET "default" 0.0;
		transition, SINUSOIDAL 1.0;
		target, "EntrancePassMessage";
		target, "entrance.entry.pass";
		target, "EntrancePassEntryArea";
	    }
	    program
	    {
		// when the user is unknown to the system
		name,	"ToUser";
		signal,	"entrance,user,auth,fail";
		source, "";
		action, STATE_SET "hidden" 0.0;
		target, "EntrancePassMessage";
		target, "entrance.entry.pass";
		target, "EntrancePassEntryArea";
		transition, SINUSOIDAL 1.0;
		after, "ToUserAfter";
	    }
	    program
	    {
		// when the user is unknown to the system
		name,	"ToUserAfter";
		signal,	"";
		source, "";
		action, STATE_SET "default" 0.0;
		target, "EntranceUserMessage";
		target, "entrance.entry.user";
		target, "EntranceUserEntryArea";
		transition, SINUSOIDAL 1.0;
	    }
	    program
	    {
		name,  "ShowSessionChooser";
		signal, "mouse,up,1";
		source, "EntranceSessionMouseArea";
		action, STATE_SET "opening" 0.0;
		target, "EntranceSessionListClip";
		transition, LINEAR 0.35;
		after, "DisplaySessionChooser";
	    }
	    program
	    {
		name,  "DisplaySessionChooser";
		signal, "mouse,up,1";
		source, "EntranceSessionMouseArea";
		action, STATE_SET "visible" 0.0;
		target, "EntranceSessionListClip";
		target, "EntranceSessionListMouseArea";
		transition, LINEAR 0.5;
	    }
	    program
	    {
		name, "SelectSession";
		signal, "entrance,xsession,selected";
		source, "";
		action, STATE_SET "default" 0.0;
		target, "EntranceSessionListClip";
		target, "EntranceSessionListMouseArea";
		transition, SINUSOIDAL 0.5;
	    }
	    program
	    {
		name, "SessionFaceLoaded";
		signal, "entrance,users,selected";
		source, "";
		action, STATE_SET "visible" 0.0;
		target, "EntranceFaceClip";
		transition, SINUSOIDAL 0.75;
	    }
	    program
	    {
		name, "SessionFaceUnLoaded";
		signal, "entrance,users,unselected";
		source, "";
		action, STATE_SET "default" 0.0;
		target, "EntranceFaceClip";
		transition, SINUSOIDAL 0.5;
	    }
	    program
	    {
		name, "SessionFaceLoginFail";
		signal, "entrance,user,auth,fail";
		source, "";
		action, STATE_SET "default" 0.0;
		target, "EntranceFaceClip";
		transition, SINUSOIDAL 0.5;
	    }
	    /*
	    program
	    {
		name, "HideUsersMenu";
		signal, "mouse,in";
		source, "bg";
		action, STATE_SET "hidden" 0.0;
		target, "EntranceUserMenu";
		transition, LINEAR 0.3;
	    }
	    program
	    {
		name, "ShowUsersMenu";
		signal, "mouse,in";
		source, "EntranceUserMenu";
		action, STATE_SET "default" 0.0;
		target, "EntranceUserMenu";
		transition, LINEAR 0.3;
	    }
	    */
	}
    }
    group
    {
	name, "Session";
	parts
	{
	    part
	    {
		name, "entrance.xsession.icon";
		type, RECT;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 2 2;
		    }
		    rel2
		    {
			relative, 0.0 0.0;
			offset, 34 34;
		    }
		    color, 255 255 255 0;
		}
	    }
	    part
	    {
		name, "entrance.xsession.title";
		type, TEXT;
		mouse_events, 1;
		effect, SOFT_SHADOW;
		description
		{
		    state, "default" 0.0;
		    visible, 1;
		    rel1
		    {
			relative, 1.0 0.5;
			offset, 2 -17;
			to, "entrance.xsession.icon";
		    }
		    rel2
		    {
			relative, 1.0 0.5;
			offset, 110 17;
			to, "entrance.xsession.icon";
		    }
		    color, 100 100 100 192;
		    color3, 255 255 255 255;
		    text
		    {
			text, "Doesn't Matter";
			font, "Edje Orbit";
			size, 13;
			align, 0.0 0.5;
			fit, 0 0;
		    }
		}
	    }
	}
	programs
	{
	    program
	    {
		name, "SessionIconClicked";
		signal, "mouse,clicked,1";
		source, "entrance.xsession.icon";
		action, SIGNAL_EMIT "entrance,xsession,selected" "";
	    }
	    program
	    {
		name, "SessionTitleClicked";
		signal, "mouse,clicked,1";
		source, "entrance.xsession.title";
		action, SIGNAL_EMIT "entrance,xsession,selected" "";
	    }
	}
    }
    group
    {
	name, "Preview";
	min, 80 60;
	max, 80 60;
	parts
	{
	    part
	    {
		name, "img";
		type, IMAGE;
		mouse_events, 1;
		description
		{
		    state, "default" 0.0;
		    min, 80 60;
		    max, 80 60;
		    visible, 1;
		    rel1
		    {
			relative, 0.0 0.0;
			offset, 2 2;
		    }
		    rel2
		    {
			relative, 1.0 1.0;
			offset, -2 -2;
		    }
		    image {
			normal, "Nebulous_preview.png";
		    }
		}
	    }
	}
	programs
	{
	    program
	    {
		name, "PreviewClicked";
		signal, "mouse,clicked,1";
		source, "img";
		action, SIGNAL_EMIT "PreviewSelected" "";
	    }
	}
    }
}
