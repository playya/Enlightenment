$Id$

Euphoria v0.8.0

Written by Tilman Sauerbeck and various contributors.
See AUTHORS for details/the complete list.


DEPENDENCIES
------------

Euphoria requires the following:

Evas
Ecore
Edje
Esmart
XMMS2
Ruby-EFL
Rake


ABOUT
-------

Euphoria is an audio player which is based on Ecore, Evas and Edje.
It acts as a frontend to XMMS2.

INSTALLATION OF EUPHORIA & XMMS2
--------------------------------
 
To use build Euphoria you will need to first install XMMS2.
See http://wiki.xmms2.xmms.se for instructions.

Now install Euphoria by running "rake install".

The only theme Euphoria currently works with is Multipass, which isn't
shipped with the Euphoria sources.

To build the Multipass theme:
svn co http://code-monkey.de/svn/multipass-eu/trunk multipass-eu
cd multipass-eu
rake
cp multipass.edj /usr/local/share/euphoria/themes

If you didn't install Euphoria to /usr/local, you will have to change
that path, or you can copy the edj file to
~/.xmms2/clients/euphoria/themes instead.

At this point your ready to rock.  Start Euphoria but make sure
the XMMS2 Daemon is running (start via: "xmms2d").

RUNNING EUPHORIA
----------------

For the time being (as of this writting) you need to manage your
play list using the CLI client.  An example session would be:

1) Open an Eterm and start the daemon so you can see debugging
	information: "xmms2d"
2) Open an Eterm to control XMMS2, use the following commands:
	$ xmms2 add /path/to/some/files
 	$ xmms2 add http://205.188.234.65:8022
	$ xmms2 list
	(now the playlist has stuff in it)
3) Start Euphoria with no options.

REPORTING BUGS
---------------

You can report bugs here: http://xcomputerman.com/bugs/


FAQ
-------

Q: Why another damned audio player?
A: -> The purpose of Euphoria has always been to be used as a vehicle
by which to better learn the EFL components.

An audio player was chosen because it's interesting, the OggVorbis
API is very simple and can easily drawn on Ecore's strengths
(ie: idlers and timers) and provides a number of interesting interface
possibilities.

Q: Will you support WinAmp skins?
A: -> Nope.... go use XMMS(1) if you want traditional skins.
Refer to the first question.

But I will admit that I have considered the possiblity of automating
the conversion of WinAmpv3 skins (.wal's) to Edje.
It doesn't look hard, and Edje can do everything and more that WinAmp
can do with it's interface, but in a far more general way.

The problem is really just parsing all that XML (the WA skin config
files are now XML).  With PERL there could probly be an easy conversion,
but if there is one thing I hate parsing it's XML.

It would instantly make this audio player the player to use though!

