
	part {
		name, "base"; // Base Image: Lowest layer
                type, IMAGE;
                mouse_events, 1;
		repeat_events, 1;

	description {
		state, "default" 0.0;
		max,      	413 94;
	       	min,      	413 94;

	rel1 {
		relative, 0.0 0.0;
		offset, 0.0 0.0;
	}
                        
	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;
	}
	
	image {
		normal, "base_layer.png";
	}
				
	border, 6 6 6 6;
	fill {
		smooth, 1;
	}

	}
} 

	part {
		name, "left_bar"; // Bar on the left
		type, IMAGE;
		mouse_events, 1;

	description {
		state, "default" 0.0;
	       	min, 19 94;
	       	max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		  relative, 0.0 0.0;
		  offset, 0 0;
	}

	rel2 {
		  relative, 2.5 1.0;
		  offset, -1 -1;
	}
	       
	image {
		normal, "bar_delay_left.png";
	}
}

	description {
		state, "hilited" 0.0;
	       	min, 19 94;
	       	max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.0  0.0;
		offset, 0.0 0.0;
	}

	rel2 {
		relative, 2.5 1.0;
		offset, -1 -1;
	}
	       
	image {
		normal, "bar_delay_hilited.png";
	}

}

	description {
		state, "clicked" 0.0;
	       	min, 19 94;
	       	max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
	}

	rel2 {
		  relative, 2.5 1.0;
		  offset, -1 -1;
	}
	       
	image {
		normal, "bar_delay_clicked.png";
	}

	}
}
	
	part {
	    	name, "right_bar"; // Bar on the Right
		type, IMAGE;
		mouse_events, 1;

	description {
		state,    	"default" 0.0;
	       	min, 19 94;
	       	max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 1.0  0.0;
		offset, 0 0;
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;	
	}
	       
	image {
		normal, "bar_delay_right.png";
	}

}

	description {
		state, "hilited" 0.0;
	       	min, 19 94;
		max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 1.0  0.0;
		offset, 0 0;
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;
	}
	       
	image {
		normal, "bar_delay_right_hilited.png";
	}

}

	description {
		state, "clicked" 0.0;
	       	min, 19 94;
	       	max, 19 94;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 1.0  0.0;
		offset, 0 0;
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;
	}
	       
	image {
		normal, "bar_delay_right_clicked.png";
	}

	}
}
	
	part {
	    	name, "lcd"; // LCD window: right_lcd in this case
		type, IMAGE;
		mouse_events, 0;

	description {
		state, "default" 0.0;
	       	min, 142 94;
	       	max, 142 94;
	       	align,    0.0 0.0;
	       
	rel1 {
		relative, 1.0  0.0;
		offset, 0 0;
	}
	       		
	rel2 {
		relative, 1.0 1.0;
		offset, -20 -1;
	}
	       
	image {
		normal, "lcd_window.png";
	}
	
	border, 9 9 9 9;
	fill {
		smooth, 0;
	}

	}
}

	part {
		name, "main_w"; // LCD window: Left
		type, IMAGE;
		mouse_events, 0;	  

	description {
		state, "default" 0.0;
	       	min, 142 94;
	       	max, 142 94;
	       	align,    0.0 0.0;
	       
	rel1 {
		relative, 1.0  0.0;
		offset, 0 0;
		to, "left_bar";	
	}
	       		
	rel2 {
		relative, 1.0 1.0;
		offset, -19 0;
		to, "right_bar";
	}
	       
	image {
		normal, "lcd_window.png";
	}
			
	border, 9 9 9 9;
	fill {
		smooth, 0;
	}

	}
}

/* Button PlaceHolders */

	part {
	    	name, "ct_align";
		type, IMAGE;
		mouse_events, 0;	  

	description {
		state, "default" 0.0;
	       	min, 85 28;
	       	max, 85 28;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.4  0.0;
		offset, -1 0;
		to, "base";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "base";
	}
	       
	image {
		normal, "align_top.png";
	}

	}
}
	
	part {
		name, "cl_align";
		type, IMAGE;
		mouse_events, 0;

	description {
		state, "default" 0.0;
	       	min, 22 41;
	       	max, 22 41;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.4  0.0;
		offset, -1 28;
		to, "base";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;
		to, "base";
	}
	       
	image {
		normal, "align_left.png";
	}

	}
}
	
	part {
	    	name, "cc_align";
		type, IMAGE;
		mouse_events, 0;	    

	description {
			state, "default" 0.0;
	       		min, 41 41;
	       		max, 41 41;
	       		align, 0.0 0.0;
	       
	rel1 {
		relative, 0.5  0.0;
		offset, -20 28;
		to, "base";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -1 -1;
		to, "base";	
	}
	       
	image {
		normal, "align_center.png";
	}

	}
}
	
	part {
		name, "cr_align";
		type, IMAGE;
		mouse_events, 0;	    

	description {
		state, "default" 0.0;
	       	max, 22 41;
	       	min, 22 41;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.4  0.0;
		offset, 62 28;
		to, "base";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 2 -1;
		to, "base";
	}
	       
	image {
		normal, "align_right.png";
	}

	}
}
	
	part {
		name, "cb_align";
		type, IMAGE;
		mouse_events, 0;	    

	description {
		state, "default" 0.0;
	       	min, 85 25;
	       	max, 85 25;
	       	align, 0.0 0.0;
	       
	rel1 {
		relative, 0.5  0.0;
		offset, -42 69;
		to, "base";	
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "base";
	}
	       
	image {
		normal, "align_bottom.png";
	}

	}
} 

/* Buttons */

	part {
		name, "prev_button"; // previous_button
		type, IMAGE;
		mouse_events, 1;	    

	description {
		state, "default" 0.0;
	       	min, 13 39;
	       	max, 13 39;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cl_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 5 0;
		to, "cl_align";
	}
			
	image {
		normal, "previous_button.png";
	}
}

	description {
		state, "hilited" 0.0;
	       	min, 13 39;
	       	max, 13 39;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cl_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 5 0;
		to, "cl_align";
	}
		
	image {
		normal, "previous_button_hilited.png";
	}
}

	description {
		state,    "clicked" 0.0;
	       	max,      13 39;
	       	min,      13 39;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cl_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 5 0;
		to, "cl_align";
	}
			
	image {
		normal, "previous_button_clicked.png";
	}

	}
} 

	part {
		name, "pause_button";
		type, IMAGE;
		mouse_events, 1;	    

	description {
		state, "default" 0.0;
	       	min, 39 12;
	       	max, 39 12;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "ct_align";
	}
	       		
	rel2 {
		relative, 1.0 1.0;
		offset, 0 12;
		to, "ct_align";
	}
			
	image {
		normal, "pause_button.png";
	}
}

	description {
		state, "hilited" 0.0;
	       	max, 39 12;
	       	min, 39 12;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "ct_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 12;
		to, "ct_align";
	}
		
	image {
		normal, "pause_button_hilited.png";
	}
}

	description {
		state,    "clicked" 0.0;
		min,      39 12;
		max,      39 12;

	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "ct_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 12;
		to, "ct_align";
	}
			
	image {
		normal, "pause_button_clicked.png";
	}

	}
} 
	
	part {
		name, "play_button";
		type, IMAGE;
		mouse_events, 1;	    

	description {
		state, "default" 0.0;
	       	min, 23 23;
	       	max, 23 23;
	       		
	rel1 {
		  relative, 0.0  0.0;
		  offset, 0 0;
		  to, "cc_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "cc_align";
	}
			
	image {
		normal, "play_button.png";	
	}
			
	border, 1 1 1 1;
	fill {
		smooth, 0;
	}
}	
	
	description {
		state, "hilited" 0.0;
	       	min, 23 23;
	       	max, 23 23;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cc_align";
	}
	
	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "cc_align";
	}
		
	image {
		normal, "play_button_hilited.png";	
	}
	
	border, 1 1 1 1;
	fill {
		smooth, 1;
	}
}

	description {
		state, "clicked" 0.0;
	       	min, 23 23;
	       	max, 23 23;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cc_align";
	}
	
	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "cc_align";
	}
			
	image {
		normal, "play_button_clicked.png";	
	}
			
	border, 1 1 1 1;
	fill {
		smooth, 0;
	}
	    	
	}
}

	part {
		name, "next_button";
		type, IMAGE;
		mouse_events, 1;	    

	description {
		state, "default" 0.0;
	       	min, 13 39;
	       	max, 13 39;
	       		
	rel1 {
		relative, 0.0  0.0;	
		offset, 0 0;
		to, "cr_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -5 0;
		to, "cr_align";
	}
			
	image {
		normal, "next_button.png";
	}
}
	
	description {
		state, "hilited" 0.0;
	       	min, 13 39;
	       	max, 13 39;

	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cr_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -5 0;
		to, "cr_align";
	}
	
	image {
		normal, "next_button_hilited.png";
	}
}

	description {
		state, "clicked" 0.0;
		min, 13 39;
		max, 13 39;

	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cr_align";	
	}

	rel2 {
		relative, 1.0 1.0;
		offset, -5 0;
		to, "cr_align";
	}
	
	image {
		normal, "next_button_clicked.png";
	}

	}
} 

	part {
		name, "stop_button";
		type, IMAGE;
		mouse_events, 1;	    

	description {
		state, "default" 0.0;
	       	min, 39 13;
	       	max, 39 13;
	       		
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cb_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 -8;
		to, "cb_align";
	}
			
	image {
		normal, "stop_button.png";	
	}
}

	description {
		state, "hilited" 0.0;
		min, 39 13;
		max, 39 13;
	
	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cb_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 -8;
		to, "cb_align";
	}
			
	image {
		normal, "stop_button_hilited.png";
	}
}

	description {
		state, "clicked" 0.0;
		min, 39 13;
		max, 39 13;

	rel1 {
		relative, 0.0  0.0;
		offset, 0 0;
		to, "cb_align";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 -8;
		to, "cb_align";
	}
			
	image {
		normal, "stop_button_clicked.png";
	}

	}
}

/* LCD Related parts */

	part {
	    	name, "trans_Rect";
	    	mouse_events,  1;
	   	type, IMAGE;
	    	
	description {
	       	state, "default" 0.0;
	       	min, 119 68;
	       	max, 119 68;
	       		
	rel1 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "main_w";
	}
	       		
	rel2 {
		relative, 0.0  0.0;
		offset,   0 0;
		to,       "main_w";
	}

	image {
		normal, "fake_rect.png";
	}

	}
}
			
	part {
		name, "artist_name";
		type, TEXT;
		//effect, SOFT_SHADOW;
		mouse_events, 0;
		//color_class, "default";
		//text_class, "default";
			
	description {
		state, "default" 0.0;

	rel1 {
		relative, 0.0 0.3;
		offset, 3 -7;
		to, "trans_Rect";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "trans_Rect";
	}

	//color_class: "fg";
	color, 106 95 113 255;
	//color2, 152 151 167 255;
	text {
		text, "Artist Name";    
		font, "Edje.visitor1";            
		size, 7;     
		align, 0.0 0.1;       
	}

               	}
       	}

	part {
		name, "album_name";
		type, TEXT;
		mouse_events, 0;
                        
	description {
		state,  "default" 0.0;

	rel1 {
		relative, 0 0;
		offset, 0 12;
		to, "artist_name";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 0;
		to, "artist_name";
	}

	color,  106 95 113 255;
	text {
		text, "Album Name";
		font, "Edje.visitor1";        
		size, 7;      
		align, 0 0;       
	}
                        
	}
}

	part {
		name, "song_name";
		type,   TEXT;
                        mouse_events, 0;
                        
	description {
		state,  "default" 0.0;

	rel1 {
		relative, 0 0;
		offset, 0 15;
		to, "album_name";
	}

	rel2 {
		relative, 1 0;
		offset, 0 1;
		to, "album_name";
	}

	color,  106 95 113 255;
	text {
		text, "Song Name";    
		font, "Edje.visitor1";           
		size, 7;       
		align, 0 0;       
	}

	}
}

	part {
		name, "track_samplerate";
		type,   TEXT;
 		mouse_events, 0;
                        
	description {
		state,  "default" 0.0;

	rel1 {
		relative, 0 0;
		offset, 0 48;
		to, "album_name";
	}

	rel2 {
		relative, .5 0;
		offset, 0 1;
		to, "album_name";
	}

	color,  106 95 113 255;
	text {
		text, "Track Samplerate";    
		font, "Edje.visitor1";           
		size, 7;       
		align, 0 0;       
	}

	}
}

	part {
		name, "track_bitrate";
		type,   TEXT;
		mouse_events, 0;
                        
	description {
		state,  "default" 0.0;

	rel1 {
		relative, .8 0;
		offset, 0 0;
		to, "track_samplerate";
	}

	rel2 {
		relative, 1 0;
		offset, 0 1;
		to, "track_samplerate";
	}

	color,  106 95 113 255;
	text {
		text, "Track Bitrate";    
		font, "Edje.visitor1";           
		size, 7;       
		align, 0 0;       
	}

	}
}

	part {
		name, "quit";
		type, IMAGE;
		mouse_events, 1;
		
	description {
		min, 10 10;
	       	max, 10 10;
		state, "default" 0.0;

	rel1 {
		relative, 1 0;
		offset, -4 0;
		to, "trans_Rect";
	}

	rel2 {
		relative, 1.0 0.0;
		offset, -8 12;
		to, "trans_Rect";
	}

	image {
		normal, "close_button.png";
	}

	fill {
		smooth, 1;
	}
}

	description {
		min, 10 10;
	       	max, 10 10;
		state, "default" 1.0;
		visible, 0;

	rel1 {
		relative, 1 0;
		offset, -4 0;
		to, "trans_Rect";
	}

	rel2 {
		relative, 1.0 0.0;
		offset, -8 12;
		to, "trans_Rect";
	}

	image {
		normal, "close_button.png";
	}

	fill {
		smooth, 1;
	}
}

	description {
		min, 10 10;
	       	max, 10 10;
		state, "hilited" 0.0;

	rel1 {
		relative, 1 0;
		offset, -4 0;
		to, "trans_Rect";
	}

	rel2 {
		relative, 1.0 0.0;
		offset, -8 12;
		to, "trans_Rect";
	}

	image {
		normal, "close_button_hilited.png";
	}

	fill {
		smooth, 1;
	}
}

	description {
		min, 10 10;
	       	max, 10 10;
		state, "clicked" 0.0;

	rel1 {
		relative, 1.0 0.0;
		offset, -4 0;
		to, "trans_Rect";
	}

	rel2 {
		relative, 1 0;
		offset, -8 12;
		to, "trans_Rect";
	}

	image {
		normal, "close_button_clicked.png";
	}

	fill {
		smooth, 1;
	}

       	}
}

	part {
		name, "arrow";
		type, IMAGE;
		mouse_events, 1;
		
	description {
		min, 7 4;
	       	max, 7 4;
		state, "default" 0.0;

	rel1 {
		relative, 0 0;
		offset, 21 0;
		to, "trans_Rect";
	}

	rel2 {
		relative, 0 0;
		offset, -8 12;
		to, "trans_Rect";
	}

	image {
		normal, "arrow.png";
	}

	fill {
		smooth, 1;
	}
              	
	}
}

	part {
		name, "playlist"; // Playlist area: invisible
		type, RECT;
		mouse_events, 1;

	description {
		state, "default" 0.0;
	       	min,  122 70;
	       	max, 122 70;

	rel1 {
		relative, 0 0;
		offset, 0 0;
		to, "lcd";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 1 2;
		to, "lcd";
	}
				
	color, 0 0 0 0;
	}
}

	part {
		name, "layer_in";
		type, RECT;
		mouse_events, 1;
		
	description {
		state, "default" 0.0;
		min, 122 54;
	       	max, 122 54;
		color, 238 238 244 0;
		visible, 1;

	rel1 {
		relative, 0 0;
		offset, 0 0;
		to, "main_w";
	}
	
	rel2 {
		relative, 1.0 1.0;
		offset, 0 2;
		to, "main_w";
	}
}
	
	description {
		state, "default" 1.0;
		min, 122 54;
	       	max, 122 54;
		visible, 1;
		color, 238 238 244 255;
        
	rel1 {
		relative, 0.0 0.0;
		offset, 0 0;
		to, "main_w";
	}

	rel2 {
		relative, 1.0 1.0;
		offset, 0 2;
		to, "main_w";
	}

	}
}

	part {
	    	name, "a_a";
		mouse_events, 0;
				
	description {
		state, "default" 0.0;
		min, 132 67;
		max, 132 67;
		visible, 0;
	       
	rel1 {
		relative, 0.0 0.5;
		offset, 0 0;
		to, "layer_in" 0.0;	
	}
	       
	rel2 {
		relative, 1.0  0.5;
		offset, 0 0;
		to, "layer_in" 0.0;
	}
	      
	image {

	normal, "a_base.png";
		tween, "a_1.png";
		tween, "a_2.png";
		tween, "a_3.png";
		tween, "a_4.png";
		tween, "a_5.png";
		tween, "a_6.png";
		tween, "a_7.png";
		tween, "a_8.png";
		tween, "a_9.png";
		tween, "a_10.png";
		tween, "a_11.png";
		tween, "a_12.png";
		tween, "a_13.png";
		tween, "a_14.png";
		tween, "a_15.png";
		tween, "a_16.png";
		tween, "a_17.png";
		tween, "a_18.png";
		tween, "a_19.png";
		tween, "a_20.png";
		tween, "a_21.png";
		tween, "a_22.png";
		tween, "a_21.png";
		tween, "a_20.png";
		tween, "a_19.png";
		tween, "a_18.png";
		tween, "a_17.png";
		tween, "a_16.png";
		tween, "a_15.png";
		tween, "a_14.png";
		tween, "a_13.png";
		tween, "a_12.png";
		tween, "a_11.png";
		tween, "a_10.png";
		tween, "a_9.png";
		tween, "a_8.png";
		tween, "a_7.png";
		tween, "a_6.png";
		tween, "a_5.png";
		tween, "a_4.png";
		tween, "a_3.png";
		tween, "a_2.png";
		tween, "a_1.png";

	}
}

	description {
		state, "default" 1.0;
	       	max, 132 67;
	       	min, 132 67;
	       	//align, 0.5 0.5; // FixMe
		visible, 1;
	       
	rel1 {
		relative, 0.0  0.5;
		offset,   0    0;
		to, "layer_in" 1.0;
	}
	       
	rel2 {
		relative, 1.0  0.5;
		offset, 0 0;
		to, "layer_in" 1.0;
	}
	      
	image {

	normal, "a_base.png";
		tween, "a_1.png";
		tween, "a_2.png";
		tween, "a_3.png";
		tween, "a_4.png";
		tween, "a_5.png";
		tween, "a_6.png";
		tween, "a_7.png";
		tween, "a_8.png";
		tween, "a_9.png";
		tween, "a_10.png";
		tween, "a_11.png";
		tween, "a_12.png";
		tween, "a_13.png";
		tween, "a_14.png";
		tween, "a_15.png";
		tween, "a_16.png";
		tween, "a_17.png";
		tween, "a_18.png";
		tween, "a_19.png";
		tween, "a_20.png";
		tween, "a_21.png";
		tween, "a_22.png";
		tween, "a_21.png";
		tween, "a_20.png";
		tween, "a_19.png";
		tween, "a_18.png";
		tween, "a_17.png";
		tween, "a_16.png";
		tween, "a_15.png";
		tween, "a_14.png";
		tween, "a_13.png";
		tween, "a_12.png";
		tween, "a_11.png";
		tween, "a_10.png";
		tween, "a_9.png";
		tween, "a_8.png";
		tween, "a_7.png";
		tween, "a_6.png";
		tween, "a_5.png";
		tween, "a_4.png";
		tween, "a_3.png";
		tween, "a_2.png";
		tween, "a_1.png";
	}
	
	}
}

	part {
		name, "a_a_paused";
		mouse_events, 0;
				
	description {
		state, "default" 0.0;
		min, 132 67;
		max, 132 67;
		visible, 0;
	       
	rel1 {
		relative, 0.0 0.5;
		offset, 0 0;
		to, "layer_in" 0.0;
	}
	       
	rel2 {
		relative, 1.0  0.5;
		offset, 0 0;
		to, "layer_in" 0.0;
	}
	      
	image {

	normal, "a_base.png";
		tween, "a_20.png";
	}
}

	description {
		state, "default" 1.0;
		max, 132 67;
		min, 132 67;
		visible, 1;
	       
	rel1 {
		relative, 0.0 0.5;
		offset, 0 0;
		to, "layer_in" 0.0;
	}
	       
	rel2 {
		relative, 1.0 0.5;
		offset, 0 0;
		to, "layer_in" 0.0;
	}
	      
	image {
		  	
	normal, "a_base.png";
		tween, "a_20.png";
	}

	}
}

	part { name, "seekerTrough";
	description { state, "default" 0.0; visible, 1; min, 10 5; max, 9999 5;
	rel1 { to, "trans_Rect"; relative, 0 1; offset, 3 7; }
	rel2 { to, "trans_Rect"; relative, 1 0; offset, -6 13; }
	image { normal, "seeker_trough.png"; }
	border, 5 5 1 1; }

	description { state, "default" 1.0; visible, 0; min, 10 5; max, 9999 5;
	rel1 { to, "trans_Rect"; relative, 0 1; offset, 3 7; }
	rel2 { to, "trans_Rect"; relative, 1 0; offset, -6 13; }
	image { normal, "seeker_trough.png"; }
	border, 5 5 1 1; } 

	description { state, "default" 0.1; visible, 1; min, 10 5; max, 9999 5;
	rel1 { to, "trans_Rect"; relative, 0 1; offset, 3 7; }
	rel2 { to, "trans_Rect"; relative, 1 0; offset, -6 13; }
	image { normal, "seeker_trough.png"; }
	border, 5 5 1 1; } }

	part { name, "time_text"; type, TEXT; mouse_events, 0;                      
	description { state, "default" 0.0; visible, 1;
	rel1 { relative, .3 1; offset, 2 22; }
	rel2 { relative, 1 0; offset, 0 10; }
	color,  106 95 113 255;
	text { text, "00:00"; font, "Edje.visitor1"; size, 7; align, 0 0; } }

	description { state, "default" 0.1; visible, 1;
	rel1 { relative, .3 1; offset, 2 22; }
	rel2 { relative, 1 0; offset, 0 10; }
	color,  106 95 113 255;
	text { text, "00:00"; font, "Edje.visitor1"; size, 7; align, 0 0; } }

	description { state, "default" 1.0; visible, 0;
	rel1 { relative, .3 1; offset, 2 22; }
	rel2 { relative, 1 0; offset, 0 10; }
	color,  106 95 113 255;
	text { text, "00:00"; font, "Edje.visitor1"; size, 7; align, 0 0; } } }

	part { name, "seekerBar";
	description { state, "default" 0.0; visible, 1; min, 0 5; max, 9999 5;
	rel1 { to, "seekerTrough"; relative, 0 0; offset, 0 0; }
	rel2 { to_x, "seeker"; to_y, "seekerTrough"; relative, 0 1; offset, 0 -1; }
	image { normal, "seeker_bar.png"; }
	border, 5 5 1 1; } 

	description { state, "default" 0.1; visible, 1; min, 0 5; max, 9999 5;
	rel1 { to, "seekerTrough"; relative, 0 0; offset, 0 0; }
	rel2 { to_x, "seeker"; to_y, "seekerTrough"; relative, 0 1; offset, 0 -1; }
	image { normal, "seeker_bar.png"; }
	border, 5 5 1 1; }

	description { state, "default" 1.0; visible, 0; min, 0 5; max, 9999 5;
	rel1 { to, "seekerTrough"; relative, 0 0; offset, 0 0; }
	rel2 { to_x, "seeker"; to_y, "seekerTrough"; relative, 0 1; offset, 0 -1; }
	image { normal, "seeker_bar.png"; }
	border, 5 5 1 1; } }

	part { name, "seeker"; type, RECT; 
	dragable { x, 1 1 1;  y, 0 0 0; confine, "seekerTrough"; }
	description { state, "default" 0.0; visible, 0; color, 0 0 0 255; min, 1 5; max, 1 5;
	rel1 { to, "seekerTrough"; relative, 0 0; offset, 0 0; }
	rel2 { to, "seekerTrough"; relative, 1 1; offset,  -1 -1; } 
	border, 5 5 1 1; } }

	part { name, "seeker_grabber"; type, RECT;
	description { state, "default" 0.0; visible, 1; color, 0 0 0 0;
	rel1 { to, "seekerTrough"; relative, 0 0; offset, -2 -2; }
	rel2 { to, "seekerTrough"; relative, 1 1; offset,  1 1; } } }
