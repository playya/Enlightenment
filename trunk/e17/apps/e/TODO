MINI FREEZE:

Status: ON

What is this:

We will have lots more of these during e17 devel for serveral reasons. A mini
freeze is a call to STOP adding new features and funkiness. It means people
need to stop and go BACK over their code and fix FIXME's. All those bits of
code where things are string together with sticky tape and chewing gum need
to be fixed PROPERLY. This may mean pooling code into a common subsystem
(this is not a new feature. it is fixing loose ends with design). This may
mean adding api calls to make implementation cleaner or remove hacks. it may
mean more debugging tools in things like e_object and more checks for sanity.

This means testing stuff so it doesnt crash. or make things unusable or leak
memory. check leaks (use valgrind or whatever tools) to check for leaks, and
for stability issues. double check you return the correct values from
functions or use return values. Check callbacks. Compile with -W -Wall to
help find obvious bugs waiting to happen. Modules need to clean up on
shutdown. Code needs to use the appropriate subsystem that is available for
what it wants OR a subsystem needs writing if it will be a shared/common
feature.

This issues list must be brought to 0 size before E17 features can move
further.

Current freeze issues are:

ISSUES:

* gadman overlay deny doesnt work for edge only gadgets
* add a menu item to each gadman client menu to edge editing mode
* pager needs an overhaul
* virtual desktops need fixing to work with zones properly
* all modules need to respect zones
* dropshadow is not optimal and has extreme edge-case bugs
* e_apps polling/updates is broken
* objects need object types to check the right obj type is passed
* border show/hide needs to show from top down and hide from bottom up
* restart loses window properties (stickyness)
* restart loses zone and container info
* virtual desktops need an overhaul. hacked int waay too quickly.

<add more issues as they are found>










Some of the things (in very short form) that need to be done to E17...

Also look at all the .c files - they have their own localized TODO lists

These are in no particular order:

* gadget resize resist
* gadget containers (shelves)
* all modules should have a "enter gadget edit mode" option in their menus
* resize resist
* fix border raise/lower to use certain marker "windows" to not raise above or lower below (menus should always be above the top marker window for example)
* track mouse location on a border/desktop level
* add desktop object/element management interface (sanitise module hell there)
* add key input focus control for desktop modules
* finish off icccm support
* optimize clock theme (speed/cpu)
* make shading go in all 4 directions
* add keybindings
* add general actions to be hooked to button/key bindings
* add "icon box"
* add pagers
* add netwm support
* different cursors for different parts of the screen
* alt+tab status list of windows
* add a "taskbar"
* add cpu module
* add cpu speedstep module
* make root menus configurable (what mouse/key brings up what)
* add favorites apps menu items for editing (at the bottom or such)
* add a way to access all apps
* list window properties then only fetch the ones that exist on window map
* non opaque move/resize
* optimize dropshadow module to blure faster/more efficiently
* change evas and ecore_evas to create shape rect lists directly
* support shaped clients borders etc.
* ibar need to support label pop-ups
* borders need to be able to change border on the fly
* add border menus
* add push-away move
* add window move/resize snap/resist to adjacent window
* add window glueing
* add window tabs (multiple clients)
* add setup/install wizard to seed eapp files etc. etc.
* make ipc try open on other ports numbers if current is taken
* fix error dialogs to also have a themed/edje one with proper text layout
* add clientinfo pane/popdown for borders
* add a button area expansion for borders
* add template button for expanded buttons
* add a status area expansion for borders
* add a status module template for borders
* allow desktop modules to define no-cover zones
* fix eapps to properly follow on disk changes
* support text and color classes
* add tooltips
* add fullscreen support (e16 xvidmode or xrandr style)
* add screen rotation info to managers
* make xrandr support get rotation
* add rotation to containers
* fix multihead support (executing with DISPLAY=:0.1 on screen 1 for example)
* xinerama support
* maybe add systray module/support?
* fix all loose ends
* allow object paranoia to be a runtime option too
* detect segv and report it (maybe turn on obj paranoia)
* add sliders, radio and check buttons for clientinfo pane
* display coords while moving/resizing
* add separate app menu bars at top of screen support
* add "osd" subsystem for things like volume controls on keybboards, etc. that overlay the screen
* add really nice "about" box with theme, authors credits list etc etc.
* init splash needs to be able to display icons for startup
* init splash needs te be able to be signalled "end of init" and it can respond with a "splash end" signal
* "immortali" windows (e will not allow that window to be closed or will refuse to exit as long as the immortal flags is set until it is unset to stop users from doing silly things like logging out while important stuff is happening in that window -a menu option for this woudl be nice)
* ibar lamp needs shrot timer on mouse out for hide before hiding (and del the time on mouse in)
