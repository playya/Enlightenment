dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(expedite, 0.6.0)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

if test "x${bindir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    PACKAGE_BIN_DIR="${ac_default_prefix}/bin"
  else
    PACKAGE_BIN_DIR="${prefix}/bin"
  fi
else
  PACKAGE_BIN_DIR="${bindir}"
fi
AC_SUBST(PACKAGE_BIN_DIR)

if test "x${libdir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    PACKAGE_LIB_DIR="${ac_default_prefix}/lib"
  else
    PACKAGE_LIB_DIR="${prefix}/lib"
  fi
else
  PACKAGE_LIB_DIR="${libdir}"
fi
AC_SUBST(PACKAGE_LIB_DIR)

if test "x${prefix}" = "xNONE"; then
  PACKAGE_DATA_DIR="${ac_default_prefix}/share/${PACKAGE}"
else
  PACKAGE_DATA_DIR="${prefix}/share/${PACKAGE}"
fi
AC_SUBST(PACKAGE_DATA_DIR)

PKG_CHECK_MODULES([EVAS], evas)

dnl OpenGL GLEW
PKG_CHECK_EXISTS(evas-opengl-glew,
  [
    AC_DEFINE(HAVE_EVAS_OPENGL_GLEW, 1, [Evas GL Glew Engine Support])
    have_opengl_glew="yes"
    glew_libs="-lglew32 -lgdi32"
  ],
  [ have_opengl_glew="no" ]
)
AM_CONDITIONAL(BUILD_OPENGL_GLEW, test "x$have_opengl_glew" = "xyes")

dnl OpenGL X11
PKG_CHECK_EXISTS(evas-opengl-x11,
  [
    AC_DEFINE(HAVE_EVAS_OPENGL_X11, 1, [Evas GL X11 Engine Support])
    have_opengl_x11="yes"
  ],
  [ have_opengl_x11="no" ]
)
AM_CONDITIONAL(BUILD_OPENGL_X11, test "x$have_opengl_x11" = "xyes")

dnl Software X11
PKG_CHECK_EXISTS(evas-software-x11,
  [
    AC_DEFINE(HAVE_EVAS_SOFTWARE_X11, 1, [Evas Software X11 Engine Support])
    have_software_x11="yes"
  ],
  [ have_software_x11="no" ]
)
AM_CONDITIONAL(BUILD_SOFTWARE_X11, test "x$have_software_x11" = "xyes")

dnl XRender X11
PKG_CHECK_EXISTS(evas-xrender-x11,
  [
    AC_DEFINE(HAVE_EVAS_XRENDER_X11, 1, [Evas XRender X11 Engine Support])
    have_xrender_x11="yes"
  ],
  [ have_xrender_x11="no" ]
)
AM_CONDITIONAL(BUILD_XRENDER_X11, test "x$have_xrender_x11" = "xyes")

dnl Software 16bit X11
PKG_CHECK_EXISTS(evas-software-16-x11,
  [
    AC_DEFINE(HAVE_EVAS_SOFTWARE_16_X11, 1, [Evas Software 16bit X11 Engine Support])
    have_software_16_x11="yes"
  ],
  [ have_software_16_x11="no" ]
)
AM_CONDITIONAL(BUILD_SOFTWARE_16_X11, test "x$have_software_16_x11" = "xyes")

# TODO: Check availability of libs
dnl DirectDraw
PKG_CHECK_EXISTS(evas-software-ddraw,
  [
    AC_DEFINE(HAVE_EVAS_SOFTWARE_DDRAW, 1, [Evas Software DirectDraw Engine Support])
    have_software_ddraw="yes"
    ddraw_libs="-lddraw -ldxguid"
  ],
  [ have_software_ddraw="no" ]
)
AM_CONDITIONAL(BUILD_SOFTWARE_DDRAW, test "x$have_software_ddraw" = "xyes")

# TODO: Check availability of libs
dnl 16bit DirectDraw
PKG_CHECK_EXISTS(evas-software-16-ddraw,
  [
    AC_DEFINE(HAVE_EVAS_SOFTWARE_16_DDRAW, 1, [Evas Software 16bit DirectDraw Engine Support])
    have_software_16_ddraw="yes"
    ddraw_libs="-lddraw -ldxguid"
  ],
  [ have_software_16_ddraw="no" ]
)
AM_CONDITIONAL(BUILD_SOFTWARE_16_DDRAW, test "x$have_software_16_ddraw" = "xyes")

# TODO: Check availability of libs
dnl Direct3D
PKG_CHECK_EXISTS(evas-direct3d,
  [
    AC_DEFINE(HAVE_EVAS_DIRECT3D, 1, [Evas Direct3D Engine Support])
    have_direct3d="yes"
    d3d_libs="-ld3d9 -ld3dx9d"
  ],
  [ have_direct3d="no" ]
)
AM_CONDITIONAL(BUILD_DIRECT3D, test "x$have_direct3d" = "xyes")

dnl Software SDL
PKG_CHECK_EXISTS(evas-software-sdl,
  [
    AC_DEFINE(HAVE_EVAS_SOFTWARE_SDL, 1, [Evas Software SDL Engine Support])
    have_software_sdl="yes"
  ],
  [ have_direct3d="no" ]
)
AM_CONDITIONAL(BUILD_SOFTWARE_SDL, test "x$have_software_sdl" = "xyes")

if test "x$have_software_x11" = "xyes" -o "x$have_software_16_x11" = "xyes" -o "x$have_xrender_x11" = "xyes" -o "x$have_opengl_x11" = "xyes"; then
  AC_PATH_XTRA
  AC_CHECK_HEADERS(X11/Xlib.h X11/Xutil.h,
    [ have_x11="yes" ],
    [ have_x11="no" ])
  x_dir=${x_dir:-/usr/X11R6}
  x_cflags=${x_cflags:--I${x_includes:-$x_dir/include}}
  x_libs="${x_libs:--L${x_libraries:-$x_dir/lib}} -lX11 -lXext"
fi
AM_CONDITIONAL(BUILD_X11, test "x$have_x11" = "xyes")

if test "x$have_software_sdl" = "xyes"; then
  PKG_CHECK_MODULES([SDL], sdl,
    [ have_sdl="yes" ],
    [ have_sdl="no" ])
fi
AM_CONDITIONAL(BUILD_SDL, test "x$have_sdl" = "xyes")

AC_SUBST(x_cflags)
AC_SUBST(x_libs)
AC_SUBST(ddraw_libs)
AC_SUBST(ddraw_16_libs)
AC_SUBST(d3d_libs)
AC_SUBST(glew_libs)

AC_OUTPUT([
Makefile
src/Makefile
src/bin/Makefile
data/Makefile
])

echo
echo "  $PACKAGE $VERSION"
echo
echo "  Engines:"
echo "    Software X11.................: ${have_software_x11}"
echo "    Software X11 16 bits.........: ${have_software_16_x11}"
echo "    X Render X11.................: ${have_xrender_x11}"
echo "    Open GL X11..................: ${have_opengl_x11}"
echo "    Open GL Glew.................: ${have_opengl_glew}"
echo "    Software DirectDraw..........: ${have_software_ddraw}"
echo "    Software DirectDraw 16 bits..: ${have_software_16_ddraw}"
echo "    Direct3D.....................: ${have_direct3d}"
echo "    Software SDL.................: ${have_software_sdl}"
echo
echo "  Installation:"
echo "    prefix.......................: ${prefix}"
echo
