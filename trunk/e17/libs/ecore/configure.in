dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AC_ISC_POSIX
AM_INIT_AUTOMAKE(ecore, 1.0.0_pre4)
AM_CONFIG_HEADER(config.h)

AC_C_BIGENDIAN
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
fi

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
fi

							
dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}")
fi
		
dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_MSG_CHECKING(whether ecore_x module is to be built)

ecore_x_cflags="";
ecore_x_libs="";

x_dir="";
x_includes="";
x_cflags="";
x_libs="";
x_ldflags="";

AC_ARG_ENABLE(ecore-x, 
[  --enable-ecore-x                enable the ecore_x module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_X, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_X)
  x_dir="/usr/X11R6";
  x_includes="";
  x_cflags="-I"$x_dir"/include"
  x_libs="-L"$x_dir"/lib -lX11 -lXext"
  x_ldflags="";
  ecore_x_libs="-lecore_x";
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_X, false)
]
)

AC_SUBST(x_cflags)
AC_SUBST(x_includes)
AC_SUBST(x_ldflags)
AC_SUBST(x_libs)

AC_SUBST(ecore_x_cflags)
AC_SUBST(ecore_x_libs)

AC_MSG_CHECKING(whether ecore_job module is to be built)

ecore_job_cflags="";
ecore_job_libs="";

AC_ARG_ENABLE(ecore-job, 
[  --enable-ecore-job              enable the ecore_job module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_JOB, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_JOB)
  ecore_job_libs="-lecore_job";
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_JOB, false)
]
)

AC_SUBST(ecore_job_cflags)
AC_SUBST(ecore_job_libs)

ecore_fb_cflags="";
ecore_fb_libs="";

AC_MSG_CHECKING(whether ecore_fb module is to be built)

AC_ARG_ENABLE(ecore-fb, 
[  --enable-ecore-fb               enable the ecore_fb module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_FB, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_FB)
  ecore_fb_libs="-lecore_fb";
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_FB, false)
]
)

AC_SUBST(ecore_fb_cflags)
AC_SUBST(ecore_fb_libs)

ecore_evas_cflags="";
ecore_evas_libs="";

evas_cflags="";
evas_libs="";

AC_ARG_WITH(evas-config,
[  --with-evas-config=EVAS_CONFIG    use evas-config specified ],
[
  PROG_CONFIG=$withval;
  echo "using "$PROG_CONFIG" for evas-config";
],[
  PROG="evas-config";
  AC_PATH_PROG(PROG_CONFIG, $PROG, "", $PATH)
])
EVAS_CONFIG=$PROG_CONFIG

AC_MSG_CHECKING(whether ecore_evas module is to be built)

AC_ARG_ENABLE(ecore-evas, 
[  --enable-ecore-evas             enable the ecore_evas module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_EVAS, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_EVAS)
  if [ test -z $EVAS_CONFIG ]; then
    echo $PROG " is not in your \$PATH. Please ensure it is.";
    echo "Read the manual page for you shell as to how to extend your path.";
    echo "FATAL ERROR. ABORT.";
    exit -1;
  fi
  evas_cflags=`$EVAS_CONFIG --cflags`
  evas_libs=`$EVAS_CONFIG --libs`
  ecore_evas_libs="-lecore_evas";
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_EVAS, false)
]
)

AC_SUBST(evas_cflags)
AC_SUBST(evas_libs)

AC_SUBST(ecore_evas_cflags)
AC_SUBST(ecore_evas_libs)

AC_MSG_CHECKING(whether ecore_evas gl support is to be built)

AC_ARG_ENABLE(ecore-evas-gl, 
[  --enable-ecore-evas-gl          enable gl in the ecore_evas module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_EVAS_GL, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_EVAS_GL)
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_EVAS_GL, false)
]
)

AC_MSG_CHECKING(whether ecore_con module is to be built)

ecore_con_cflags="";
ecore_con_libs="";

AC_ARG_ENABLE(ecore-con, 
[  --enable-ecore-con              enable the ecore_con module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_CON, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_CON)
  ecore_con_libs="-lecore_con"
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_CON, false)
]
)

AC_SUBST(ecore_con_cflags)
AC_SUBST(ecore_con_libs)

AC_MSG_CHECKING(whether ecore_ipc module is to be built)

ecore_ipc_cflags="";
ecore_ipc_libs="";

AC_ARG_ENABLE(ecore-ipc, 
[  --enable-ecore-ipc              enable the ecore_ipc module], [
  AC_MSG_RESULT(yes)
  AM_CONDITIONAL(BUILD_ECORE_IPC, test "$enableval" = "yes")
  AC_DEFINE(BUILD_ECORE_IPC)
  ecore_ipc_libs="-lecore_ipc"
], [
  AC_MSG_RESULT(no)
  AM_CONDITIONAL(BUILD_ECORE_IPC, false)
]
)

AC_SUBST(ecore_ipc_cflags)
AC_SUBST(ecore_ipc_libs)

AC_OUTPUT([
Makefile
ecore-config
src/Makefile
src/bin/Makefile
src/lib/Makefile
src/lib/ecore/Makefile
src/lib/ecore_job/Makefile
src/lib/ecore_x/Makefile
src/lib/ecore_fb/Makefile
src/lib/ecore_evas/Makefile
src/lib/ecore_con/Makefile
src/lib/ecore_ipc/Makefile
debian/Makefile
], [
chmod +x ecore-config
]
)
