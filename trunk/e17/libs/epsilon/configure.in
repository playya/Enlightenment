dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(epsilon, 0.3.0.003)
AM_CONFIG_HEADER(src/config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_BIGENDIAN
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall " ;;
  esac
fi
changequote([,])dnl

AC_ARG_WITH(imlib2,
        [  --with-imlib2=DIR       use imlib2 in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
        LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(epeg,
        [  --with-epeg=DIR       use epeg in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
        LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(png,
        [  --with-png=DIR       use png in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
        LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(evas,
        [  --with-evas=DIR       use evas in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
        LIBS="-L$withval/lib $LIBS"])
AC_ARG_WITH(ecore,
        [  --with-ecore=DIR       use ecore in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
        LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(imlib2, 1.0.0, [
  AC_SUBST(imlib_libs)
  AC_SUBST(imlib_cflags) ],
  AC_MSG_ERROR(Cannot find imlib2: Is imlib2-config in the path?) )
imlib_libs=`imlib2-config --libs`
imlib_cflags=`imlib2-config --cflags`
AC_SUBST(imlib_libs)
AC_SUBST(imlib_cflags)

have_png="no"
have_epeg="no"
epeg_libs=""
epeg_cflags=""
dnl Make sure the epeg header/lib is available
AC_CHECK_HEADER( Epeg.h, 
  [ AC_DEFINE(HAVE_EPEG_H, 1, [Epeg.h available]) 
    have_epeg="yes" 
    epeg_libs=`epeg-config --libs`
    epeg_cflags=`epeg-config --cflags` ],
  [ AC_MSG_WARN(Cannot find Epeg.h on your system: jpeg thumbnail suckage!) ])
AC_CHECK_LIB(epeg, epeg_file_open, [ 
    AC_DEFINE(HAVE_EPEG_LIB, 1, [libepeg available]) 
])
AC_SUBST(epeg_libs)
AC_SUBST(epeg_cflags)

dnl Make sure the png header/lib is available
AC_CHECK_HEADER( png.h, 
  [ AC_DEFINE(HAVE_PNG_H, 1, [png.h available]) 
    have_png="yes" 
    LIBS="$LIBS -lpng -lz -lm" ], 
  [ AC_MSG_ERROR(Cannot find png.h on your system, try --with-png=) ])
AC_CHECK_LIB(png, png_create_read_struct, [ 
    AC_DEFINE(HAVE_PNG_LIB, 1, [libpng available]) 
])
  
AC_PATH_PROG(PERL, perl, 0)
AC_SUBST(PERL)

dnl Make sure the Evas header/lib is available
AC_CHECK_HEADER( Evas.h, 
  [ AC_DEFINE(HAVE_EVAS_H, 1, [Evas.h available]) 
    have_evas="yes" 
    evas_libs=`evas-config --libs`
    evas_cflags=`evas-config --cflags` ],
  [ AC_MSG_WARN(Cannot find Evas.h on your system: edje thumbnail suckage!) ])
AC_CHECK_LIB(evas, evas_object_rectangle_add, [ 
    AC_DEFINE(HAVE_EVAS_LIB, 1, [libevas available]) 
])
AC_SUBST(evas_libs)
AC_SUBST(evas_cflags)

dnl Make sure the Ecore_Evas header/lib is available
AC_CHECK_HEADER( Ecore_Evas.h, 
  [ AC_DEFINE(HAVE_ECORE_EVAS_H, 1, [Ecore_Evas.h available]) 
    have_evas="yes" 
    ecore_libs=`ecore-config --libs`
    ecore_cflags=`ecore-config --cflags` ],
  [ AC_MSG_WARN(Cannot find Ecore_Evas.h on your system: edje thumbnail suckage
) ])
AC_CHECK_LIB(ecore_evas, ecore_evas_buffer_new, [ 
    AC_DEFINE(HAVE_ECORE_EVAS_LIB, 1, [libecore_evas available]) 
])
AC_SUBST(ecore_libs)
AC_SUBST(ecore_cflags)

dnl Make sure the Edje header/lib is available
AC_CHECK_HEADER( Edje.h, 
  [ AC_DEFINE(HAVE_EDJE_H, 1, [Edje.h available]) 
    have_edje="yes" 
    edje_libs=`edje-config --libs`
    edje_cflags=`edje-config --cflags` ],
  [ AC_MSG_WARN(Cannot find Edje.h on your system: edje thumbnail suckage!) ])
AC_CHECK_LIB(edje, edje_object_add, [ 
    AC_DEFINE(HAVE_EDJE_LIB, 1, [libedje available]) 
])
AC_SUBST(edje_libs)
AC_SUBST(edje_cflags)


AC_OUTPUT([
Makefile
epsilon-config
src/Makefile
src/lib/Makefile
src/lib/exiftags/Makefile
src/bin/Makefile
], [
chmod +x epsilon-config
]
)

echo
echo "Finished configuring $PACKAGE $VERSION"
echo
echo "Support for freedesktop png thumbnailing .... $have_png"
echo "Support for epeg thumbnail extension     .... $have_epeg"
echo
echo "Now type 'make' (gmake on some systems) to compile $PACKAGE"
echo

