EWL TODO
========

- Ability to attach arbitrary cursors to each widget. Specific data key
  lookups could be used.
- In ewl_init should options be parsed after loading config values from
  ecore_config. ewl_init_parse_options() vs. ewl_config_init()

- fix mismatch between use_engine in ewl_init() and ewl_config.evas.render_method 

- Ewl_Entry 
    - Text wrap fixups.
    - Need to make the text scroll over as you type past the end of the entry box.

- Tree selection mode set and themeing (MULTI/SINGLE/EXTENDED/NONE).
	- Invert on mouse click (behavior depends upon select mode).
	- determination of whether a row is selected or not (ewl_[tree_]row_selected).

- ColorChooser needs a slider for choosing alpha too, and an int a parameter for
  get / set to match

- Enabled/Disabled status for ALL applicable widgets.

- Need to return a context when items are pushed onto the status bar so that
  a context can be removed without popping off the stack

- all the themes need to be gone over, cleaned up and corrected.

- [BUG] Fix size of the seeker.
- [BUG] The Ewl_Paned widget dosen't allow resizing to the right. One way
        only at the moment.
- [BUG] Default theme when using the imenu/menu the submenu dosen't highlight on
        mouse over.
- [BUG] When using the menu clicking on the label a second time dosen't
        close the menu.
- [BUG] Spinner seems to resize itself slightly larger even when it dosen't
        have too.
- [BUG] The arrows for the spinner need to be smaller.
- [BUG] The arrows for the spinner need to appear on e17 & zero theme
- [BUG] The ewl_test seems to get a small gap between the right edje of the
        test and the trough for the scrollbar. Should be flush.
        - The 'Password' test seems to make this gap grow.
- [BUG] The first time a tooltip pops up in the ewl_test (tooltip test) it
        appears over the button, instead of off the end of the mouse. Subsequent
        activations are in the correct spot
- [BUG] Dialog text bounds are not considered when packing the window
- [BUG] Grid and Table layouts do not pack or resize correctly. The child show
  and resize callbacks do not set the preferred inner size, this is necessary
  for correct initial size. Their logic is just plain wrong right now.
- [BUG] Seem to have lost the .. entry in the filedialog files list.
        Something wrong with the regex's or caused by something in
	ecore_file

- Need to do some work on the tree.
  - add ability to wrap text in tree nodes
  - add ability to clear all rows under a parent row
  - add ability to set row to expand when item clicked (ie
    ewl_tree_row_expand_on_click_set())
  - horizontal scrolling is wacked
  - add ability to turn highlight off for certain rows/nodes
  - scrollbar dosen't always appear when expected using the tree
  - if you have the tree so it has the scroll bar appear, if you're at the
    bottom of the scrollarea and you expand a row, the text shoudln't shift
    up. The scrollpane should be adjusted so the line you expanded stays
    where it is and everything shifts down.
  - Proposed API example:

	tree = ewl_tree_new(2);

	node = ewl_tree_node_new();
	ewl_container_child_append(tree, node);

	row = ewl_row_new();
	ewl_container_child_append(node, row);

	text = ewl_text_new("Row 1 Column 1");
	ewl_container_child_append(row, text);

	text = ewl_text_new("Row 1 Column 2");
	ewl_container_child_append(row, text);

	childnode = ewl_tree_node_new();
	ewl_container_child_append(node, childnode);

	row = ewl_row_new();
	ewl_container_child_append(childnode, row);

	text = ewl_text_new("Row 2 Column 1");
	ewl_container_child_append(row, text);

	text = ewl_text_new("Row 2 Column 2");
	ewl_container_child_append(row, text);

    This would result in a tree like:

	+ | Row 1 Column 1     | Row 1 Column 2 |
	|->   | Row 2 Column 1 | Row 2 Column 2 |

    The tree would only need nodes to create inset points in the tree for
    branching. If there's no branching necessary, a long list of row's would
    be sufficient. A common complaint now is traversing the rows and columns of
    the tree. My preference would be to add the functionality at the generic
    container level. This task could apply to other widgets like the table or a
    custom widget.
