dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AM_INIT_AUTOMAKE(ewl, 0.5.1.011)
AM_CONFIG_HEADER(ewl-config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL
AC_C___ATTRIBUTE__
AC_FUNC_ALLOCA

dnl Check for Solaris or other OS
case "$host" in
     *-sun-*)
        AC_DEFINE(HAVE_SUN, 1, [Support for SunOS/Solaris])
        ;;
     *) ;;
esac

dnl Set PACKAGE_LOCALE_DIR in config.h.
# if test "x${prefix}" = "xNONE"; then
#   AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${PACKAGE}/locale", [Locale data directory])
# else
#   AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${PACKAGE}/locale", [Locale data directory])
# fi

dnl Set PACKAGE_SYSCONF_DIR in config.h.
AC_DEFINE_DIR([PACKAGE_SYSCONF_DIR], [sysconfdir], [System Configuration Directory.])

dnl Set PACKAGE_DATA_DIR in config.h.
AC_DEFINE_DIR([PACKAGE_DATA_DIR], [datadir], [Shared Data Directory.])

dnl Set PACKAGE_LIB_DIR in config.h.
AC_DEFINE_DIR([PACKAGE_LIB_DIR], [libdir], [Library Module Directory.])

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", [Source code directory])

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

PCFLAGS=$CFLAGS

have_evas="no"
PKG_CHECK_MODULES(EVAS, [evas >= 0.9.9], [have_evas="yes"])
CFLAGS=$EVAS_CFLAGS" "$CFLAGS
AM_CONDITIONAL(EWL_ENABLE_EVAS, test "x$have_evas" = "xyes")

PKG_CHECK_MODULES(EFREET, [
efreet >= 0.0.3
efreet-mime
])
CFLAGS=$EFREET_CFLAGS" "$CFLAGS

PKG_CHECK_MODULES(ECORE, [
  ecore-txt
  ecore-file
])
CFLAGS=$ECORE_CFLAGS" "$CFLAGS

dnl software X11
AC_ARG_ENABLE(software-x11,
  [
    AC_HELP_STRING(
      [--enable-software-x11],
      [enable software X11 support])
  ],
  [enable_software_x11=$enableval],
  [enable_software_x11="auto"])

if test "x$enable_software_x11" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_SOFTWARE_X11,
    [evas-software-x11 >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_X,
        [ecore-x >= 0.9.9],
        [have_software_x11="yes"],
        [have_software_x11="no"])
    ],
    [have_software_x11="no"])
  if test "x$have_software_x11" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_SOFTWARE_X11, 1, [Enable X11 Software])
  elif test "x$enable_software_x11" = "xyes" ; then
    AC_MSG_ERROR(software X11 requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_SOFTWARE_X11, test "x$have_software_x11" = xyes)

dnl software X11 16 bpp
AC_ARG_ENABLE(software-16-x11,
  [
    AC_HELP_STRING(
      [--enable-software-16-x11],
      [enable software 16 bpp X11 support])
  ],
  [enable_software_16_x11=$enableval],
  [enable_software_16_x11="auto"])

if test "x$enable_software_16_x11" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_SOFTWARE_16_X11,
    [evas-software-16-x11 >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_X,
        [ecore-x >= 0.9.9],
        [have_software_16_x11="yes"],
        [have_software_16_x11="no"])
    ],
    [have_software_16_x11="no"])
  if test "x$have_software_16_x11" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_SOFTWARE_16_X11, 1, [Enable X11 16 bpp Software])
  elif test "x$enable_software_16_x11" = "xyes" ; then
    AC_MSG_ERROR(software 16 bpp X11 requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_SOFTWARE_16_X11, test "x$have_software_16_x11" = xyes)

dnl Render X11
AC_ARG_ENABLE(xrender-x11,
  [
    AC_HELP_STRING(
      [--enable-xrender-x11],
      [enable xrender X11 support])
  ],
  [enable_xrender_x11=$enableval],
  [enable_xrender_x11="auto"])

if test "x$enable_xrender_x11" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_XRENDER_X11,
    [evas-xrender-x11 >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_X,
        [ecore-x >= 0.9.9],
        [have_xrender_x11="yes"],
        [have_xrender_x11="no"])
    ],
    [have_xrender_x11="no"])
  if test "x$have_xrender_x11" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_XRENDER_X11, 1, [Enable X11 Xrender])
  elif test "x$enable_xrender_x11" = "xyes" ; then
    AC_MSG_ERROR(xrender X11 requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_XRENDER_X11, test "x$have_xrender_x11" = xyes)

dnl OpenGL X11
AC_ARG_ENABLE(opengl-x11,
  [
    AC_HELP_STRING(
      [--enable-opengl-x11],
      [enable opengl X11 support])
  ],
  [enable_opengl_x11=$enableval],
  [enable_opengl_x11="auto"])

if test "x$enable_opengl_x11" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_OPENGL_X11,
    [evas-opengl-x11 >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_X,
        [ecore-x >= 0.9.9],
        [have_opengl_x11="yes"],
        [have_opengl_x11="no"])
    ],
    [have_opengl_x11="no"])
  if test "x$have_opengl_x11" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_OPENGL_X11, 1, [Enable X11 Opengl])
  elif test "x$enable_opengl_x11" = "xyes" ; then
    AC_MSG_ERROR(opengl X11 requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_OPENGL_X11, test "x$have_opengl_x11" = xyes)

AM_CONDITIONAL(EWL_ENABLE_X11, test "x$have_software_x11" = "xyes" -o "x$have_software_16_x11" = "xyes" -o "x$have_xrender_x11" = "xyes" -o "x$have_opengl_x11" = "xyes")

dnl software SDL
AC_ARG_ENABLE(software-sdl,
  [
    AC_HELP_STRING(
      [--enable-software-sdl],
      [enable software SDL support])
  ],
  [enable_software_sdl=$enableval],
  [enable_software_sdl="auto"])

if test "x$enable_software_sdl" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_SOFTWARE_SDL,
    [evas-software-sdl >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_SDL,
        [ecore-sdl >= 0.9.9],
        [have_software_sdl="yes"],
        [have_software_sdl="no"])
    ],
    [have_software_sdl="no"])
  if test "x$have_software_sdl" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_SOFTWARE_SDL, 1, [Enable SDL Software])
  elif test "x$enable_software_sdl" = "xyes" ; then
    AC_MSG_ERROR(software SDL requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_SOFTWARE_SDL, test "x$have_software_sdl" = xyes)

dnl Frame Buffer
AC_ARG_ENABLE(framebuffer,
  [
    AC_HELP_STRING(
      [--enable-framebuffer],
      [enable framebuffer support])
  ],
  [enable_framebuffer=$enableval],
  [enable_framebuffer="auto"])

if test "x$enable_framebuffer" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_FRAMEBUFFER,
    [evas-framebuffer >= 0.9.9],
    [
      PKG_CHECK_MODULES(ECORE_FB,
        [ecore-fb >= 0.9.9],
        [have_framebuffer="yes"],
        [have_framebuffer="no"])
    ],
    [have_framebuffer="no"])
  if test "x$have_framebuffer" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_FB, 1, [Enable FB])
  elif test "x$enable_framebuffer" = "xyes" ; then
    AC_MSG_ERROR(framebuffer requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_FB, test "x$have_framebuffer" = xyes)

dnl Buffer
AC_ARG_ENABLE(buffer,
  [
    AC_HELP_STRING(
      [--enable-buffer],
      [enable buffer support])
  ],
  [enable_buffer=$enableval],
  [enable_buffer="auto"])

if test "x$enable_buffer" != "xno" ; then
  PKG_CHECK_MODULES(EVAS_BUFFER,
    [evas-software-buffer >= 0.9.9],
    [have_buffer="yes"],
    [have_buffer="no"])
  if test "x$have_buffer" = "xyes" ; then
    AC_DEFINE(ENABLE_EWL_BUFFER, 1, [Enable Buffer])
  elif test "x$enable_buffer" = "xyes" ; then
    AC_MSG_ERROR(buffer requested but no evas/ecore support found)
  fi
fi
AM_CONDITIONAL(EWL_ENABLE_EVAS_BUFFER, test "x$have_buffer" = xyes)

PKG_CHECK_MODULES(EDJE, [edje >= 0.5.0])
CFLAGS=$EDJE_CFLAGS" "$CFLAGS

requirements="evas ecore edje efreet"

PKG_CHECK_MODULES(EMOTION, [emotion >= 0.0.1],
  [ 
    have_emotion="yes"
    ewl_media_include="#include <ewl_media.h>"
    requirements="$requirements emotion"
    AC_DEFINE(BUILD_EMOTION_SUPPORT, 1, [Enable Emotion Support for Ewl_Media])
  ],
  [
    have_emotion="no"
  ]
)

CFLAGS=$EMOTION_CFLAGS" "$CFLAGS

PKG_CHECK_MODULES(EPSILON, [epsilon >= 0.3.0],
  [ 
    have_epsilon="yes"
    requirements="$requirements epsilon"
    AC_DEFINE(BUILD_EPSILON_SUPPORT, 1, [Enable Epsilon Support for Ewl_Image])
  ],
  [
    have_epsilon="no"
  ]
)

CFLAGS=$EPSILON_CFLAGS" "$CFLAGS

AC_ARG_ENABLE(debug,
	[AC_HELP_STRING([--enable-debug],[enable debug support])],
	[enable_debug=$enableval], [enable_debug="yes"])
if test "x$enable_debug" = xyes ; then
    AC_DEFINE(EWL_ENABLE_DEBUG, 1, [Enable debug support])
else
    AC_DEFINE(EWL_ENABLE_DEBUG, 0, [Enable debug support])
fi

###
# Define these at the bottom as they are not release versions, but API
# revisions numbers.
INTERFACE_CURRENT="1"
INTERFACE_REVISION="0"
INTERFACE_AGE="0"

AC_SUBST(INTERFACE_CURRENT)
AC_SUBST(INTERFACE_REVISION)
AC_SUBST(INTERFACE_AGE)

AC_DEFINE_UNQUOTED(INTERFACE_CURRENT, "$INTERFACE_CURRENT", [Interface current version number])
AC_DEFINE_UNQUOTED(INTERFACE_REVISION, "$INTERFACE_REVISION", [Interface revision number])
AC_DEFINE_UNQUOTED(INTERFACE_AGE, "$INTERFACE_AGE", [Interface age number])

CFLAGS=$PCFLAGS

AC_SUBST(ewl_media_include)

AC_SUBST(requirements)

AC_OUTPUT([
Makefile
ewl.spec
ewl.pc
src/Makefile
src/bin/Makefile
src/bin/tests/Makefile
src/bin/tests/border/Makefile
src/bin/tests/box/Makefile
src/bin/tests/button/Makefile
src/bin/tests/calendar/Makefile
src/bin/tests/colordialog/Makefile
src/bin/tests/colorpicker/Makefile
src/bin/tests/combo/Makefile
src/bin/tests/container/Makefile
src/bin/tests/datepicker/Makefile
src/bin/tests/dialog/Makefile
src/bin/tests/dnd_snoop/Makefile
src/bin/tests/engine/Makefile
src/bin/tests/entry/Makefile
src/bin/tests/filedialog/Makefile
src/bin/tests/filepicker/Makefile
src/bin/tests/floater/Makefile
src/bin/tests/freebox/Makefile
src/bin/tests/fullscreen/Makefile
src/bin/tests/grid/Makefile
src/bin/tests/histogram/Makefile
src/bin/tests/icon/Makefile
src/bin/tests/icon_theme/Makefile
src/bin/tests/image/Makefile
src/bin/tests/image_thumbnail/Makefile
src/bin/tests/io_manager/Makefile
src/bin/tests/label/Makefile
src/bin/tests/layer/Makefile
src/bin/tests/list/Makefile
src/bin/tests/media/Makefile
src/bin/tests/menu/Makefile
src/bin/tests/menubar/Makefile
src/bin/tests/modal/Makefile
src/bin/tests/mvc/Makefile
src/bin/tests/notebook/Makefile
src/bin/tests/paned/Makefile
src/bin/tests/password/Makefile
src/bin/tests/pointer/Makefile
src/bin/tests/progressbar/Makefile
src/bin/tests/puzzle/Makefile
src/bin/tests/scrollbar/Makefile
src/bin/tests/scrollpane/Makefile
src/bin/tests/seeker/Makefile
src/bin/tests/shadow/Makefile
src/bin/tests/spinner/Makefile
src/bin/tests/statusbar/Makefile
src/bin/tests/table/Makefile
src/bin/tests/text/Makefile
src/bin/tests/text_fmt/Makefile
src/bin/tests/text_editor/Makefile
src/bin/tests/theme/Makefile
src/bin/tests/toolbar/Makefile
src/bin/tests/tooltip/Makefile
src/bin/tests/tree/Makefile
src/bin/tests/tree2/Makefile
src/bin/tests/widget/Makefile
src/lib/Makefile
src/engines/Makefile
src/plugins/Makefile
src/engines/x11/Makefile
src/engines/evas/Makefile
src/engines/evas_software_x11/Makefile
src/engines/evas_software_sdl/Makefile
src/engines/evas_software_16_x11/Makefile
src/engines/evas_xrender_x11/Makefile
src/engines/evas_gl_x11/Makefile
src/engines/evas_fb/Makefile
src/engines/evas_buffer/Makefile
data/Makefile
data/config/Makefile
data/images/Makefile
data/themes/Makefile
data/themes/e17/Makefile
data/themes/e17/fonts/Makefile
data/themes/e17/images/Makefile
data/themes/e17/groups/Makefile
data/themes/e17/groups/inc/Makefile
data/themes/ewl_embed_test/Makefile
data/themes/ewl_embed_test/images/Makefile
tools/Makefile
tools/ewl_config/Makefile
debian/changelog
])

echo
echo "$PACKAGE $VERSION"
echo
echo "Engines:"
echo
echo "  Software X11.............................: $have_software_x11"
echo "  Software 16 X11..........................: $have_software_16_x11"
echo "  OpenGL X11...............................: $have_opengl_x11" 
echo "  XRender X11..............................: $have_xrender_x11"
echo "  Framebuffer..............................: $have_framebuffer"
echo "  SDL......................................: $have_software_sdl"
echo "  Buffer...................................: $have_buffer"
echo
echo "Optional Components:"
echo
echo "  Emotion Support..........................: $have_emotion"
echo "  Epsilon Support..........................: $have_epsilon"
echo 
echo "Debug Support..............................: $enable_debug"
echo
echo "Now type 'make' ('gmake' on some systems) to compile $PACKAGE."
echo

