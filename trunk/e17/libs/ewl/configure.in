dnl Process this file with autoconf to produce a configure script.

AC_INIT(ewl, 0.5.2.011, enlightenment-devel@lists.sourceforge.net)
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR(configure.in)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST

AM_INIT_AUTOMAKE(1.6 dist-bzip2)
AM_CONFIG_HEADER(ewl-config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AC_C___ATTRIBUTE__

AC_LIBTOOL_WIN32_DLL
define([AC_LIBTOOL_LANG_CXX_CONFIG], [:])dnl
define([AC_LIBTOOL_LANG_F77_CONFIG], [:])dnl
AC_PROG_LIBTOOL

dnl Define these at the bottom as they are not release versions, but API
dnl revisions numbers.
INTERFACE_CURRENT="1"
INTERFACE_REVISION="0"
INTERFACE_AGE="0"
INTERFACE_VERSION=${INTERFACE_CURRENT}:${INTERFACE_REVISION}:${INTERFACE_AGE}

AC_SUBST(INTERFACE_VERSION)

AC_DEFINE_UNQUOTED(INTERFACE_CURRENT, "$INTERFACE_CURRENT", [Interface current version number])
AC_DEFINE_UNQUOTED(INTERFACE_REVISION, "$INTERFACE_REVISION", [Interface revision number])
AC_DEFINE_UNQUOTED(INTERFACE_AGE, "$INTERFACE_AGE", [Interface age number])

AC_ARG_ENABLE(gcov,
  AC_HELP_STRING([--enable-gcov],
  [compile with coverage profiling instrumentation]),
  [enable_gcov=$enableval],
  [enable_gcov="no"]
)
AC_MSG_CHECKING([whether to use profiling instrumentation])
AC_MSG_RESULT($enable_gcov)

if test "x$enable_gcov" = "xyes" ; then
  AC_CHECK_PROG(have_lcov,
    [lcov],
    [yes],
    [no]
  )
  if test "x$have_lcov" = "xyes" ; then
    GCOV_CFLAGS="-fprofile-arcs -ftest-coverage"
    GCOV_LIBS="-lgcov"
dnl remove any optimisation flag
    CFLAGS="-O0"
  else
    AC_MSG_WARN([lcov is not found, disable profiling instrumentation])
    enable_gcov="no"
  fi
fi
AC_SUBST(GCOV_CFLAGS)
AC_SUBST(GCOV_LIBS)

AM_CONDITIONAL(EWL_ENABLE_GCOV, test "x$enable_gcov" = "xyes")

AC_FUNC_ALLOCA

AC_CHECK_HEADERS([pwd.h grp.h langinfo.h fcntl.h])

have_locking="no"
AC_COMPILE_IFELSE(
  [AC_LANG_PROGRAM(
     [[
#include <stdlib.h>
#if HAVE_FCNTL_H
# include <fcntl.h>
#endif
     ]],
     [[
fcntl (1, F_SETLKW, NULL);
     ]]
   )
  ],
  [AC_DEFINE(HAVE_FCNTL, 1, [Define to 1 if fcntl() is available])
   have_locking="yes"]
)

if test "x${have_locking}" = "xno"; then
  AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM(
       [[
#if HAVE_FCNTL_H
# include <fcntl.h>
#endif
#include <sys/locking.h>
       ]],
       [[
_locking (1, _LK_LOCK, 10);
       ]]
     )
    ],
    [AC_DEFINE(HAVE__LOCKING, 1, [Define to 1 if _locking() is available])
     have_locking="yes"]
  )
fi

if test "x${have_locking}" = "xno"; then
  AC_MSG_ERROR([Error: no fcntl() nor _locking() is available.])
fi

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

create_shared_lib=""
case "$host_os" in
     mingw|mingw32)
        create_shared_lib="-no-undefined"
        ewl_evas_engine_default="evas_gl_glew"
        ;;
     *)
        ewl_evas_engine_default="evas_software_x11"
        ;;
esac
AC_SUBST(create_shared_lib)
AC_SUBST(ewl_evas_engine_default)

have_evas="no"
PKG_CHECK_MODULES(EVAS, [evas >= 0.9.9], [have_evas="yes"])
AM_CONDITIONAL(EWL_ENABLE_EVAS, test "x$have_evas" = "xyes")

PKG_CHECK_MODULES(EFREET, [
efreet >= 0.0.3
efreet-mime
])

PKG_CHECK_MODULES(ECORE, [
  ecore-txt
  ecore-file
])

PKG_CHECK_MODULES(EDJE, [edje >= 0.5.0])

requirements="evas ecore edje efreet"

dnl Xlib engines

PKG_CHECK_MODULES(ECORE_X,
  [ecore-x >= 0.9.9],
  [have_ecore_x="yes"],
  [have_ecore_x="no"])

EWL_CHECK_ENGINE([software_x11], [software X11], [0.9.9], [$have_ecore_x])
EWL_CHECK_ENGINE([software_16_x11], [software 16 bpp X11], [0.9.9], [$have_ecore_x])
EWL_CHECK_ENGINE([xrender_x11], [xrender X11], [0.9.9], [$have_ecore_x])
EWL_CHECK_ENGINE([opengl_x11], [opengl X11], [0.9.9], [$have_ecore_x])

AM_CONDITIONAL(EWL_ENABLE_X11, test "x$have_ecore_x" = "xyes" -a "x$have_software_x11" = "xyes" -o "x$have_software_16_x11" = "xyes" -o "x$have_xrender_x11" = "xyes" -o "x$have_opengl_x11" = "xyes")

dnl XCB engine

PKG_CHECK_MODULES(ECORE_XCB,
  [xcb >= 1.0 ecore-x >= 0.9.9],
  [have_ecore_xcb="yes"],
  [have_ecore_xcb="no"])

dnl Disable xcb support for now
have_ecore_xcb="no"

EWL_CHECK_ENGINE([software_xcb], [software XCB], [0.9.9], [$have_ecore_xcb])

AM_CONDITIONAL(EWL_ENABLE_XCB, test "x$have_software_xcb" = "xyes" -a "x$have_ecore_xcb" = "xyes")

PKG_CHECK_MODULES(ECORE_SDL,
  [ecore-sdl >= 0.9.9],
  [have_ecore_sdl="yes"],
  [have_ecore_sdl="no"])

EWL_CHECK_ENGINE([software_sdl], [software SDL], [0.9.9], [$have_ecore_sdl])

dnl Frame Buffer engine

PKG_CHECK_MODULES(ECORE_FB,
  [ecore-fb >= 0.9.9],
  [have_ecore_framebuffer="yes"],
  [have_ecore_framebuffer="no"])

EWL_CHECK_ENGINE([framebuffer], [framebuffer], [0.9.9], [$have_ecore_framebuffer])

dnl Buffer engine

EWL_CHECK_ENGINE([software_buffer], [buffer], [0.9.9], ["yes"])

dnl Win32 engines

PKG_CHECK_MODULES(ECORE_WIN32,
  [ecore-win32 >= 0.9.9],
  [have_ecore_win32="yes"],
  [have_ecore_win32="no"])

EWL_CHECK_ENGINE([opengl_glew], [opengl Glew], [0.9.9], [$have_ecore_win32])

AM_CONDITIONAL(EWL_ENABLE_WIN32, test "x$have_ecore_win32" = "xyes" -a "x$have_opengl_glew" = "xyes" )

PKG_CHECK_MODULES(EMOTION, [emotion >= 0.0.1],
  [
    have_emotion="yes"
    ewl_media_include="#include <ewl_media.h>"
    requirements="$requirements emotion"
    AC_DEFINE(BUILD_EMOTION_SUPPORT, 1, [Enable Emotion Support for Ewl_Media])
  ],
  [
    have_emotion="no"
  ]
)

PKG_CHECK_MODULES(EPSILON, [epsilon >= 0.3.0],
  [
    have_epsilon="yes"
    requirements="$requirements epsilon"
    AC_DEFINE(BUILD_EPSILON_SUPPORT, 1, [Enable Epsilon Support for Ewl_Image])
  ],
  [
    have_epsilon="no"
  ]
)

AC_ARG_ENABLE(debug,
	[AC_HELP_STRING([--enable-debug],[enable debug support])],
	[enable_debug=$enableval], [enable_debug="yes"])
if test "x$enable_debug" = xyes ; then
    AC_DEFINE(EWL_ENABLE_DEBUG, 1, [Enable debug support])
else
    AC_DEFINE(EWL_ENABLE_DEBUG, 0, [Enable debug support])
fi

AC_ARG_ENABLE(tests,
	[AC_HELP_STRING([--disable-tests],[disable the build of tests])])

if test "x$enableval" = "xyes" ; then
    enable_tests="yes"
else
    enable_tests="no"
fi

AM_CONDITIONAL(EWL_TESTS_BUILD, test "x$enable_tests" = "xyes")

AC_SUBST(ewl_media_include)

AC_SUBST(requirements)

AC_OUTPUT([
Makefile
ewl.spec
ewl.pc
src/Makefile
src/bin/Makefile
src/bin/tests/Makefile
src/bin/tests/border/Makefile
src/bin/tests/box/Makefile
src/bin/tests/button/Makefile
src/bin/tests/calendar/Makefile
src/bin/tests/callback/Makefile
src/bin/tests/colordialog/Makefile
src/bin/tests/colorpicker/Makefile
src/bin/tests/combo/Makefile
src/bin/tests/container/Makefile
src/bin/tests/datepicker/Makefile
src/bin/tests/dialog/Makefile
src/bin/tests/dnd_snoop/Makefile
src/bin/tests/engine/Makefile
src/bin/tests/entry/Makefile
src/bin/tests/filedialog/Makefile
src/bin/tests/filepicker/Makefile
src/bin/tests/floater/Makefile
src/bin/tests/freebox/Makefile
src/bin/tests/fullscreen/Makefile
src/bin/tests/grid/Makefile
src/bin/tests/histogram/Makefile
src/bin/tests/icon/Makefile
src/bin/tests/icon_theme/Makefile
src/bin/tests/image/Makefile
src/bin/tests/image_thumbnail/Makefile
src/bin/tests/io_manager/Makefile
src/bin/tests/label/Makefile
src/bin/tests/layer/Makefile
src/bin/tests/list/Makefile
src/bin/tests/media/Makefile
src/bin/tests/menu/Makefile
src/bin/tests/menubar/Makefile
src/bin/tests/modal/Makefile
src/bin/tests/mvc/Makefile
src/bin/tests/notebook/Makefile
src/bin/tests/object/Makefile
src/bin/tests/paned/Makefile
src/bin/tests/password/Makefile
src/bin/tests/pointer/Makefile
src/bin/tests/progressbar/Makefile
src/bin/tests/puzzle/Makefile
src/bin/tests/scrollbar/Makefile
src/bin/tests/scrollpane/Makefile
src/bin/tests/seeker/Makefile
src/bin/tests/shadow/Makefile
src/bin/tests/spinner/Makefile
src/bin/tests/statusbar/Makefile
src/bin/tests/table/Makefile
src/bin/tests/text/Makefile
src/bin/tests/text_format/Makefile
src/bin/tests/text_editor/Makefile
src/bin/tests/theme/Makefile
src/bin/tests/toolbar/Makefile
src/bin/tests/tooltip/Makefile
src/bin/tests/tree/Makefile
src/bin/tests/widget/Makefile
src/lib/Makefile
src/engines/Makefile
src/plugins/Makefile
src/engines/x11/Makefile
src/engines/xcb/Makefile
src/engines/evas/Makefile
src/engines/evas_software_x11/Makefile
src/engines/evas_software_xcb/Makefile
src/engines/evas_software_sdl/Makefile
src/engines/evas_software_16_x11/Makefile
src/engines/evas_xrender_x11/Makefile
src/engines/evas_gl_x11/Makefile
src/engines/evas_fb/Makefile
src/engines/evas_buffer/Makefile
src/engines/win32/Makefile
src/engines/evas_gl_glew/Makefile
data/Makefile
data/config/Makefile
data/config/ewl.cfg
data/images/Makefile
data/themes/Makefile
data/themes/e17/Makefile
data/themes/e17/fonts/Makefile
data/themes/e17/images/Makefile
data/themes/e17/groups/Makefile
data/themes/e17/groups/inc/Makefile
data/themes/ewl_embed_test/Makefile
data/themes/ewl_embed_test/images/Makefile
tools/Makefile
tools/ewl_config/Makefile
debian/changelog
])

echo
echo "$PACKAGE $VERSION"
echo
echo "Engines:"
echo
echo "  Software X11.............................: $have_software_x11"
echo "  Software 16 X11..........................: $have_software_16_x11"
echo "  OpenGL X11...............................: $have_opengl_x11"
echo "  XRender X11..............................: $have_xrender_x11"
echo "  Software XCB.............................: $have_software_xcb"
echo "  Framebuffer..............................: $have_framebuffer"
echo "  SDL......................................: $have_software_sdl"
echo "  Buffer...................................: $have_software_buffer"
echo "  OpenGL Glew..............................: $have_opengl_glew"
echo
echo "Optional Components:"
echo
echo "  Emotion Support..........................: $have_emotion"
echo "  Epsilon Support..........................: $have_epsilon"
echo
echo "Debug Support..............................: $enable_debug"
echo
echo "Coverage Support...........................: $enable_gcov"
echo
echo "Build tests................................: $enable_tests"
echo
echo "Now type 'make' ('gmake' on some systems) to compile $PACKAGE."
echo
