
#ifndef __EWL_ENUMS_H
#define __EWL_ENUMS_H

enum _ewl_callback_type {
    EWL_CALLBACK_REALIZE,
    EWL_CALLBACK_SHOW,
    EWL_CALLBACK_HIDE,
    EWL_CALLBACK_DESTROY,
    EWL_CALLBACK_CONFIGURE,
    EWL_CALLBACK_KEY_DOWN,
    EWL_CALLBACK_KEY_UP,
    EWL_CALLBACK_MOUSE_DOWN,
    EWL_CALLBACK_MOUSE_UP,
    EWL_CALLBACK_MOUSE_MOVE,
    EWL_CALLBACK_FOCUS_IN,
    EWL_CALLBACK_FOCUS_OUT,
    EWL_CALLBACK_SELECT,
    EWL_CALLBACK_UNSELECT,
    EWL_CALLBACK_CLICKED,
    EWL_CALLBACK_RELEASED,
    EWL_CALLBACK_HILITED,
    EWL_CALLBACK_VALUE_CHANGED,
    EWL_CALLBACK_MAX
};

typedef enum _ewl_callback_type Ewl_Callback_Type;

enum _ewl_orientation {
	EWL_ORIENTATION_HORISONTAL,
	EWL_ORIENTATION_VERTICAL
};

typedef enum _ewl_orientation Ewl_Orientation;

enum _ewl_position {
	EWL_POSITION_LEFT,
	EWL_POSITION_RIGHT,
	EWL_POSITION_TOP,
	EWL_POSITION_BOTTOM,
	EWL_POSITION_TOP_LEFT,
	EWL_POSITION_TOP_RIGHT,
	EWL_POSITION_BOTTOM_LEFT,
	EWL_POSITION_BOTTOM_RIGHT,
	EWL_POSITION_LEFT_TOP,
	EWL_POSITION_LEFT_BOTTOM,
	EWL_POSITION_RIGHT_TOP,
	EWL_POSITION_RIGHT_BOTTOM
};

typedef enum _ewl_position Ewl_Position;

enum _ewl_state {
	EWL_STATE_NORMAL,
	EWL_STATE_HILITED,
	EWL_STATE_PRESSED,
	EWL_STATE_SELECTED,
	EWL_STATE_DND
};

typedef enum _ewl_state Ewl_State;

#endif
