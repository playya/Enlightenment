dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_ISC_POSIX
AM_INIT_AUTOMAKE(edje, 0.5.0.007)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL
AC_FUNC_ALLOCA

AC_CHECK_FUNCS(realpath)

AC_CHECK_HEADERS(fnmatch.h,, AC_MSG_ERROR([Cannot find fnmatch.h. Make sure your CFLAGS environment variable contains include lines for the location of this file]))

AC_CHECK_FUNCS(fnmatch, res=yes, res=no)
if test "x$res" = "xno"; then
	AC_CHECK_LIB(fnmatch, fnmatch, res=yes, res=no)
	if test "x$res" = "xno"; then
		AC_MSG_ERROR([Cannot find fnmatch() in neither libc nor libfnmatch])
	else
		fnmatch_libs="-lfnmatch"
	fi
fi

AC_SUBST(fnmatch_libs)

if test "x${bindir}" = 'x${exec_prefix}/bin'; then
  if test "x${exec_prefix}" = "xNONE"; then
    if test "x${prefix}" = "xNONE"; then
      bindir="${ac_default_prefix}/bin";
    else
      bindir="${prefix}/bin";
    fi
  else
    if test "x${prefix}" = "xNONE"; then
      bindir="${ac_default_prefix}/bin";
    else
      bindir="${prefix}/bin";
    fi
  fi
fi

if test "x${libdir}" = 'x${exec_prefix}/lib'; then
  if test "x${exec_prefix}" = "xNONE"; then
    if test "x${prefix}" = "xNONE"; then
      libdir="${ac_default_prefix}/lib";
    else
      libdir="${prefix}/lib";
    fi
  else
    if test "x${prefix}" = "xNONE"; then
      libdir="${ac_default_prefix}/lib";
    else
      libdir="${prefix}/lib";
    fi
  fi
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [Shared data directory])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", [Shared data directory])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}", [Shared data directory])
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin", [Installation directory for user executables])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin", [Installation directory for user executables])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}", [Installation directory for user executables])
fi

dnl Set PACKAGE_LIB_DIR in config.h.
if test "x${libdir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${ac_default_prefix}/lib", [Installation directory for libraries])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${prefix}/lib", [Installation directory for libraries])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${libdir}", [Installation directory for libraries])
fi

AC_MSG_CHECKING(whether to build edje_cc)
have_edje_cc="yes"
AC_ARG_ENABLE(edje-cc, [  --disable-edje-cc       disable building of edje_cc ], [
     if [ test "$enableval" = "yes" ]; then
       AC_MSG_RESULT(yes)
       have_edje_cc="yes"
     else
       AC_MSG_RESULT(no)
       have_edje_cc="no"
     fi
   ], [
      AC_MSG_RESULT($have_edje_cc)
   ]
)

AC_ARG_WITH(evas-config, [  --with-evas-config=EVAS_CONFIG    use evas-config specified ],
[ EVAS_CONFIG=$withval;
  echo "using "$EVAS_CONFIG" for evas-config"; ],
[ if test -z "$EVAS_CONFIG"; then
    AC_PATH_PROG(EVAS_CONFIG, "evas-config", "", $PATH)
  fi
])
evas_cflags=`$EVAS_CONFIG --cflags`
evas_libs=`$EVAS_CONFIG --libs`

AC_ARG_WITH(ecore-config, [  --with-ecore-config=ECORE_CONFIG  use ecore-config specified ],
[ ECORE_CONFIG=$withval;
  echo "using "$ECORE_CONFIG" for ecore-config"; ],
[ if test -z "$ECORE_CONFIG"; then
    AC_PATH_PROG(ECORE_CONFIG, "ecore-config", "", $PATH)
  fi
])
ecore_cflags=`$ECORE_CONFIG --cflags`
ecore_libs=`$ECORE_CONFIG --libs`

CP=$CFLAGS
CFLAGS=$ecore_cflags
AC_CHECK_HEADER(Ecore_X.h, AC_DEFINE(HAVE_ECORE_X, 1, [Ecore_X.h exists]))
AC_CHECK_HEADER(Ecore_Fb.h, AC_DEFINE(HAVE_ECORE_FB, 1, [Ecore_Fb.h exists]))
CFLAGS=$CP

AC_ARG_WITH(eet-config, [  --with-eet-config=EET_CONFIG      use eet-config specified ],
[ EET_CONFIG=$withval;
  echo "using "$EET_CONFIG" for eet-config"; ],
[ if test -z "$EET_CONFIG"; then
    AC_PATH_PROG(EET_CONFIG, "eet-config", "", $PATH)
  fi
])
eet_cflags=`$EET_CONFIG --cflags`
eet_libs=`$EET_CONFIG --libs`

AC_ARG_WITH(embryo-config, [  --with-embryo-config=EMBRYO_CONFIG use embryo-config specified ],
[ EMBRYO_CONFIG=$withval;
  echo "using "$EMBRYO_CONFIG" for embryo-config"; ],
[ if test -z "$EMBRYO_CONFIG"; then
    AC_PATH_PROG(EMBRYO_CONFIG, "embryo-config", "", $PATH)
  fi
])
embryo_cflags=`$EMBRYO_CONFIG --cflags`
embryo_libs=`$EMBRYO_CONFIG --libs`

if test "x$have_edje_cc" = "xyes"; then
  AC_ARG_WITH(imlib2-config, [  --with-imlib2-config=IMLIB2_CONFIG use imlib2-config specified ],
  [ IMLIB2_CONFIG=$withval;
    echo "using "$IMLIB2_CONFIG" for imlib2-config"; ],
  [ if test -z "$IMLIB2_CONFIG"; then
    AC_PATH_PROG(IMLIB2_CONFIG, "imlib2-config", "", $PATH)
    fi
  ])
  imlib2_cflags=`$IMLIB2_CONFIG --cflags`
  imlib2_libs=`$IMLIB2_CONFIG --libs`
  AC_DEFINE(HAVE_IMLIB, 1, [Define to 1 if you have Imlib2])
fi

AC_MSG_CHECKING([for location of Vim data files])
install_vim="yes";
AC_ARG_WITH(vim,
    [  --with-vim=DIR          Location of Vim data files [[autodetect]]],
    [if test -d "${withval}"; then
       vimdir="${withval}"
    fi])

if test "x${vimdir}" = "x" ; then
   if test -d "${prefix}/share/vim"; then
      vimdir="${prefix}/share/vim"
   elif test -d "/usr/share/vim"; then
      vimdir="/usr/share/vim"
   elif test -d "/usr/local/share/vim"; then
      vimdir="/usr/local/share/vim"
   elif test -d "/opt/share/vim"; then
      vimdir="/opt/share/vim"
   else
      install_vim="no"
   fi
fi

if test "${install_vim}" = "yes"; then
   AC_MSG_RESULT([$vimdir])
else
   AC_MSG_RESULT([Not found, EDC syntax file will not be installed])
fi

EMBRYO_PREFIX=`$EMBRYO_CONFIG --prefix`
AC_DEFINE_UNQUOTED(EMBRYO_PREFIX, "${EMBRYO_PREFIX}", [Embryo prefix])

EDJE_CC_PRG=""
EDJE_DECC_PRG=""
EDJE_RECC_PRG=""
EDJE_THUMB_PRG=""
if test "x$have_edje_cc" = "xyes"; then
  AM_CONDITIONAL(BUILD_EDJE_CC, true)
  AM_CONDITIONAL(BUILD_EDJE_DECC, true)
  AM_CONDITIONAL(BUILD_EDJE_THUMB, true)
  EDJE_CC_PRG="edje_cc"
  EDJE_DECC_PRG="edje_decc"
  EDJE_RECC_PRG="edje_recc"
  EDJE_THUMB_PRG="edje_thumb"
else
  AM_CONDITIONAL(BUILD_EDJE_CC, false)
  AM_CONDITIONAL(BUILD_EDJE_DECC, false)
  AM_CONDITIONAL(BUILD_EDJE_THUMB, false)
fi
AC_SUBST(EDJE_CC_PRG)
AC_SUBST(EDJE_DECC_PRG)
AC_SUBST(EDJE_RECC_PRG)
AC_SUBST(EDJE_THUMB_PRG)

AC_SUBST(evas_cflags)
AC_SUBST(evas_libs)
AC_SUBST(ecore_cflags)
AC_SUBST(ecore_libs)
AC_SUBST(eet_cflags)
AC_SUBST(eet_libs)
AC_SUBST(embryo_cflags)
AC_SUBST(embryo_libs)
AC_SUBST(imlib2_cflags)
AC_SUBST(imlib2_libs)

AC_SUBST(vimdir)

AC_OUTPUT([
edje.pc
Makefile
data/Makefile
data/images/Makefile
data/include/Makefile
data/src/Makefile
data/template/Makefile
data/template/embryo/Makefile
data/template/fonts/Makefile
data/template/hashes/Makefile
data/template/images/Makefile
data/template/macros/Makefile
data/template/parts/Makefile
data/template/programs/Makefile
data/test/Makefile
data/test/fonts/Makefile
data/test/images/Makefile
src/Makefile
src/lib/Makefile
src/bin/Makefile
edje-config
],[
chmod +x edje-config
touch edje_docs.tar.gz
])

if test "x$have_edje_cc" = "xyes"; then
	if test "x$have_imlib2" = "xno"; then
		echo
		echo "WARNING: Building edje_cc without Imlib2 support!"
		echo
	fi
fi
