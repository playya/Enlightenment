dnl Process this file with autoconf to produce a configure script.

# get rid of that stupid cache mechanism
rm -f config.cache

AC_INIT(configure.in)
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET
AC_ISC_POSIX
AM_INIT_AUTOMAKE(edje, 0.5.0)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL
AC_FUNC_ALLOCA

AC_CHECK_FUNCS(realpath)

AC_CHECK_HEADERS(fnmatch.h,, AC_MSG_ERROR([Cannot find fnmatch.h. Make sure your CFLAGS environment variable contains include lines for the location of this file]))

AC_CHECK_FUNCS(fnmatch, res=yes, res=no)
if test "x$res" = "xno"; then
	AC_CHECK_LIB(fnmatch, fnmatch, res=yes, res=no)
	if test "x$res" = "xno"; then
		AC_MSG_ERROR([Cannot find fnmatch() in neither libc nor libfnmatch])
	else
		fnmatch_libs="-lfnmatch"
	fi
fi

AC_SUBST(fnmatch_libs)

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    bindir="${ac_default_prefix}/bin";
  else
    bindir="${prefix}/bin";
  fi
fi

if test "x${exec_prefix}" = "xNONE"; then
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
else
  if test "x${prefix}" = "xNONE"; then
    libdir="${ac_default_prefix}/lib";
  else
    libdir="${prefix}/lib";
  fi
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [Shared data directory])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", [Shared data directory])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}", [Shared data directory])
fi

dnl Set PACKAGE_BIN_DIR in config.h.
if test "x${bindir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${ac_default_prefix}/bin", [Installation directory for user executables])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${prefix}/bin", [Installation directory for user executables])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_BIN_DIR, "${bindir}", [Installation directory for user executables])
fi

dnl Set PACKAGE_LIB_DIR in config.h.
if test "x${libdir}" = 'xNONE'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${ac_default_prefix}/lib", [Installation directory for libraries])
  else
    AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${prefix}/lib", [Installation directory for libraries])
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_LIB_DIR, "${libdir}", [Installation directory for libraries])
fi

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}", [Source code directory])

AC_MSG_CHECKING(whether to build only fb support)
have_fb_only="no"
AC_ARG_ENABLE(fb-only, [  --enable-fb-only        enable building of fb support only ], [
     if [ test "$enableval" = "yes" ]; then
       AC_MSG_RESULT(yes)
       have_fb_only="yes"
     else
       AC_MSG_RESULT(no)
       have_fb_only="no"
     fi
   ], [
      AC_MSG_RESULT($have_fb_only)
   ]
)

AC_MSG_CHECKING(whether to build edje_cc)
have_edje_cc="yes"
AC_ARG_ENABLE(edje-cc, [  --disable-edje-cc       disable building of edje_cc ], [
     if [ test "$enableval" = "yes" ]; then
       AC_MSG_RESULT(yes)
       have_edje_cc="yes"
     else
       AC_MSG_RESULT(no)
       have_edje_cc="no"
     fi
   ], [
      AC_MSG_RESULT($have_edje_cc)
   ]
)

edje_def=""
if test "x$have_fb_only" = "xyes"; then
  edje_def="-DEDJE_FB_ONLY"
fi
AC_SUBST(edje_def)

AC_ARG_WITH(eet,
        [  --with-eet=DIR               use eet in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
         LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(eet, , ,
    AC_MSG_ERROR(Cannot find eet: Is eet-config in path?))

AC_ARG_WITH(embryo,
        [  --with-embryo=DIR            use embryo in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
         LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(embryo, 0.9.1, ,
    AC_MSG_ERROR(Cannot find embryo: Is embryo-config in path?))

if test "x$have_edje_cc" = "xyes"; then
  AC_ARG_WITH(imlib2,
          [  --with-imlib2=DIR          use imlib2 in <DIR>],
          [CFLAGS="$CFLAGS -I$withval/include"
           LIBS="-L$withval/lib $LIBS"
	   IMLIB2_CONFIG="$withval/bin/imlib2-config"])
  if [ test -z "$IMLIB2_CONFIG" ]; then IMLIB2_CONFIG="imlib2-config"; fi
  imlib2_libs=`$IMLIB2_CONFIG --libs`
  imlib2_cflags=`$IMLIB2_CONFIG --cflags`
  V=`$IMLIB2_CONFIG --version`
  if [ test -z "$V" ]; then
      have_edje_cc="no";
      AC_MSG_WARN(Cannot find imlib2: Is imlib2-config in path?)
  else
    AC_DEFINE(HAVE_IMLIB, 1, [Define to 1 if you have Imlib2])
  fi
fi

AC_ARG_WITH(evas,
        [  --with-evas=DIR          use evas in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
         LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(evas, , ,
    AC_MSG_ERROR(Cannot find evas: Is evas-config in path?))

AC_ARG_WITH(ecore,
        [  --with-ecore=DIR          use ecore in <DIR>],
        [CFLAGS="$CFLAGS -I$withval/include"
         LIBS="-L$withval/lib $LIBS"])

AC_PATH_GENERIC(ecore, , ,
    AC_MSG_ERROR(Cannot find ecore: Is ecore-config in path?))

AC_MSG_CHECKING([for location of Vim data files])
install_vim="yes";
AC_ARG_WITH(vim,
    [  --with-vim=DIR          Location of Vim data files [[autodetect]]],
    [if test -d "${withval}"; then
       vimdir="${withval}"
    fi])

if test "x${vimdir}" = "x" ; then
   if test -d "${prefix}/share/vim"; then
      vimdir="${prefix}/share/vim"
   elif test -d "/usr/share/vim"; then
      vimdir="/usr/share/vim"
   elif test -d "/usr/local/share/vim"; then
      vimdir="/usr/local/share/vim"
   elif test -d "/opt/share/vim"; then
      vimdir="/opt/share/vim"
   else
      install_vim="no"
   fi
fi

if test "${install_vim}" = "yes"; then
   AC_MSG_RESULT([$vimdir])
else
   AC_MSG_RESULT([Not found, EDC syntax file will not be installed])
fi

EDJE_CC_PRG=""
EDJE_DECC_PRG=""
if test "x$have_edje_cc" = "xyes"; then
  AM_CONDITIONAL(BUILD_EDJE_CC, true)
  AM_CONDITIONAL(BUILD_EDJE_DECC, true)
  EDJE_CC_PRG="edje_cc"
  EDJE_DECC_PRG="edje_decc"
  EDJE_RECC_PRG="edje_recc"
  IMLIB2_CFLAGS=$imlib2_cflags
  IMLIB2_LIBS=$imlib2_libs
else
  AM_CONDITIONAL(BUILD_EDJE_CC, false)
  AM_CONDITIONAL(BUILD_EDJE_DECC, false)
fi
AC_SUBST(EDJE_CC_PRG)
AC_SUBST(EDJE_DECC_PRG)
AC_SUBST(EDJE_RECC_PRG)
AC_SUBST(IMLIB2_CFLAGS)
AC_SUBST(IMLIB2_LIBS)

AC_SUBST(vimdir)

AC_OUTPUT([
edje.pc
Makefile
data/Makefile
data/images/Makefile
data/include/Makefile
data/src/Makefile
data/template/Makefile
data/template/embryo/Makefile
data/template/fonts/Makefile
data/template/hashes/Makefile
data/template/images/Makefile
data/template/macros/Makefile
data/template/parts/Makefile
data/template/programs/Makefile
data/test/Makefile
data/test/fonts/Makefile
data/test/images/Makefile
src/Makefile
src/lib/Makefile
src/bin/Makefile
edje-config
],[
chmod +x edje-config
touch edje_docs.tar.gz
])

if test "x$have_edje_cc" = "xyes"; then
	if test "x$have_imlib2" = "xno"; then
		echo
		echo "WARNING: Building edje_cc without Imlib2 support!"
		echo
	fi
fi
