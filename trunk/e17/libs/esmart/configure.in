dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(esmart, 0.9.0.009)
AM_CONFIG_HEADER(src/config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_C_BIGENDIAN
AC_C_CONST
AM_ENABLE_SHARED
AM_PROG_LIBTOOL

dnl Use -Wall if we have gcc.
							
dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [Shared Data Directory])
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}", [Shared Data Directory])
fi

if test "x${prefix}" = "xNONE"; then
  container_plugin_dir=${ac_default_prefix}/lib/${PACKAGE}/layout
  AC_DEFINE_UNQUOTED(PREFIX, "${ac_default_prefix}", [Installation Prefix])
else
  AC_DEFINE_UNQUOTED(PREFIX, "${prefix}", [Installation Prefix])
  container_plugin_dir=${prefix}/lib/${PACKAGE}/layout
fi

AC_DEFINE_UNQUOTED(CONTAINER_PLUGIN_DIR, "${container_plugin_dir}", [Container Plugin Directory])
AC_SUBST(CONTAINER_PLUGIN_DIR)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall " ;;
  esac
fi
changequote([,])dnl

# evas is required by all of the modules anyway :)
requirements="evas"
PKG_CHECK_MODULES(CONTAINER, [evas >= 0.9.9])

AC_CHECK_HEADER(ltdl.h, have_esmart_container=yes, have_esmart_container=no)

PKG_CHECK_MODULES(DRAGGIES, [
    evas >= 0.9.9
    ecore-evas >= 0.9.9
  ], [
    have_esmart_draggies=yes
    requirements="$requirements ecore-evas"
  ]
)

PKG_CHECK_MODULES(RESIZE, [
    evas >= 0.9.9
    ecore-evas >= 0.9.9
  ], [
    have_esmart_resize=yes
    requirements="$requirements ecore-evas"
  ]
)

PKG_CHECK_MODULES(TRANSX11, [
    evas >= 0.9.9
    ecore-x >= 0.9.9
    imlib2 >= 1.0.0
  ], [
    have_esmart_trans_x11=yes
    requirements="$requirements ecore-x imlib2"
  ], [
    have_esmart_trans_x11=no
  ]
)

PKG_CHECK_MODULES(THUMB, [
    evas >= 0.9.9
    imlib2 >= 1.0.0
    epsilon >= 0.3.0
  ], [
    have_esmart_thumb=yes
    requirements="$requirements imlib2 epsilon"
  ], [
    have_esmart_thumb=no
  ]
)

PKG_CHECK_MODULES(TEXT_ENTRY, [
    evas >= 0.9.9
    edje >= 0.5.0
  ], [
    have_esmart_text_entry=yes
    requirements="$requirements edje"
  ], [
    have_esmart_text_entry=no
  ]
)

PKG_CHECK_MODULES(FILE_DIALOG, [
    evas >= 0.9.9
    edje >= 0.5.0
  ], [
    have_esmart_file_dialog=yes
    requirements="$requirements edje"
  ], [
    have_esmart_file_dialog=no
  ]
)

have_esmart_textarea=no

AM_CONDITIONAL(BUILD_ESMART_CONTAINER, test $have_esmart_container = yes)
AM_CONDITIONAL(BUILD_ESMART_DRAGGIES, test $have_esmart_draggies = yes)
AM_CONDITIONAL(BUILD_ESMART_RESIZE, test $have_esmart_resize = yes)
AM_CONDITIONAL(BUILD_ESMART_FILE_DIALOG, test $have_esmart_file_dialog = yes)
AM_CONDITIONAL(BUILD_ESMART_TEXT_ENTRY, test $have_esmart_text_entry = yes)
AM_CONDITIONAL(BUILD_ESMART_TEXTAREA, test $have_esmart_textarea = yes)
AM_CONDITIONAL(BUILD_ESMART_THUMB, test $have_esmart_thumb = yes)
AM_CONDITIONAL(BUILD_ESMART_TRANS_X11, test $have_esmart_trans_x11 = yes)

AM_CONDITIONAL(BUILD_TEST_APP, test $have_esmart_container = yes -a $have_esmart_thumb = yes)

AC_PATH_PROG(PERL, perl, 0)
AC_SUBST(PERL)

AC_SUBST(requirements)

AC_OUTPUT([
Makefile
esmart_container.pc
esmart_container-uninstalled.pc
esmart_draggies.pc
esmart_draggies-uninstalled.pc
esmart_file_dialog.pc
esmart_file_dialog-uninstalled.pc
esmart_resize.pc
esmart_resize-uninstalled.pc
esmart_textarea.pc
esmart_textarea-uninstalled.pc
esmart_text_entry.pc
esmart_text_entry-uninstalled.pc
esmart_thumb.pc
esmart_thumb-uninstalled.pc
esmart_trans_x11.pc
esmart_trans_x11-uninstalled.pc
esmart.spec
esmart-config
src/Makefile
src/lib/Makefile
src/lib/esmart_container/Makefile
src/lib/esmart_container/layout/Makefile
src/lib/esmart_container/layout/default/Makefile
src/lib/esmart_container/layout/entice/Makefile
src/lib/esmart_container/layout/engage/Makefile
src/lib/esmart_text_entry/Makefile
src/lib/esmart_file_dialog/Makefile
src/lib/esmart_thumb/Makefile
src/lib/esmart_trans_x11/Makefile
src/lib/esmart_draggies/Makefile
src/lib/esmart_resize/Makefile
src/bin/Makefile
data/Makefile
data/images/Makefile
debian/changelog
], [
chmod +x esmart-config
]
)

echo
echo
echo
echo "------------------------------------------------------------------------"
echo "$PACKAGE $VERSION"
echo "------------------------------------------------------------------------"
echo
echo "Configuration Options Summary:"
echo
echo "Components:"
echo "  Container...............: $have_esmart_container"
echo "  Draggies................: $have_esmart_draggies"
echo "  Resize..................: $have_esmart_resize"
echo "  File Dialog.............: $have_esmart_file_dialog"
echo "  Text Entry..............: $have_esmart_text_entry"
echo "  Text Area...............: $have_esmart_textarea"
echo "  Thumb...................: $have_esmart_thumb"
echo "  Trans X11...............: $have_esmart_trans_x11"
echo
echo "------------------------------------------------------------------------"
echo
echo "Now type 'make' ('gmake' on some systems) to compile $PACKAGE,"
echo "and then afterwards as root (or the user who will install this), type"
echo "'make install'. Change users with 'su' or 'sudo' appropriately."
echo
