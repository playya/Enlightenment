#define VERSION_STRING 0.1

fonts {
	font: "fonts/DejaVuSans.ttf" "DejaVuSans";
	font: "fonts/DejaVuSans-Bold.ttf" "DejaVuSans-Bold";
	font: "fonts/DejaVuSansMono.ttf" "DejaVuSans-Mono";
	font: "fonts/DejaVuSansMono-Bold.ttf" "DejaVuSans-Mono-Bold";
}

images {
    #include "images.edc" 			/* Includes both icons and regular images */
}

collections {
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/bg/base/default";
        parts {
            part { name: "base";
                mouse_events:  0;
                description { state: "default" 0.0;
                    image.normal: "images/win_background.png";
                }
            }
            part {
                name: "popover";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.offset: -20 -20;
                    rel2.relative: 1.0 0.5;
                    rel2.offset: 20 0;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part { name: "elm.swallow.background";
                type: SWALLOW;
                description { state: "default" 0.0;
                }
            }
            part { name: "elm.swallow.content";
                type: SWALLOW;
                description { state: "default" 0.0;
                    rel1.offset:  4 4;
                    rel2.offset: -5 -5;
                }
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
      name: "elm/scroller/base/default";
      alias: "elm/list/base/default";
      alias: "elm/genlist/base/default";
      alias: "elm/carousel/base/default";
      alias: "elm/gengrid/base/default";
      script {
	 public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
	 public timer0(val) {
	    new v;
	    v = get_int(sbvis_v);
	    if (v) {
               v = get_int(sbalways_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
	    }
	    v = get_int(sbvis_h);
	    if (v) {
               v = get_int(sbalways_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
	    }
	    set_int(sbvis_timer, 0);
	    return 0;
	 }
      }
      parts {
         part { name: "bg";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	    }
	 }
	 part { name: "elm.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
	 part { name: "conf_over";
	    mouse_events:  0;
	    description { state: "default" 0.0;
	       rel1.offset: 0 0;
	       rel2.offset: -1 -1;
	       image {
		  normal: "images/scrollframe_im1.png";
		  border: 7 7 7 7;
		  middle: 0;
	       }
	       fill.smooth : 0;
	    }
	 }
	 part { name: "sb_vbar_clip_master";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "sb_vbar_clip";
            clip_to: "sb_vbar_clip_master";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "sb_vbar";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       visible: 0;
	       min: 17 17;
	       align: 1.0 0.0;
	       rel1 {
		  relative: 1.0 0.0;
		  offset:   -2 0;
	       }
	       rel2 {
		  relative: 1.0 0.0;
		  offset:   -2 -1;
		  to_y:     "sb_hbar";
	       }
	    }
	 }
	 part { name: "sb_vbar_runner";
	    clip_to: "sb_vbar_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 3 3;
	       max: 3 99999;
	       rel1.to:       "sb_vbar";
	       rel2.to:       "sb_vbar";
	       image {
		  normal: "images/sb_runnerv.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "elm.dragable.vbar";
	    clip_to: "sb_vbar_clip";
	    mouse_events: 0;
	    dragable {
	       x: 0 0 0;
	       y: 1 1 0;
	       confine: "sb_vbar";
	    }
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       min: 13 13;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_vbar";
	       }
	       image {
		  normal: "images/scrollframe-bar_im2.png";
		  border: 6 6 6 6;
	       }
               image.middle: SOLID;
	    }
	 }
         part { name: "vbar_center";
	    clip_to: "sb_vbar_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 7 11;
	       max: 7 11;
               fixed: 1 1;
	       rel1.to: "elm.dragable.vbar";
	       rel2.to: "elm.dragable.vbar";
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
               align: 0.5 0.5;
	       image {
		  normal: "images/scrollframe-bar_im3.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }

	 part { name: "sb_hbar_clip_master";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "sb_hbar_clip";
            clip_to: "sb_hbar_clip_master";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	    }
	    description { state: "hidden" 0.0;
	       visible: 0;
	       color: 255 255 255 0;
	    }
	 }
	 part { name: "sb_hbar";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       visible: 0;
	       min: 17 17;
	       align: 0.0 1.0;
	       rel1 {
		  relative: 0.0 1.0;
		  offset:   0 -2;
	       }
	       rel2 {
		  relative: 0.0 1.0;
		  offset:   -1 -2;
		  to_x:     "sb_vbar";
	       }
	    }
	 }
	 part { name: "sb_hbar_runner";
	    clip_to: "sb_hbar_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 3 3;
	       max: 99999 3;
	       rel1.to:       "sb_hbar";
	       rel2.to:       "sb_hbar";
	       image {
		  normal: "images/sb_runnerh.png";
		  border: 4 4 0 0;
	       }
	       fill.smooth: 0;
	    }
	 }
	 part { name: "elm.dragable.hbar";
	    clip_to: "sb_hbar_clip";
	    mouse_events: 0;
	    dragable {
	       x: 1 1 0;
	       y: 0 0 0;
	       confine: "sb_hbar";
	    }
	    description { state: "default" 0.0;
	       fixed: 1 1;
	       min: 13 13;
	       rel1 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar";
	       }
	       rel2 {
		  relative: 0.5  0.5;
		  offset:   0    0;
		  to: "sb_hbar";
	       }
	       image {
		  normal: "images/scrollframe-bar_im0.png";
		  border: 6 6 6 6;
	       }
               image.middle: SOLID;
	    }
	 }
         part { name: "hbar_center";
	    clip_to: "sb_hbar_clip";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       min: 11 7;
	       max: 11 7;
               fixed: 1 1;
	       rel1.to: "elm.dragable.hbar";
	       rel2.to: "elm.dragable.hbar";
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
               align: 0.5 0.5;
	       image {
		  normal: "images/scrollframe-bar_im1.png";
		  border: 0 0 4 4;
	       }
	       fill.smooth: 0;
	    }
	 }
      }
      programs {
	 program { name: "load";
	    signal: "load";
	    source: "";
	    script {
	       set_state(PART:"sb_hbar_clip", "hidden", 0.0);
	       set_state(PART:"sb_vbar_clip", "hidden", 0.0);
	       set_int(sbvis_h, 0);
	       set_int(sbvis_v, 0);
	       set_int(sbalways_v, 0);
	       set_int(sbalways_h, 0);
	       set_int(sbvis_timer, 0);
	    }
	 }

	 program { name: "vbar_show";
	    signal: "elm,action,show,vbar";
	    source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_vbar_clip_master";
	 }
	 program { name: "vbar_hide";
	    signal: "elm,action,hide,vbar";
	    source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_vbar_clip_master";
	 }
	 program { name: "vbar_show_always";
	    signal: "elm,action,show_always,vbar";
	    source: "elm";
            script {
               new v;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               if (!v) {
                  set_int(sbalways_v, 1);
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
            }
	 }
	 program { name: "vbar_show_notalways";
	    signal: "elm,action,show_notalways,vbar";
	    source: "elm";
            script {
               new v;
               v = get_int(sbalways_v);
               if (v) {
                  set_int(sbalways_v, 0);
                  v = get_int(sbvis_v);
                  if (!v) {
                     emit("do-hide-vbar", "");
                     set_int(sbvis_v, 0);
                  }
               }
            }
	 }
	 program { name: "sb_vbar_show";
	    signal: "do-show-vbar";
	    source: "";
	    action:  STATE_SET "default" 0.0;
	    transition: LINEAR 1.0;
	    target: "sb_vbar_clip";
	 }
	 program { name: "sb_vbar_hide";
	    signal: "do-hide-vbar";
	    source: "";
	    action:  STATE_SET "hidden" 0.0;
	    transition: LINEAR 1.0;
	    target: "sb_vbar_clip";
	 }

	 program { name: "hbar_show";
	    signal: "elm,action,show,hbar";
	    source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_hbar_clip_master";
	 }
	 program { name: "hbar_hide";
	    signal: "elm,action,hide,hbar";
	    source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_hbar_clip_master";
	 }
	 program { name: "hbar_show_always";
	    signal: "elm,action,show_always,hbar";
	    source: "elm";
            script {
               new v;
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  set_int(sbalways_h, 1);
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
            }
	 }
	 program { name: "hbar_show_notalways";
	    signal: "elm,action,show_notalways,hbar";
	    source: "elm";
            script {
               new v;
               v = get_int(sbalways_h);
               if (v) {
                  set_int(sbalways_h, 0);
                  v = get_int(sbvis_h);
                  if (!v) {
                     emit("do-hide-hbar", "");
                     set_int(sbvis_h, 0);
                  }
               }
            }
	 }
	 program { name: "sb_hbar_show";
	    signal: "do-show-hbar";
	    source: "";
	    action:  STATE_SET "default" 0.0;
	    transition: LINEAR 1.0;
	    target: "sb_hbar_clip";
	 }
	 program { name: "sb_hbar_hide";
	    signal: "do-hide-hbar";
	    source: "";
	    action:  STATE_SET "hidden" 0.0;
	    transition: LINEAR 1.0;
	    target: "sb_hbar_clip";
	 }

	 program { name: "scroll";
	    signal: "elm,action,scroll";
	    source: "elm";
	    script {
	       new v;
	       v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
	       if (!v) {
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
	       }
	       v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
	       if (!v) {
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
	       }
	       v = get_int(sbvis_timer);
	       if (v > 0) cancel_timer(v);
	       v = timer(2.0, "timer0", 0);
	       set_int(sbvis_timer, v);
	    }
	 }
      }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/label/base/default";
        styles
        {
            style { name: "textblock_style";
                base: "font=DejaVuSans.ttf font_size=10 align=left color=#000 wrap=word";

                tag:  "br" "\n";
                tag:  "hilight" "+ font=DejaVuSans-Bold.ttf";
                tag:  "b" "+ font=DejaVuSans-Bold.ttf";
                tag:  "tab" "\t";
            }
        }
        parts {
            part { name: "elm.text";
                type: TEXTBLOCK;
                mouse_events: 0;
                scale: 1;
                description { state: "default" 0.0;
                    text {
                        style: "textblock_style";
                        min: 1 1;
                    }
                }
            }
        }
    }
    group {
        name: "elm/label/base_wrap/default";
        parts {
            part { name: "elm.text";
                type: TEXTBLOCK;
                mouse_events: 0;
                scale: 1;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    text {
                        style: "textblock_style";
                        min: 0 1;
                        max: 0 1;
                    }
                }
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/button/base/default";
        script {
            public bt_txt_visible;
            public bt_icon_visible;
        }
        parts {
            part {
                name: "base";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 50 26;
                    color: 255 255 255 178;
                    image.normal: "images/button_im0.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        offset: 3 4;
                    }
                    rel2 {
                        offset: -4 -5;
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                }
            }
            part {
                name: "button_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 255;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 3 1;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -4 -2;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 0;
                }
            }
            part {
                name: "focus_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1 {
                        to: "enabled_button";
                        offset: -1 0;
                    }
                    rel2 {
                        to: "enabled_button";
                        offset: 0 -1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "focus";
                mouse_events: 0;
                clip_to: "focus_clip";
                description {
                    state: "default" 0.0;
                    image.normal: "images/button_im3.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        to: "focus_clip";
                    }
                    rel2 {
                        to: "focus_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "enabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    image.normal: "images/button_im1.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "shadow";
                type: IMAGE;
                mouse_events: 0;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im4.png";
                    image.border: 6 6 13 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "disabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im2.png";
                    image.border: 11 11 10 10;
                    visible: 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 224;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.content";
                mouse_events: 0;
                type: SWALLOW;
                description { /* whether or not there is an icon?? */
                    state: "default" 0.0;
                    fixed: 1 0;
                    align: 0.0 0.5;
                    visible: 0;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 9 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 3 -7;
                    }
                }
                description { /* icon only */
                    state: "icononly" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    fixed: 0 0;
                    aspect_preference: VERTICAL;
                    align: 0.5 0.5;
                    rel1 {
                        offset: 0 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: 0 -7;
                    }
                }
                description { /* text + icon */
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    aspect_preference: VERTICAL;
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 4 -7;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                effect: SHADOW;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    visible: 0;
                    color: 60 60 60 255;
                    color3: 255 255 255 128;
                    rel1 {
                        to_x: "elm.swallow.content";
                        to_y: "base";
                        relative: 1.0 0.0;
                        offset: 0 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -8 -4;
                    }
                    text {
                        text: "";
                        font: "DejaVuSans-Bold";
                        size: 11;
                        min: 0 0;
                        align: 0.5 0.5;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    text.min: 1 1;
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                    color: 60 60 60 229;
                    color3: 170 168 169 64;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                    color: 96 96 96 255;
                    color3: 170 168 169 128;
                }
            }
            part {
                name: "shadow_overlay";
                type: IMAGE;
                mouse_events: 0;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im5.png";
                    image.border: 6 6 6 13;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
        }
        programs {
            program {
                name: "unclicked_button";
                signal: "mouse,up,1";
                source: "enabled_button";
                action: STATE_SET "default" 0.0;
                target: "enabled_button";
                target: "shadow";
                target: "shadow_overlay";
                after: "unclicked_button_2";
            }
            program {
                name: "unclicked_button_2";
                script {
                    if (get_int(bt_txt_visible) == 1)
                    set_state(PART:"elm.text", "visible", 0.0);
                    else
                    set_state(PART:"elm.text", "default", 0.0);
                }
            }
            /*program {
                name: "focused";
                signal: "e,state,focused";
                source: "e";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "focus_clip";
            }
            program {
                name: "lose_focus";
                signal: "e,state,unfocused";
                source: "e";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "focus_clip";
            }
            */
            program {
                name: "button_clicked";
                signal: "mouse,down,1";
                source: "enabled_button";
                script {
                    set_state(PART:"enabled_button", "clicked", 0.0);
                    set_state(PART:"shadow", "clicked", 0.0);
                    set_state(PART:"shadow_overlay", "clicked", 0.0);
                    set_state(PART:"elm.text", "clicked", 0.0);
                }
            }
            program {
                name: "button_action";
                signal: "mouse,clicked,1";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,click" "";
            }
            program { name: "text_show";
                signal: "elm,state,text,visible";
                source: "elm";
                script {
                    set_int(bt_txt_visible, 1);
                    if (get_int(bt_icon_visible) == 1)
                        set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"elm.text", "visible", 0.0);
                }
            }
            program { name: "text_hide";
                signal: "elm,state,text,hidden";
                source: "elm";
                script {
                    set_int(bt_txt_visible, 0);
                    if (get_int(bt_icon_visible) == 1)
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"elm.text", "default", 0.0);
                }
            }
            program { name: "icon_show";
                signal: "elm,state,icon,visible";
                source: "elm";
                script {
                    set_int(bt_icon_visible, 1);
                    if(get_int(bt_txt_visible) == 1)
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    else
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                }
            }
            program { name: "icon_hide";
                signal: "elm,state,icon,hidden";
                source: "elm";
                script {
                    set_int(bt_icon_visible, 0);
                    set_state(PART:"elm.swallow.content", "default", 0.0);
                }
            }
            program {
                name: "enabled_button";
                signal: "elm,state,enabled";
                source: "elm";
                script {
                    if(get_int(bt_txt_visible) == 1)
                        set_state(PART:"elm.text", "visible", 0.0);
                    else
                        set_state(PART:"elm.text", "default", 0.0);

                    set_state(PART:"base", "default", 0.0);
                    set_state(PART:"enabled_button", "default", 0.0);
                    set_state(PART:"disabled_button", "default", 0.0);
                    set_state(PART:"shadow", "default", 0.0);
                    set_state(PART:"shadow_overlay", "default", 0.0);
                }
            }
            program {
                name: "disabled_button";
                signal: "elm,state,disabled";
                source: "elm";
                action: STATE_SET "disabled" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "shadow";
                target: "shadow_overlay";
                target: "elm.text";
            }
        }
    }
    group {
        name: "elm/button/base/anchor";
        alias: "elm/button/base/hoversel_vertical_entry/default";
        alias: "elm/button/base/hoversel_vertical_entry/entry";
        script {
            public bt_txt_visible;
            public bt_icon_visible;
        }
        parts {
            part {
                name: "base";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 50 26;
                    color: 255 255 255 0;
                    image.normal: "images/button_im0.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        offset: 3 4;
                    }
                    rel2 {
                        offset: -4 -5;
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 178;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                }
            }
            part {
                name: "button_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 255;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 3 1;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -4 -2;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 0;
                }
            }
            part {
                name: "focus_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1 {
                        to: "enabled_button";
                        offset: -1 0;
                    }
                    rel2 {
                        to: "enabled_button";
                        offset: 0 -1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "focus";
                mouse_events: 0;
                clip_to: "focus_clip";
                description {
                    state: "default" 0.0;
                    image.normal: "images/button_im3.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        to: "focus_clip";
                    }
                    rel2 {
                        to: "focus_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "enabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    image.normal: "images/button_im1.png";
                    image.border: 7 7 7 7;
                    color: 255 255 255 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "shadow";
                type: IMAGE;
                mouse_events: 0;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im4.png";
                    image.border: 6 6 13 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "disabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im2.png";
                    image.border: 11 11 10 10;
                    visible: 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 224;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.content";
                mouse_events: 0;
                type: SWALLOW;
                description { /* whether or not there is an icon?? */
                    state: "default" 0.0;
                    fixed: 1 0;
                    align: 0.0 0.5;
                    visible: 0;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 9 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 3 -7;
                    }
                }
                description { /* icon only */
                    state: "icononly" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    fixed: 0 0;
                    aspect_preference: VERTICAL;
                    align: 0.5 0.5;
                    rel1 {
                        offset: 0 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: 0 -7;
                    }
                }
                description { /* text + icon */
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    aspect_preference: VERTICAL;
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 4 -7;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                effect: SHADOW;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    visible: 0;
                    color: 60 60 60 255;
                    color3: 255 255 255 128;
                    rel1 {
                        to_x: "elm.swallow.content";
                        to_y: "base";
                        relative: 1.0 0.0;
                        offset: 0 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -8 -4;
                    }
                    text {
                        text: "";
                        font: "DejaVuSans-Bold";
                        size: 11;
                        min: 0 0;
                        align: 0.5 0.5;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    text.min: 1 1;
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                    color: 60 60 60 229;
                    color3: 170 168 169 64;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    inherit: "visible" 0.0;
                    color: 96 96 96 255;
                    color3: 170 168 169 128;
                }
            }
            part {
                name: "shadow_overlay";
                type: IMAGE;
                mouse_events: 0;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im5.png";
                    image.border: 6 6 6 13;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
        }
        programs {
            program {
                name: "show";
                signal: "show";
            }
            program {
                name: "unclicked_button";
                signal: "mouse,up,1";
                source: "enabled_button";
                 script {
                    set_state(PART:"enabled_button", "visible", 0.0);
                    set_state(PART:"shadow", "default", 0.0);
                    set_state(PART:"shadow_overlay", "default", 0.0);
                }
                after: "unclicked_button_2";
            }
            program {
                name: "unclicked_button_2";
                script {
                    if (get_int(bt_txt_visible) == 1)
                    set_state(PART:"elm.text", "visible", 0.0);
                    else
                    set_state(PART:"elm.text", "default", 0.0);
                }
            }
            /*program {
                name: "focused";
                signal: "e,state,focused";
                source: "e";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "focus_clip";
            }
            program {
                name: "lose_focus";
                signal: "e,state,unfocused";
                source: "e";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "focus_clip";
            }
            */
            program {
                name: "button_clicked";
                signal: "mouse,down,1";
                source: "enabled_button";
                script {
                    set_state(PART:"enabled_button", "clicked", 0.0);
                    set_state(PART:"shadow", "clicked", 0.0);
                    set_state(PART:"shadow_overlay", "clicked", 0.0);
                    set_state(PART:"elm.text", "clicked", 0.0);
                }
            }
            program {
                name: "button_action";
                signal: "mouse,clicked,1";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,click" "";
            }
            program { name: "text_show";
                signal: "elm,state,text,visible";
                source: "elm";
                script {
                    set_int(bt_txt_visible, 1);
                    if (get_int(bt_icon_visible) == 1)
                        set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"elm.text", "visible", 0.0);
                }
            }
            program { name: "text_hide";
                signal: "elm,state,text,hidden";
                source: "elm";
                script {
                    set_int(bt_txt_visible, 0);
                    if (get_int(bt_icon_visible) == 1)
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"elm.text", "default", 0.0);
                }
            }
            program { name: "icon_show";
                signal: "elm,state,icon,visible";
                source: "elm";
                script {
                    set_int(bt_icon_visible, 1);
                    if(get_int(bt_txt_visible) == 1)
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    else
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                }
            }
            program { name: "icon_hide";
                signal: "elm,state,icon,hidden";
                source: "elm";
                script {
                    set_int(bt_icon_visible, 0);
                    set_state(PART:"elm.swallow.content", "default", 0.0);
                }
            }
            program {
                name: "enabled_button";
                signal: "elm,state,enabled";
                source: "elm";
                script {
                    if(get_int(bt_txt_visible) == 1)
                        set_state(PART:"elm.text", "visible", 0.0);
                    else
                        set_state(PART:"elm.text", "default", 0.0);

                    set_state(PART:"base", "visible", 0.0);
                    set_state(PART:"enabled_button", "visible", 0.0);
                    set_state(PART:"disabled_button", "visible", 0.0);
                    set_state(PART:"shadow", "default", 0.0);
                    set_state(PART:"shadow_overlay", "default", 0.0);
                }
            }
            program {
                name: "disabled_button";
                signal: "elm,state,disabled";
                source: "elm";
                action: STATE_SET "disabled" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "shadow";
                target: "shadow_overlay";
                target: "elm.text";
            }
            program {
                name:   "button_mouse_in";
                signal: "mouse,in";
                source: "enabled_button";
                action: STATE_SET "visible" 0.0;
                target: "base";
                target: "enabled_button";
                transition: DECELERATE 0.5;
            }
            program {
                name:   "button_mouse_out";
                signal: "mouse,out";
                source: "enabled_button";
                action: STATE_SET "default" 0.0;
                target: "base";
                target: "enabled_button";
                transition: DECELERATE 0.5;
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/menu/separator/default";
        parts {
            part {
                name: "separator";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 20 2;
                    max: 9999 2;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: -4 3;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: 3 -3;
                    }
                    image {
                        normal: "images/menu_im1.png";
                        border: 2 2 1 1;
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
        }
    }
    group {
        name: "elm/menu/item/default";
        parts {
            part {
                name: "base";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 50 26;
                    color: 255 255 255 0;
                    image.normal: "images/menu_im2.png";
                    image.border: 5 5 5 5;
                    rel1 {
                        offset: 0 1;
                    }
                    rel2 {
                        offset: -1 -1;
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                }
            }
            part {
                name: "button_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 255;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 3 1;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -4 -2;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 0;
                }
            }
            part {
                name: "focus_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1 {
                        to: "enabled_button";
                        offset: -1 0;
                    }
                    rel2 {
                        to: "enabled_button";
                        offset: 0 -1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "focus";
                mouse_events: 0;
                clip_to: "focus_clip";
                description {
                    state: "default" 0.0;
                    image.normal: "images/button_im3.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        to: "focus_clip";
                    }
                    rel2 {
                        to: "focus_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "enabled_button";
                type: RECT;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "disabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im2.png";
                    image.border: 11 11 10 10;
                    visible: 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 224;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.content";
                mouse_events: 0;
                type: SWALLOW;
                description { /* whether or not there is an icon?? */
                    state: "default" 0.0;
                    fixed: 1 0;
                    align: 0.0 0.5;
                    visible: 0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 10 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 4 -7;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                effect: SHADOW;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    visible: 1;
                    color: 60 60 60 255;
                    color3: 255 255 255 128;
                    rel1 {
                        to_x: "elm.swallow.content";
                        to_y: "base";
                        relative: 1.0 0.0;
                        offset: 5 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -8 -4;
                    }
                    text {
                        text: "";
                        font: "DejaVuSans-Bold";
                        size: 11;
                        min: 1 1;
                        align: 0.0 0.5;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 60 60 60 229;
                    color3: 170 168 169 64;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 96 96 96 255;
                    color3: 170 168 169 128;
                }
            }
        }
        programs {
            program {
                name: "unclicked_button";
                signal: "mouse,up,1";
                source: "enabled_button";
                script {
                    set_state(PART:"elm.text", "visible", 0.0);
                }
            }
            program {
                name: "button_clicked";
                signal: "mouse,down,1";
                source: "enabled_button";
                script {
                    set_state(PART:"enabled_button", "clicked", 0.0);
                    set_state(PART:"elm.text", "clicked", 0.0);
                }
            }
            program {
                name: "button_action";
                signal: "mouse,clicked,1";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,click" "";
            }
            program {
                name: "enabled_button";
                signal: "elm,state,enabled";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "elm.text";
            }
            program {
                name: "disabled_button";
                signal: "elm,state,disabled";
                source: "elm";
                action: STATE_SET "disabled" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "elm.text";
            }
            program {
                name:   "button_mouse_in";
                signal: "mouse,in";
                source: "enabled_button";
                action: STATE_SET "visible" 0.0;
                target: "base";
                transition: DECELERATE 0.5;
            }
            program {
                name:   "item_mouse_in";
                signal: "mouse,in";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,activate" "";
            }
            program {
                name:   "button_mouse_out";
                signal: "mouse,out";
                source: "enabled_button";
                action: STATE_SET "default" 0.0;
                target: "base";
                transition: DECELERATE 0.5;
            }
        }
    }
    group {
        name: "elm/menu/item_with_submenu/default";
        parts {
            part {
                name: "base";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 50 26;
                    color: 255 255 255 0;
                    image.normal: "images/menu_im2.png";
                    image.border: 5 5 5 5;
                    rel1 {
                        offset: 0 1;
                    }
                    rel2 {
                        offset: -1 -1;
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                }
            }
            part {
                name: "arrow";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    min: 10 11;
                    max: 10 11;
                    aspect: 1 1;
                    align: 1.0 0.5;
                    aspect_preference: BOTH;
                    rel2.offset: -5 0;
                    image.normal: "images/menu_im3.png";
                }
            }
            part {
                name: "button_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 255;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 3 1;
                    }
                    rel2 {
                        to: "base";
                        relative: 1.0 1.0;
                        offset: -4 -2;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 0;
                }
            }
            part {
                name: "focus_clip";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1 {
                        to: "enabled_button";
                        offset: -1 0;
                    }
                    rel2 {
                        to: "enabled_button";
                        offset: 0 -1;
                    }
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "focus";
                mouse_events: 0;
                clip_to: "focus_clip";
                description {
                    state: "default" 0.0;
                    image.normal: "images/button_im3.png";
                    image.border: 7 7 7 7;
                    rel1 {
                        to: "focus_clip";
                    }
                    rel2 {
                        to: "focus_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "enabled_button";
                type: RECT;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                }
            }
            part {
                name: "disabled_button";
                type: IMAGE;
                mouse_events: 1;
                clip_to: "button_clip";
                description {
                    state: "default" 0.0;
                    min: 24 24;
                    color: 255 255 255 0;
                    image.normal: "images/button_im2.png";
                    image.border: 11 11 10 10;
                    visible: 0;
                    rel1 {
                        to: "button_clip";
                    }
                    rel2 {
                        to: "button_clip";
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 224;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.content";
                mouse_events: 0;
                type: SWALLOW;
                description { /* whether or not there is an icon?? */
                    state: "default" 0.0;
                    fixed: 1 0;
                    align: 0.0 0.5;
                    visible: 0;
                    visible: 1;
                    aspect: 1.0 1.0;
                    rel1 {
                        to: "base";
                        relative: 0.0 0.0;
                        offset: 10 6;
                    }
                    rel2 {
                        to: "base";
                        relative: 0.0 1.0;
                        offset: 4 -7;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                effect: SHADOW;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    visible: 1;
                    fixed: 0 1;
                    color: 60 60 60 255;
                    color3: 255 255 255 128;
                    rel1 {
                        to_x: "elm.swallow.content";
                        to_y: "base";
                        relative: 1.0 0.0;
                        offset: 5 6;
                    }
                    rel2 {
                        to_y: "base";
                        to_x: "arrow";
                        relative: 0.0 1.0;
                        offset: -5 -4;
                    }
                    text {
                        text: "";
                        font: "DejaVuSans-Bold";
                        size: 11;
                        min: 1 1;
                        align: 0.0 0.5;
                    }
                }
                description {
                    state: "clicked" 0.0;
                    inherit: "default" 0.0;
                    color: 60 60 60 229;
                    color3: 170 168 169 64;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    color: 96 96 96 255;
                    color3: 170 168 169 128;
                }
            }
        }
        programs {
            program {
                name: "unclicked_button";
                signal: "mouse,up,1";
                source: "enabled_button";
                script {
                    set_state(PART:"elm.text", "visible", 0.0);
                }
            }
            program {
                name: "button_clicked";
                signal: "mouse,down,1";
                source: "enabled_button";
                script {
                    set_state(PART:"enabled_button", "clicked", 0.0);
                    set_state(PART:"elm.text", "clicked", 0.0);
                }
            }
            program {
                name: "button_action";
                signal: "mouse,clicked,1";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,click" "";
            }
            program {
                name: "enabled_button";
                signal: "elm,state,enabled";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "elm.text";
            }
            program {
                name: "disabled_button";
                signal: "elm,state,disabled";
                source: "elm";
                action: STATE_SET "disabled" 0.0;
                target: "base";
                target: "enabled_button";
                target: "disabled_button";
                target: "elm.text";
            }
            program {
                name:   "button_mouse_in";
                signal: "mouse,in";
                source: "enabled_button";
                action: STATE_SET "visible" 0.0;
                target: "base";
                transition: DECELERATE 0.5;
            }
            program {
                name:   "item_mouse_in";
                signal: "mouse,in";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,activate" "";
            }
            program {
                name:   "menu_open";
                signal: "mouse,in";
                source: "enabled_button";
                action: SIGNAL_EMIT "elm,action,open" "";
            }
            program {
                name:   "button_mouse_out";
                signal: "mouse,out";
                source: "enabled_button";
                action: STATE_SET "default" 0.0;
                target: "base";
                transition: DECELERATE 0.5;
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/frame/base/default";
        parts {
            part {
                name: "frame";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.offset: 0 2;
                    rel2 {
                        to: "elm.swallow.content";
                        offset: 9 8;
                    }
                    image.normal: "images/frame_im0.png";
                    image.border: 9 8 8 8;
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.5 0.0;
                    fixed: 0 0;
                    rel1 {
                        to_y: "elm.text";
                        relative: 0.0 0.0;
                        offset: 10 25;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -11 -10;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                effect: SHADOW;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    fixed: 0 1;
                    color: 60 60 60 255;
                    color3: 255 255 255 128;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 11 10;
                    }
                    rel2 {
                        relative: 1.0 0.0;
                        offset: -5 -1;
                    }
                    text {
                        text: "Frame Label";
                        font: "DejaVuSans-Bold";
                        size: 11;
                        min: 1 1;
                        max: 1 1;
                        align: 0.0 0.0;
                    }
                }
            }
        }
    }
    group {
        name: "elm/frame/base/pad_small";
        parts {
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1 {
                        offset: 5 5;
                    }
                    rel2 {
                        offset: -5 -4;
                    }
                }
            }
        }
    }
    group {
        name: "elm/frame/base/pad_medium";
        parts {
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1 {
                        offset: 10 10;
                    }
                    rel2 {
                        offset: -9 -8;
                    }
                }
            }
        }
    }
    group {
        name: "elm/frame/base/pad_large";
        parts {
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1 {
                        offset: 16 16;
                    }
                    rel2 {
                        offset: -16 -16;
                    }
                }
            }
        }
    }
    group {
        name: "elm/frame/base/pad_huge";
        parts {
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1 {
                        offset: 32 32;
                    }
                    rel2 {
                        offset: -32 -32;
                    }
                }
            }
        }
    }
    group {
        name: "elm/frame/base/outdent_top";
        parts {
            part { name: "base0";
                mouse_events:  0;
                description {
                    state: "default" 0.0;
                    image.normal: "images/outdent-top.png";
                    image.border: 0 0 0 13;
                    fill.smooth: 0;
                }
            }
            part { name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1.offset: 2 2;
                    rel2.offset: -3 -13;
                }
            }
        }
    }
    group {
        name: "elm/frame/base/outdent_bottom";
        parts {
            part { name: "base0";
                mouse_events:  0;
                description {
                    state: "default" 0.0;
                    image.normal: "images/outdent-bottom.png";
                    image.border: 0 0 13 0;
                    fill.smooth: 0;
                }
            }
            part { name: "elm.swallow.content";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1.offset: 2 12;
                    rel2.offset: -3 -3;
                }
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/hover/base/default";
        parts {
            part {
                name: "elm.swallow.offset";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 0.0 0.0;
                }
            }
            part {
                name: "elm.swallow.size";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.to: "elm.swallow.offset";
                    rel1.relative: 1.0 1.0;
                    rel2.to: "elm.swallow.offset";
                    rel2.relative: 1.0 1.0;
                }
            }
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description { state: "default" 0.0;
                    color: 0 0 0 64;
                }
            }
            part {
                name: "box";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color: 0 0 0 0;
                    rel1.to: "elm.swallow.size";
                    rel1.offset: -2 -2;
                    rel2.to: "elm.swallow.size";
                    rel2.offset: 1 1;
                }
            }
            part {
                name: "elm.swallow.slot.left";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 1.0 0.5;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 0.0;
                    rel1.offset: -1 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 0.0 1.0;
                    rel2.offset: -1 -1;
                }
            }
            part {
                name: "elm.swallow.slot.right";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.5;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 1.0 0.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: 0 -1;
                }
            }
            part {
                name: "elm.swallow.slot.top";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 0.0;
                    rel1.offset: 0 -1;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 0.0;
                    rel2.offset: -1 -1;
                }
            }
            part {
                name: "elm.swallow.slot.bottom";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.5 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: -1 0;
                }
            }
            part {
                name: "elm.swallow.slot.middle";
                type: SWALLOW;
                description { state: "default" 0.0;
                    rel1.to: "elm.swallow.size";
                    rel2.to: "elm.swallow.size";
                }
            }
        }
        programs {
            program {
                name: "end";
                signal: "mouse,up,1";
                source: "base";
                action: SIGNAL_EMIT "elm,action,dismiss" "";
            }
        }
    }
    group {
        name: "elm/hover/base/popout";
        parts {
            part {
                name: "elm.swallow.offset";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 0.0 0.0;
                }
            }
            part {
                name: "elm.swallow.size";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.to: "elm.swallow.offset";
                    rel1.relative: 1.0 1.0;
                    rel2.to: "elm.swallow.offset";
                    rel2.relative: 1.0 1.0;
                }
            }
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description { state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 0 0 0 64;
                }
            }
            part {
                name: "leftclip";
                type: RECT;
                description { state: "default" 0.0;
                    rel2.to_x: "pop";
                    rel2.relative: 0.0 1.0;
                    rel2.offset: 1 -1;
                }
            }
            part {
                name: "left";
                clip_to: "leftclip";
                description { state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.left";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.left";
                    rel2.offset: 10 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.slot.left";
                type: SWALLOW;
                clip_to: "leftclip";
                description {
                    state: "default" 0.0;
                    align: 0.0 0.5;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 0.0;
                    rel1.offset: -1 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 0.0 1.0;
                    rel2.offset: -1 -1;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: -7 0;
                    rel2.offset: -7 -1;
                    align: 1.0 0.5;
                }
            }
            part {
                name: "leftover";
                clip_to: "leftclip";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "left";
                    rel2.to: "left";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "rightclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel1.to_x: "pop";
                    rel1.relative: 1.0 0.0;
                    rel1.offset: -2 0;
                }
            }
            part {
                name: "right";
                clip_to: "rightclip";
                description {
                    state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.right";
                    rel1.offset: -10 -5;
                    rel2.to: "elm.swallow.slot.right";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.slot.right";
                type: SWALLOW;
                clip_to: "rightclip";
                description {
                    state: "default" 0.0;
                    align: 1.0 0.5;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 1.0 0.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: 0 -1;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 6 0;
                    rel2.offset: 6 -1;
                    align: 0.0 0.5;
                }
            }
            part {
                name: "rightover";
                clip_to: "rightclip";
                mouse_events: 0;
                description { state: "default" 0.0;
                    rel1.to: "right";
                    rel2.to: "right";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "topclip";
                type: RECT;
                description { state: "default" 0.0;
                    rel2.to_y: "pop";
                    rel2.relative: 1.0 0.0;
                    rel2.offset: -1 1;
                }
            }
            part {
                name: "top";
                clip_to: "topclip";
                description {
                    state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.top";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.top";
                    rel2.offset: 4 10;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.slot.top";
                type: SWALLOW;
                clip_to: "topclip";
                description {
                    state: "default" 0.0;
                    visible: 1;
                    align: 0.5 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 0.0;
                    rel1.offset: 0 -1;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 0.0;
                    rel2.offset: -1 -1;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 -7;
                    rel2.offset: -1 -7;
                    align: 0.5 1.0;
                }
            }
            part {
                name: "topover";
                clip_to: "topclip";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "top";
                    rel2.to: "top";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "bottomclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel1.to_y: "pop";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: -1 -2;
                }
            }
            part {
                name: "bottom";
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -5 -10;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.slot.bottom";
                type: SWALLOW;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: -1 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 6;
                    rel2.offset: -1 6;
                    align: 0.5 0.0;
                }
            }
            part {
                name: "bottomover";
                clip_to: "bottomclip";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "bottom";
                    rel2.to: "bottom";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "pop";
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
            }
            part {
                name: "elm.swallow.slot.middle";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.size";
                    rel2.to: "elm.swallow.size";
                }
            }
            part {
                name: "popover";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "pop";
                    rel2.to: "pop";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
        }
        programs {
            program {
                name: "end";
                signal: "mouse,up,1";
                source: "base";
                action: SIGNAL_EMIT "elm,action,dismiss" "";
            }

            program {
                name: "show";
                signal: "elm,action,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                target: "base";
            }
            program {
                name: "hide";
                signal: "elm,action,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "base";
            }

            program {
                name: "leftshow";
                signal: "elm,action,slot,left,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "left";
                target: "elm.swallow.slot.left";
            }
            program {
                name: "lefthide";
                signal: "elm,action,slot,left,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "left";
                target: "elm.swallow.slot.left";
            }
            program {
                name: "rightshow";
                signal: "elm,action,slot,right,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "right";
                target: "elm.swallow.slot.right";
            }
            program {
                name: "righthide";
                signal: "elm,action,slot,right,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "right";
                target: "elm.swallow.slot.right";
            }
            program {
                name: "topshow";
                signal: "elm,action,slot,top,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "top";
                target: "elm.swallow.slot.top";
            }
            program {
                name: "tophide";
                signal: "elm,action,slot,top,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "top";
                target: "elm.swallow.slot.top";
            }
            program {
                name: "bottomshow";
                signal: "elm,action,slot,bottom,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
            program {
                name: "bottomhide";
                signal: "elm,action,slot,bottom,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
        }
    }
    group {
        name: "elm/hover/base/hoversel_vertical/default";
        alias: "elm/hover/base/hoversel_vertical/entry";
        parts {
            part {
                name: "elm.swallow.offset";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 0.0 0.0;
                }
            }
            part {
                name: "elm.swallow.size";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.to: "elm.swallow.offset";
                    rel1.relative: 1.0 1.0;
                    rel2.to: "elm.swallow.offset";
                    rel2.relative: 1.0 1.0;
                }
            }
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 0 0 0 64;
                }
            }
            part {
                name: "button_image";
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    rel1.to_x: "elm.swallow.slot.top";
                    rel1.to_y: "elm.swallow.slot.top";
                    rel1.offset: -2 -6;
                    rel2.to_x: "elm.swallow.slot.top";
                    rel2.to_y: "elm.swallow.slot.bottom";
                    rel2.offset: 1 5;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
                description {
                    state: "bottom" 0.0;
                    rel1.to_x: "elm.swallow.slot.bottom";
                    rel1.to_y: "elm.swallow.slot.top";
                    rel1.offset: -2 -6;
                    rel2.to_x: "elm.swallow.slot.bottom";
                    rel2.to_y: "elm.swallow.slot.bottom";
                    rel2.offset: 1 5;
                    image {
                        normal: "images/button_im1.png";
                        border: 4 4 4 4;
                    }
                    image.middle: SOLID;
                }
            }
            part {
                name: "topclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel2.to_y: "edge_top";
                    rel2.relative: 1.0 0.0;
                    rel2.offset: -1 7;
                }
            }
            part {
                name: "elm.swallow.slot.top";
                type: SWALLOW;
                clip_to: "topclip";
                description {
                    state: "default" 0.0;
                    visible: 1;
                    align: 0.5 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 0.0;
                    rel1.offset: 0 -1;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 0.0;
                    rel2.offset: -1 -1;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 -7;
                    rel2.offset: -1 -7;
                    align: 0.5 1.0;
                }
            }
            part {
                name: "bottomclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel1.to_y: "edge_bottom";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: -1 -8;
                }
            }
            part {
                name: "elm.swallow.slot.bottom";
                type: SWALLOW;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: -1 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 6;
                    rel2.offset: -1 6;
                    align: 0.5 0.0;
                }
            }
            part {
                name: "over1";
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1.to: "button_image";
                    rel2.to: "button_image";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 7 7 7 0;
                    }
                }
            }
            part {
                name: "edge_top";
                mouse_events:  0;
                description {
                    state: "default" 0.0;
                    visible: 0;
                    rel1 {
                        to: "elm.swallow.size";
                        offset: 0 -10;
                    }
                    rel2 {
                        to: "elm.swallow.size";
                    }
                    image.normal: "images/outdent-bottom.png";
                    image.border: 0 0 13 0;
                    fill.smooth: 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "edge_bottom";
                mouse_events:  0;
                description {
                    state: "default" 0.0;
                    visible: 0;
                    rel1 {
                        to: "elm.swallow.size";
                    }
                    rel2 {
                        to: "elm.swallow.size";
                        offset: -1 9;
                    }
                    image.normal: "images/outdent-top.png";
                    image.border: 0 0 0 13;
                    fill.smooth: 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.slot.middle";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.size";
                    rel2.to: "elm.swallow.size";
                }
            }
        }
        programs {
            program {
                name: "end";
                signal: "mouse,up,1";
                source: "base";
                action: SIGNAL_EMIT "elm,action,dismiss" "";
            }
            program {
                name: "show";
                signal: "elm,action,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "hide";
                signal: "elm,action,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "topshow";
                signal: "elm,action,slot,top,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                target: "edge_top";
                after: "topshow2";
            }
            program {
                name: "topshow2";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "elm.swallow.slot.top";
            }
            program {
                name: "topshow3";
                signal: "elm,action,slot,top,show";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "button_image";
            }
            program {
                name: "tophide";
                signal: "elm,action,slot,top,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "elm.swallow.slot.top";
                after: "tophide2";
            }
            program {
                name: "tophide2";
                action: STATE_SET "default" 0.0;
                target: "edge_top";
            }
            program {
                name: "bottomshow";
                signal: "elm,action,slot,bottom,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                target: "edge_bottom";
                after: "bottomshow2";
            }
            program {
                name: "bottomshow2";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "elm.swallow.slot.bottom";
            }
            program {
                name: "bottomshow3";
                signal: "elm,action,slot,bottom,show";
                source: "elm";
                action: STATE_SET "bottom" 0.0;
                target: "button_image";
            }
            program {
                name: "bottomhide";
                signal: "elm,action,slot,bottom,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "elm.swallow.slot.bottom";
                after: "bottomhide2";
            }
            program {
                name: "bottomhide2";
                action: STATE_SET "default" 0.0;
                target: "edge_bottom";
            }
        }
    }
    //In the hover used by the menu only the bottom part is used.
    group {
        name: "elm/hover/base/menu";
        parts {
            part {
                name: "elm.swallow.offset";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 0.0 0.0;
                }
            }
            part {
                name: "elm.swallow.size";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.to: "elm.swallow.offset";
                    rel1.relative: 1.0 1.0;
                    rel2.to: "elm.swallow.offset";
                    rel2.relative: 1.0 1.0;
                }
            }
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 0 0 0 64;
                }
            }
            part {
                name: "elm.swallow.slot.left";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
            }
            part {
                name: "elm.swallow.slot.right";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
            }
            part {
                name: "elm.swallow.slot.top";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                }
            }
            part {
                name: "bottomclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel1.to_y: "pop";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: -1 -2;
                }
            }
            part {
                name: "bottom_bg_border";
                type: RECT;
                mouse_events: 0;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    color: 104 108 111 255;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 4 4;
                }
            }
            part {
                name: "bottom_gradient";
                type: RECT;
                mouse_events: 0;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -4 -2;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 3 3;
                }
            }
            part { name: "bottom";
                clip_to: "bottomclip";
                description { state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -4 -2;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 3 3;
                    image {
                        normal: "images/menu_im0.png";
                        border: 2 2 2 2;
                    }
                    image.middle: 1;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part { name: "elm.swallow.slot.bottom";
                type: SWALLOW;
                clip_to: "bottomclip";
                description { state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: -1 0;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 6;
                    rel2.offset: -1 6;
                    align: 0.5 0.0;
                }
            }
            part { name: "pop";
                mouse_events: 1;
                repeat_events:1;
                description { state: "default" 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.offset: 4 4;
                }
            }
            part { name: "elm.swallow.slot.middle";
                type: SWALLOW;
                repeat_events:1;
                description { state: "default" 0.0;
                    rel1.to: "elm.swallow.size";
                    rel2.to: "elm.swallow.size";
                }
            }
        }
        programs {
            program {
                name: "end";
                signal: "mouse,up,1";
                source: "base";
                action: SIGNAL_EMIT "elm,action,dismiss" "";
            }
            program {
                name: "show";
                signal: "elm,action,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "hide";
                signal: "elm,action,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "bottomshow";
                signal: "elm,action,slot,bottom,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
            program {
                name: "bottomhide";
                signal: "elm,action,slot,bottom,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
        }
    }
    //In the hover used by the submenu only the bottom part is used
    //and no part should interact except the bottom area
    group {
        name: "elm/hover/base/submenu";
        parts {
            part {
                name: "elm.swallow.offset";
                type: SWALLOW;
                repeat_events:1;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 0.0 0.0;
                }
            }
            part {
                name: "elm.swallow.size";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1.to: "elm.swallow.offset";
                    rel1.relative: 1.0 1.0;
                    rel2.to: "elm.swallow.offset";
                    rel2.relative: 1.0 1.0;
                }
            }
            //here we do non catch events like the hover hover does
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                    visible: 0;
                }
            }
            part {
                name: "elm.swallow.slot.left";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
            }
            part {
                name: "elm.swallow.slot.right";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
            }
            part {
                name: "elm.swallow.slot.top";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                }
            }
            part {
                name: "bottomclip";
                type: RECT;
                description {
                    state: "default" 0.0;
                    rel1.to_y: "pop";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: -1 -2;
                }
            }
            part {
                name: "bottom_bg_border";
                type: RECT;
                mouse_events: 0;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    color: 104 108 111 255;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 4 4;
                }
            }
            part {
                name: "bottom_gradient";
                type: RECT;
                mouse_events: 0;
                clip_to: "bottomclip";
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -4 -2;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 3 3;
                }
            }
            part { name: "bottom";
                clip_to: "bottomclip";
                description { state: "default" 0.0;
                    visible: 0;
                    rel1.to: "elm.swallow.slot.bottom";
                    rel1.offset: -4 -2;
                    rel2.to: "elm.swallow.slot.bottom";
                    rel2.offset: 3 3;
                    image {
                        normal: "images/menu_im0.png";
                        border: 2 2 2 2;
                    }
                    image.middle: 1;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
            part { name: "elm.swallow.slot.bottom";
                type: SWALLOW;
                clip_to: "bottomclip";
                description { state: "default" 0.0;
                    align: 0.5 1.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.relative: 0.0 1.0;
                    rel1.offset: 0 0;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.relative: 1.0 1.0;
                    rel2.offset: -1 0;
                }
                description { state: "visible" 0.0;
                    inherit: "default" 0.0;
                    rel1.offset: 0 6;
                    rel2.offset: -1 6;
                    align: 0.5 0.0;
                }
            }
            part { name: "pop";
                mouse_events: 1;
                repeat_events:1;
                description { state: "default" 0.0;
                    rel1.to: "elm.swallow.slot.middle";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.slot.middle";
                    rel2.offset: 4 4;
                }
            }
            part { name: "elm.swallow.slot.middle";
                type: SWALLOW;
                repeat_events:1;
                description { state: "default" 0.0;
                    rel1.to: "elm.swallow.size";
                    rel2.to: "elm.swallow.size";
                }
            }
        }
        programs {
            program {
                name: "end";
                signal: "mouse,up,1";
                source: "base";
                action: SIGNAL_EMIT "elm,action,dismiss" "";
            }
            program {
                name: "show";
                signal: "elm,action,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "hide";
                signal: "elm,action,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                        //	    transition: DECELERATE 0.5;
                target: "base";
            }
            program {
                name: "bottomshow";
                signal: "elm,action,slot,bottom,show";
                source: "elm";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
            program {
                name: "bottomhide";
                signal: "elm,action,slot,bottom,hide";
                source: "elm";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.5;
                target: "bottom";
                target: "elm.swallow.slot.bottom";
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/toolbar/base/default";
        parts {
            part {
                name: "base";
                type: IMAGE;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    rel1 {
                        offset: 2 2;
                    }
                    rel2 {
                        offset: -3 -3;
                    }
                    image {
                        normal: "images/progress_trough.png";
                        border: 2 2 2 2;
                    }
                    fill {
                        smooth: 1;
                    }
                }
            }
            part {
                name: "clipper";
                type: RECT;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    rel1 {
                        to: "base";
                        offset: 2 2;
                    }
                    rel2 {
                        to: "base";
                        offset: -3 -3;
                    }
                }
            }
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                clip_to: "clipper";
                description {
                    state: "default" 0.0;
                    rel1.to: "clipper";
                    rel2.to: "clipper";
                }
            }
            part {
                name: "left_arrow";
                type: IMAGE;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    min: 22 22;
                    max: 22 22;
                    fixed: 1 1;
                    aspect: 1.0 1.0;
                    aspect_preference: VERTICAL;
                    align: 0.0 0.5;
                    image {
                        normal: "images/arrow_left.png";
                    }
                }
                description {
                    state: "hidden" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 0;
                    visible: 0;
                }
            }
            part {
                name: "right_arrow";
                type: IMAGE;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    min: 22 22;
                    max: 22 22;
                    fixed: 1 1;
                    aspect: 1.0 1.0;
                    aspect_preference: VERTICAL;
                    align: 1.0 0.5;
                    image {
                        normal: "images/arrow_right.png";
                    }
                }
                description {
                    state: "hidden" 0.0;
                    inherit: "default" 0.0;
                    visible: 0;
                    color: 255 255 255 0;
                }
            }
            part {
                name: "event";
                type: RECT;
                mouse_events: 1;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
            }
        }
        programs {
            program {
                name: "sb_hbar_show";
                signal: "elm,action,show,hbar";
                source: "elm";
                action:  STATE_SET "default" 0.0;
                transition: LINEAR 0.5;
                target: "left_arrow";
                target: "right_arrow";
            }
            program {
                name: "sb_hbar_hide";
                signal: "elm,action,hide,hbar";
                source: "elm";
                action:  STATE_SET "hidden" 0.0;
                transition: LINEAR 0.5;
                target: "left_arrow";
                target: "right_arrow";
            }
        }
    }
    group {
        name: "elm/toolbar/item/default";
        parts {
            part {
                name: "label";
                type: TEXT;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    align: 0.5 0.5;
                    fixed: 0 1;
                    rel1.to: "elm.text";
                    rel2.to: "elm.text";
                    color: 60 60 60 255;
                    text {
                        font: "DejaVuSans";
                        text_source: "elm.text";
                        size: 11;
                        min: 1 1;
                        align: 0.5 0.5;
                    }
                }
                description {
                    state: "selected" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    color: 60 60 60 0;
                }
            }
            part {
                name: "bg";
                type: IMAGE;
                mouse_events: 0;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    align: 0.5 0.5;
                    visible: 1;
                    image.normal: "images/exebuf_im0.png";
                    image.border: 4 4 5 5;
                    rel1 {
                        offset: 1 1;
                    }
                    rel2 {
                        offset: -2 -2;
                    }
                    fill {
                        smooth: 1;
                    }
                }
                description {
                    state: "selected" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    visible: 1;
                }
            }
            part {
                name: "elm.swallow.icon";
                type: SWALLOW;
                description {
                    state: "default" 0.0;
                    align: 0.5 0.0;
                    color: 0 0 0 0;
                    fixed: 0 1;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 2 2;
                    }
                    rel2 {
                        relative: 1.0 0.0;
                        offset: -3 -1;
                    }
                }
            }
            part {
                name: "elm.text";
                type: TEXT;
                mouse_events: 0;
                scale: 1;
                description {
                    state: "default" 0.0;
                    align: 0.5 0.0;
                    fixed: 0 0;
                    visible: 1;
                    color: 255 255 255 0;
                    rel1 {
                        to_y: "elm.swallow.icon";
                        relative: 0.0 1.0;
                        offset: 5 5;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: -5 -5;
                    }
                    text {
                        font: "DejaVuSans";
                        size: 11;
                        min: 1 1;
                        align: 0.5 0.5;
                    }
                }
                description {
                    state: "selected" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "event";
                type: RECT;
                mouse_events: 1;
                ignore_flags: ON_HOLD;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
            }
            part {
                name: "disabled";
                type: RECT;
                mouse_events: 1;
                ignore_flags: ON_HOLD;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 90;
                    visible: 0;
                    rel2.offset: 0 -2;
                }
                description {
                    state: "disabled" 0.0;
                    inherit: "default" 0.0;
                    visible: 1;
                }
            }
        }
        programs {
            program {
                name: "selected";
                signal: "elm,state,selected";
                source: "elm";
                action: STATE_SET "selected" 0.0;
                target: "bg";
                target: "elm.text";
                target: "label";
                transition: LINEAR 0.15;
            }
            program {
                name: "unselected";
                signal: "elm,state,unselected";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "bg";
                target: "elm.text";
                target: "label";
                transition: LINEAR 0.15;
            }
            program {
                name: "go";
                signal: "mouse,up,1";
                source: "event";
                action: SIGNAL_EMIT "elm,action,click" "elm";
            }
            program { name: "disable";
                signal: "elm,state,disabled";
                source: "elm";
                action: STATE_SET "disabled" 0.0;
                target: "disabled";
                target: "bg";
                target: "label";
            }
            program { name: "enable";
                signal: "elm,state,enabled";
                source: "elm";
                action: STATE_SET "default" 0.0;
                target: "disabled";
                target: "bg";
                target: "label";
            }
        }
    }
    group {
        name: "elm/toolbar/separator/default";
        parts {
            part {
                name: "separator";
                description {
                    state: "default" 0.0;
                    min: 2 2;
                    max: 2 9999;
                    rel1.offset: 4 4;
                    rel2.offset: -5 -5;
                    image {
                        normal: "images/separator_v.png";
                    }
                    fill {
                        smooth: 0;
                    }
                }
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/win/inwin/default";
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "bg";
                type: RECT;
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    color: 0 0 0 100;
                }
            }
            part {
                name: "pop";
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.content";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.content";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 7 7 7 7;
                    }
                    image.middle: SOLID;
                }
            }
            part {
                name: "popover";
                mouse_events: 0;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "pop";
                    rel2.to: "pop";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.relative: 0.1 0.1;
                    rel2.relative: 0.9 0.9;
                }
            }
        }
        programs {
            program {
                name: "show";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
            program { name: "hide";
                signal: "hide";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
        }
    }
    group {
        name: "elm/win/inwin/minimal";
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "bg";
                type: RECT;
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    color: 0 0 0 100;
                }
            }
            part {
                name: "pop";
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.content";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.content";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 7 7 7 7;
                    }
                    image.middle: SOLID;
                }
            }
            part {
                name: "popover";
                mouse_events: 0;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "pop";
                    rel2.to: "pop";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    fixed: 1 1;
                    rel1.relative: 0.5 0.5;
                    rel2.relative: 0.5 0.5;
                }
            }
        }
        programs {
            program {
                name: "show";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
            program { name: "hide";
                signal: "hide";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
        }
    }
    group {
        name: "elm/win/inwin/minimal_vertical";
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 1;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 1.0;
                    color: 255 255 255 255;
                }
            }
            part {
                name: "bg";
                type: RECT;
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    color: 0 0 0 100;
                }
            }
            part {
                name: "pop";
                mouse_events: 1;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "elm.swallow.content";
                    rel1.offset: -5 -5;
                    rel2.to: "elm.swallow.content";
                    rel2.offset: 4 4;
                    image {
                        normal: "images/button_im1.png";
                        border: 7 7 7 7;
                    }
                    image.middle: SOLID;
                }
            }
            part {
                name: "popover";
                mouse_events: 0;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    rel1.to: "pop";
                    rel2.to: "pop";
                    rel2.relative: 1.0 0.5;
                    image {
                        normal: "images/button_im4.png";
                        border: 4 4 4 0;
                    }
                }
            }
            part {
                name: "elm.swallow.content";
                type: SWALLOW;
                clip_to: "base";
                description {
                    state: "default" 0.0;
                    fixed: 1 1;
                    rel1.relative: 0.1 0.5;
                    rel2.relative: 0.9 0.5;
                }
            }
        }
        programs {
            program {
                name: "show";
                signal: "show";
                action: STATE_SET "visible" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
            program { name: "hide";
                signal: "hide";
                action: STATE_SET "default" 0.0;
                transition: DECELERATE 0.2;
                target: "base";
            }
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
    group {
        name: "elm/notify/block_events/default";
        parts {
            part {
                name: "block_events";
                type: RECT;
                description {
                    state: "default" 0.0;
                    color: 0 0 0 120;
                    visible: 1;
                }
            }
        }
    }
    #define NOTIFY_PART() \
        part { \
                name: "pop"; \
                mouse_events: 1; \
                description { \
                    state: "default" 0.0; \
                    rel1.to: "elm.swallow.content"; \
                    rel1.offset: -5 -5; \
                    rel2.to: "elm.swallow.content"; \
                    rel2.offset: 4 4; \
                    color: 255 255 255 0; \
                    image { \
                        normal: "images/button_im1.png"; \
                        border: 7 7 7 7; \
                    } \
                    image.middle: SOLID; \
                } \
                description { \
                    state: "visible" 0.0; \
                    inherit: "default" 0.0; \
                    color: 255 255 255 255; \
                } \
            } \
            part { \
                name: "popover"; \
                mouse_events: 0; \
                description { \
                    state: "default" 0.0; \
                    rel1.to: "pop"; \
                    rel2.to: "pop"; \
                    rel2.relative: 1.0 0.5; \
                    color: 255 255 255 0; \
                    image { \
                        normal: "images/button_im4.png"; \
                        border: 4 4 4 0; \
                    } \
                } \
                description { \
                    state: "visible" 0.0; \
                    inherit: "default" 0.0; \
                    color: 255 255 255 255; \
                } \
            } \
            part { \
                name: "elm.swallow.content"; \
                type: SWALLOW; \
                clip_to: "base"; \
                description { \
                    state: "default" 0.0; \
                    rel1.to: "base"; \
                    rel2.to: "base"; \
                } \
            }

    #define NOTIFY_PGME() \
        program { \
                name: "show"; \
                signal: "elm,action,show"; \
                source: "elm"; \
                after: "show_2"; \
            } \
            program { \
                name: "show_2"; \
                signal: "show"; \
                action: STATE_SET "default" 0.0; \
                target: "base"; \
                target: "pop"; \
                target: "popover"; \
                after: "show_3"; \
            } \
            program { \
                name: "show_3"; \
                action: STATE_SET "visible" 0.0; \
                target: "base"; \
                target: "pop"; \
                target: "popover"; \
                transition: SINUSOIDAL 0.4; \
            } \
            program { \
                name: "hide"; \
                signal: "elm,action,hide"; \
                source: "elm"; \
                action: STATE_SET "default" 0.0; \
                target: "base"; \
                target: "pop"; \
                target: "popover"; \
                transition: SINUSOIDAL 0.3; \
            }

    group {
        name: "elm/notify/top/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 -1.0;
                    rel2.relative: 1.0 0.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/center/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/bottom/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 1.0;
                    rel2.relative: 1.0 2.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/left/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: -1.0 0.0;
                    rel2.relative: 0.0 1.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/right/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 1.0 0.0;
                    rel2.relative: 2.0 1.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/top_left/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 -1.0;
                    rel2.relative: 1.0 0.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/top_right/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 -1.0;
                    rel2.relative: 1.0 0.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/bottom_left/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 1.0;
                    rel2.relative: 1.0 2.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    group {
        name: "elm/notify/bottom_right/default";
              //this group is a design similar to the inwin group
        parts {
            part {
                name: "base";
                type: RECT;
                mouse_events: 0;
                repeat_events: 1;
                description {
                    state: "default" 0.0;
                    color: 255 255 255 0;
                    rel1.offset: 10 10;
                    rel2.offset: -10 -10;
                    rel1.relative: 0.0 1.0;
                    rel2.relative: 1.0 2.0;
                }
                description {
                    state: "visible" 0.0;
                    inherit: "default" 0.0;
                    color: 255 255 255 255;
                    rel1.relative: 0.0 0.0;
                    rel2.relative: 1.0 1.0;
                }
            }
            NOTIFY_PART()
        }
        programs {
            NOTIFY_PGME()
        }
    }
    ///////////////////////////////////////////////////////////////////////////////
   group {
      name: "elm/check/base/default";
      parts {
         part { name: "bg_check";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  to: "bg";
               }
               rel2 {
                  to: "bg";
               }
               color: 255 255 255 0;
               image.normal: "images/check_bt0.png";
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 0;
	    }

	 }
         part { name: "bg";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel2.relative: 0.0 1.0;
	       align: 0.0 0.5;
	       min: 20 18;
	       max: 20 18;
	       aspect: 1.0 1.0;
               fixed: 1 1;
	       aspect_preference: BOTH;
               image {
                  normal: "images/check_bt1.png";
                  border: 8 7 8 7;
               }
               fill.smooth : 0;
	    }
	 }
         part { name: "check";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  to: "bg";
               }
               rel2 {
                  to: "bg";
               }
               color: 255 255 255 0;
               image.normal: "images/check_bt2.png";
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	    }
	 }
	 part { name: "elm.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 0;
	       visible: 0;
	       align: 0.0 0.5;
          rel1.to_x: "bg";
	       rel1.relative: 1.0 0.0;
	       rel1.offset: 1 1;
          rel2.to_x: "bg";
	       rel2.offset: 1 -2;
	       rel2.relative: 1.0 1.0;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
          fixed: 1 0;
	       visible: 1;
	       aspect: 1.0 1.0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
          fixed: 1 0;
	       visible: 1;
	       aspect: 1.0 1.0;
	    }
	 }
         part { name: "elm.text";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to_x: "elm.swallow.content";
	       rel1.relative: 1.0 0.0;
               rel1.offset: 1 1;
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -2 -2;
	       color: 0 0 0 255;
	       text {
		  font: "DejaVuSans";
		  size: 10;
		  min: 0 1;
		  align: 0.0 0.5;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       text.min: 1 1;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       visible: 1;
	       text.min: 1 1;
	    }
	 }
         part { name: "events";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "events";
            action: SIGNAL_EMIT "elm,action,check,toggle" "";
	 }
	 program { name: "check_on";
	    signal: "elm,state,check,on";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "check";
            target: "bg_check";
            transition: SINUSOIDAL 0.2;
	 }
	 program { name: "check_off";
	    signal: "elm,state,check,off";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "check";
            target: "bg_check";
            transition: SINUSOIDAL 0.2;
	 }
	 program { name: "text_show";
	    signal: "elm,state,text,visible";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "elm.text";
	 }
	 program { name: "text_hide";
	    signal: "elm,state,text,hidden";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
	 program { name: "icon_show";
	    signal: "elm,state,icon,visible";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "elm.swallow.content";
	 }
	 program { name: "icon_hide";
	    signal: "elm,state,icon,hidden";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "elm.swallow.content";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "disabler";
            after: "disable_text";
	 }
         program { name: "disable_text";
	    script {
	       new st[31];
	       new Float:vl;
	       get_state(PART:"elm.text", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.text", "disabled_visible", 0.0);
	       else
		 set_state(PART:"elm.text", "disabled", 0.0);

               get_state(PART:"elm.swallow.content", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
	       else
		 set_state(PART:"elm.swallow.content", "disabled", 0.0);

               get_state(PART:"check", st, 30, vl);
	       if (!strcmp(st, "visible"))
               {
		 set_state(PART:"check", "disabled_visible", 0.0);
                 set_state(PART:"bg_check", "disabled_visible", 0.0);
               }
	       else
               {
		 set_state(PART:"check", "disabled", 0.0);
                 set_state(PART:"bg_check", "disabled", 0.0);
               }
	    }
         }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "disabler";
            after: "enable_text";
	 }
         program { name: "enable_text";
	    script {
	       new st[31];
	       new Float:vl;
	       get_state(PART:"elm.text", st, 30, vl);
	       if (!strcmp(st, "disabled_visible"))
		 set_state(PART:"elm.text", "visible", 0.0);
	       else
		 set_state(PART:"elm.text", "default", 0.0);

               get_state(PART:"elm.swallow.content", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.swallow.content", "visible", 0.0);
	       else
		 set_state(PART:"elm.swallow.content", "default", 0.0);

               get_state(PART:"check", st, 30, vl);
	       if (!strcmp(st, "visible"))
               {
		 set_state(PART:"check", "visible", 0.0);
                 set_state(PART:"bg_check", "visible", 0.0);
               }
	       else
               {
		 set_state(PART:"check", "default", 0.0);
                 set_state(PART:"bg_check", "default", 0.0);
               }
	    }
         }
      }
   }
   ///////////////////////////////////////////////////////////////////////////////
   group {
      name: "elm/radio/base/default";
      parts {
         part { name: "bg_radio";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 255 255 255 0;
               image.normal: "images/radio_bt0.png";
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
	 }
         part { name: "bg";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel2.relative: 0.0 1.0;
	       align: 0.0 0.5;
	       min: 20 18;
	       max: 20 18;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
               image.normal: "images/radio_bt1.png";
               image.border: 9 8 9 8;
	    }
	 }
         part { name: "radio";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               color: 255 255 255 0;
               image.normal: "images/radio_bt2.png";
	    }
	    description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
	 }
	 part { name: "elm.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
               fixed: 1 0;
	       visible: 0;
	       align: 0.0 0.5;
               color: 0 0 0 0;
               rel1.to_x: "bg";
               rel1.relative: 1.0 0.0;
	       rel1.offset: 1 1;
               rel2.to_x: "bg";
	       rel2.relative: 1.0 1.0;
	       rel2.offset: 2 -2;
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
               color: 255 255 255 255;
	       aspect: 1.0 1.0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 128 128 128 128;
	       visible: 1;
	       aspect: 1.0 1.0;
	    }
	 }
         part { name: "elm.text";
	    type: TEXT;
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       visible: 0;
	       rel1.to_x: "elm.swallow.content";
	       rel1.relative: 1.0 0.0;
               rel1.offset: 1 1;
	       rel2.relative: 1.0 1.0;
	       rel2.offset: -2 -2;
	       color: 0 0 0 255;
	       text {
		  font: "DejaVuSans";
		  size: 10;
		  min: 0 0;
		  align: 0.0 0.5;
	       }
	    }
	    description { state: "visible" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	       text.min: 1 1;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	    }
	    description { state: "disabled_visible" 0.0;
	       inherit: "default" 0.0;
	       color: 0 0 0 128;
	       color3: 0 0 0 0;
	       visible: 1;
	       text.min: 1 1;
	    }
	 }
         part { name: "events";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	    }
	 }
 	 part { name: "disabler";
	    type: RECT;
	    description { state: "default" 0.0;
	       color: 0 0 0 0;
	       visible: 0;
	    }
	    description { state: "disabled" 0.0;
	       inherit: "default" 0.0;
	       visible: 1;
	    }
	 }
      }
      programs {
	 program { name: "click";
	    signal: "mouse,up,1";
	    source: "events";
            action: SIGNAL_EMIT "elm,action,radio,toggle" "";
	 }
	 program { name: "radio_on";
	    signal: "elm,state,radio,on";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "radio";
            target: "bg_radio";
            transition: SINUSOIDAL 0.2;
	 }
	 program { name: "radio_off";
	    signal: "elm,state,radio,off";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "radio";
            target: "bg_radio";
            transition: SINUSOIDAL 0.4;
	 }
	 program { name: "text_show";
	    signal: "elm,state,text,visible";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "elm.text";
	 }
	 program { name: "text_hide";
	    signal: "elm,state,text,hidden";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
	 program { name: "icon_show";
	    signal: "elm,state,icon,visible";
	    source: "elm";
	    action:  STATE_SET "visible" 0.0;
	    target: "elm.swallow.content";
	 }
	 program { name: "icon_hide";
	    signal: "elm,state,icon,hidden";
	    source: "elm";
	    action:  STATE_SET "default" 0.0;
	    target: "elm.swallow.content";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "disabler";
            after: "disable_text";
	 }
         program { name: "disable_text";
	    script {
	       new st[31];
	       new Float:vl;
	       get_state(PART:"elm.text", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.text", "disabled_visible", 0.0);
	       else
		 set_state(PART:"elm.text", "disabled", 0.0);

               get_state(PART:"elm.swallow.content", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
	       else
		 set_state(PART:"elm.swallow.content", "disabled", 0.0);
	    }
         }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "disabler";
            after: "enable_text";
	 }
         program { name: "enable_text";
	    script {
	       new st[31];
	       new Float:vl;
	       get_state(PART:"elm.text", st, 30, vl);
	       if (!strcmp(st, "disabled_visible"))
		 set_state(PART:"elm.text", "visible", 0.0);
	       else
		 set_state(PART:"elm.text", "default", 0.0);

               get_state(PART:"elm.swallow.content", st, 30, vl);
	       if (!strcmp(st, "visible"))
		 set_state(PART:"elm.swallow.content", "visible", 0.0);
	       else
		 set_state(PART:"elm.swallow.content", "default", 0.0);
	    }
         }
      }
   }

   group { name: "elm/separator/horizontal/default";
       parts {
           part { name: "separator"; // separator group
               description { state: "default" 0.0;
                   min: 2 2;
                   rel1.offset: 4 4;
                   rel2.offset: -5 -5;
                   image {
                       normal: "images/separator_h.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
       }
   }

   ///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/separator/vertical/default";
       parts {
           part { name: "separator"; // separator group
               description { state: "default" 0.0;
                   min: 2 2;
                   rel1.offset: 4 4;
                   rel2.offset: -5 -5;
                   image {
                       normal: "images/separator_v.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
       }
   }


    ////////////////////////////////////////////
    group { name: "elm/genlist/item/default/default";
        alias: "elm/genlist/item_odd/default/default";
        alias: "elm/genlist/item_compress/default/default";
        alias: "elm/genlist/item_compress_odd/default/default";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";
      parts {
         part { name: "bg_item";
                mouse_events: 0;
               description { state: "default" 0.0;
                   fixed: 1 1;
                   color: 255 255 255 200;
                   image {
                       normal: "images/win_background.png";
                   }
                   fill {
                       smooth: 1;
                   }
               }
           }
         part { name: "separator"; // separator group
                mouse_events: 0;
               description { state: "default" 0.0;
                   min: 2 2;
                   max: 99999 2;
                   fixed: 1 1;
                   rel1.relative: 0.0 1.0;
                   image {
                       normal: "images/separator_h.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
           part { name: "mouse_over";
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 5 0;
               }
               image {
                  normal: "images/menu_im2.png";
                  border: 5 5 5 5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 100;
            }
         }
         part { name: "bg";
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 5 0;
               }
               image {
                  normal: "images/menu_im2.png";
                  border: 5 5 5 5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "elm.swallow.pad";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0  0.0;
                  offset:   4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset:   4   -5;
               }
            }
         }
         part { name: "elm.swallow.icon";
            clip_to: "disclip";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to_x: "elm.swallow.pad";
                  relative: 1.0  0.0;
                  offset:   -1    4;
               }
               rel2 {
                  to_x: "elm.swallow.pad";
                  relative: 1.0  1.0;
                  offset:   -1   -5;
               }
            }
         }
         part { name: "elm.swallow.end";
            clip_to: "disclip";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 1.0  0.0;
                  offset:   -5    4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset:   -5   -5;
               }
            }
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type:           TEXT;
            effect:         SOFT_SHADOW;
            mouse_events:   0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  to_x:     "elm.swallow.icon";
                  relative: 1.0  0.0;
                  offset:   0 4;
               }
               rel2 {
                  to_x:     "elm.swallow.end";
                  relative: 0.0  1.0;
                  offset:   -1 -5;
               }
               color: 0 0 0 255;
               color3: 0 0 0 0;
               text {
                  font: "DejaVuSans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 224 224 224 255;
               color: 255 255 255 255;
            }
         }
         part {
            name:           "event";
            type:           RECT;
            repeat_events: 1;
            description {
               min: 0 40;
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disclip";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 64;
            }
         }
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "bg";
            target:  "elm.text";
            transition: SINUSOIDAL 0.2;
         }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "bg";
            target:  "elm.text";
            transition: LINEAR 0.1;
            transition: DECELERATE 0.6;
         }
         program {
            name:    "go_disabled";
            signal:  "elm,state,disabled";
            source:  "elm";
            action:  STATE_SET "disabled" 0.0;
            target:  "disclip";
         }
         program {
            name:    "go_enabled";
            signal:  "elm,state,enabled";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "disclip";
         }
         program {
            name:    "mouse_in";
            signal:  "mouse,in";
            source:  "event";
            action:  STATE_SET "selected" 0.0;
            target:  "mouse_over";
         }
         program {
            name:    "mouse_out";
            signal:  "mouse,out";
            source:  "event";
            action:  STATE_SET "default" 0.0;
            target:  "mouse_over";
         }
      }
   }

    group { name: "elm/genlist/tree/default/default";
        alias: "elm/genlist/tree_odd/default/default";
        alias: "elm/genlist/tree_compress/default/default";
        alias: "elm/genlist/tree_compress_odd/default/default";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      data.item: "labels" "elm.text";
      data.item: "icons" "elm.swallow.icon elm.swallow.end";
      data.item: "treesize" "20";
      parts {
         part { name: "bg_item";
                mouse_events: 0;
               description { state: "default" 0.0;
                   fixed: 1 1;
                   color: 255 255 255 200;
                   image {
                       normal: "images/win_background.png";
                   }
                   fill {
                       smooth: 1;
                   }
               }
           }
         part { name: "separator"; // separator group
                mouse_events: 0;
               description { state: "default" 0.0;
                   min: 2 2;
                   max: 99999 2;
                   fixed: 1 1;
                   rel1.relative: 0.0 1.0;
                   image {
                       normal: "images/separator_h.png";
                   }
                   fill {
                       smooth: 0;
                   }
               }
           }
           part { name: "mouse_over";
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 5 0;
               }
               image {
                  normal: "images/menu_im2.png";
                  border: 5 5 5 5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 100;
            }
         }
         part { name: "bg";
            clip_to: "disclip";
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 5 0;
               }
               image {
                  normal: "images/menu_im2.png";
                  border: 5 5 5 5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "elm.swallow.pad";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0  0.0;
                  offset:   4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset:   4   -5;
               }
            }
         }
         part { name: "arrow";
            clip_to: "disclip";
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "elm.swallow.pad";
                  relative: 1.0  0.0;
                  offset:   -1    4;
               }
               rel2 {
                  to_x: "elm.swallow.pad";
                  relative: 1.0  1.0;
                  offset:   -1   -5;
               }
               image.normal: "images/arrow_down.png";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               image.normal: "images/arrow_right.png";
            }
         }
         part { name: "elm.swallow.icon";
            clip_to: "disclip";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to_x: "arrow";
                  relative: 1.0  0.0;
                  offset:   -1    4;
               }
               rel2 {
                  to_x: "arrow";
                  relative: 1.0  1.0;
                  offset:   -1   -5;
               }
            }
         }
         part { name: "elm.swallow.end";
            clip_to: "disclip";
            type: SWALLOW;
            description { state: "default" 0.0;
               fixed: 1 0;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 1.0  0.0;
                  offset:   -5    4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset:   -5   -5;
               }
            }
         }
         part { name: "elm.text";
            clip_to: "disclip";
            type:           TEXT;
            effect:         SOFT_SHADOW;
            mouse_events:   0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  to_x:     "elm.swallow.icon";
                  relative: 1.0  0.0;
                  offset:   0 4;
               }
               rel2 {
                  to_x:     "elm.swallow.end";
                  relative: 0.0  1.0;
                  offset:   -1 -5;
               }
               color: 0 0 0 255;
               color3: 0 0 0 0;
               text {
                  font: "DejaVuSans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 224 224 224 255;
               color: 255 255 255 255;
            }
         }
         part {
            name:           "event";
            type:           RECT;
            repeat_events: 1;
            description {
               min: 0 40;
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disclip";
            type: RECT;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 64;
            }
         }
      }
      programs {
         // signal: elm,state,%s,active
         //   a "check" item named %s went active
         // signal: elm,state,%s,passive
         //   a "check" item named %s went passive
         // default is passive
         program {
            name:    "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            target:  "bg";
            target:  "elm.text";
            transition: SINUSOIDAL 0.2;
         }
         program {
            name:    "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "bg";
            target:  "elm.text";
            transition: LINEAR 0.1;
            transition: DECELERATE 0.6;
         }
         program {
            name:    "go_disabled";
            signal:  "elm,state,disabled";
            source:  "elm";
            action:  STATE_SET "disabled" 0.0;
            target:  "disclip";
         }
         program {
            name:    "go_enabled";
            signal:  "elm,state,enabled";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "disclip";
         }
         program {
            name:    "mouse_in";
            signal:  "mouse,in";
            source:  "event";
            action:  STATE_SET "selected" 0.0;
            target:  "mouse_over";
         }
         program {
            name:    "mouse_out";
            signal:  "mouse,out";
            source:  "event";
            action:  STATE_SET "default" 0.0;
            target:  "mouse_over";
         }
         program {
            name:    "expand";
            signal:  "mouse,up,1";
            source:  "arrow";
            action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
         }
         program {
            name:    "go_expanded";
            signal:  "elm,state,expanded";
            source:  "elm";
            action:  STATE_SET "active" 0.0;
            target:  "arrow";
         }
         program {
            name:    "go_contracted";
            signal:  "elm,state,contracted";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            target:  "arrow";
         }
      }
   }

   

}

