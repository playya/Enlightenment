collections {
   group { name: "elm/spinner/base/default";
      alias: "elm/spinner/base/vertical";
      images {
         image: "toggle_bg.png" COMP;
         image: "icon_arrow_left.png" COMP;
         image: "spinner_left_selected.png" COMP;
         image: "icon_arrow_right.png" COMP;
         image: "spinner_right_selected.png" COMP;
      }
      parts {
         part { name: "bg";
            description { state: "default" 0.0;
               max: 99999 30;
               min: 0 30;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
               image {
                  normal: "toggle_bg.png";
                  border: 3 3 3 3;
               }
            }
         }
         part { name: "left_bt";
            mouse_events:  1;
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "bg";
                  offset: 2 2;
               }
               rel2 { to: "bg";
                  offset: -3 -3;
               }
               align: 0.0 0.5;
               min: 24 24;
               max: 24 24;
               color: 0 0 0 0;
            }
         }
         part { name: "right_bt";
            mouse_events:  1;
            type: RECT;
            description { state: "default" 0.0;
               rel1 { to: "bg";
                  offset: -27 3;
               }
               rel2 { to: "bg";
                  offset: -3 -3;
               }
               align: 1.0 0.5;
               min: 24 24;
               max: 24 24;
               color: 0 0 0 0;
            }
         }
         part { name: "left_bt_icon";
            mouse_events: 0;
            clip_to: "disable_clipper";
            description { state: "default" 0.0;
               rel1.to: "left_bt";
               rel2.to: "left_bt";
               align: 0.5 0.5;
               min: 16 16;
               max: 16 16;
               image.normal: "icon_arrow_left.png";
            }
            description { state: "selected" 0.0;
               image.normal: "spinner_left_selected.png";
               image.border: 18 6 6 6;
               rel1.to_x: "left_bt";
               rel1.to_y: "bg";
               rel2.to_x: "right_bt";
               rel2.to_y: "bg";
               min: 0 22;
               max: 99999 22;
            }
            program { name: "left_down";
               signal: "mouse,down,1";
               source: "left_bt";
               action: STATE_SET "selected" 0.0;
               target: "left_bt_icon";
            }
            program { name: "left_up";
               signal: "mouse,up,1";
               source: "left_bt";
               action: STATE_SET "default" 0.0;
               target: "left_bt_icon";
            }
         }
         part { name: "right_bt_icon";
            mouse_events: 0;
            clip_to: "disable_clipper";
            description { state: "default" 0.0;
               rel1.to: "right_bt";
               rel2.to: "right_bt";
               align: 0.5 0.5;
               min: 16 16;
               max: 16 16;
               image.normal: "icon_arrow_right.png";
            }
            description { state: "selected" 0.0;
               image.normal: "spinner_right_selected.png";
               image.border: 6 18 6 6;
               rel1.to_x: "left_bt";
               rel1.to_y: "bg";
               rel1.offset: 1 0;
               rel2.to_x: "right_bt";
               rel2.to_y: "bg";
               rel1.offset: -2 -1;
               min: 0 22;
               max: 99999 22;
            }
            program { name: "right_down";
               signal: "mouse,down,1";
               source: "right_bt";
               action: STATE_SET "selected" 0.0;
               target: "right_bt_icon";
            }
            program { name: "right_up";
               signal: "mouse,up,1";
               source: "right_bt";
               action: STATE_SET "default" 0.0;
               target: "right_bt_icon";
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               align: 0.0 0.5;
               rel1 { relative: 1.0 0.0;
                  offset: 3 2;
                  to_x: "left_bt";
                  to_y: "bg";
               }
               rel2 { relative: 0.0 1.0;
                  offset: -3 -2;
                  to_x: "right_bt";
                  to_y: "bg";
               }
               text {
                  font: "Sans,Edje-Vera";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
               }
               color_class: "spinner_text";
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled_active" 0.0;
               inherit: "default" 0.0;
               color_class: "spinner_text_disabled";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "spinner_text_disabled";
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               fixed: 1 1;
               color: 0 0 0 0;
            }
         }
         part { name: "button_events";
            type: RECT;
            dragable {
               events: "elm.dragable.slider";
            }
            mouse_events: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.entry";
            type: SWALLOW;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 { relative: 1.0 0.5;
                  offset: 3 2;
                  to_x: "left_bt";
                  to_y: "bg";
               }
               rel2 { relative: 0.0 0.5;
                  offset: -3 -2;
                  to_x: "right_bt";
                  to_y: "bg";
               }
               fixed: 1 1;
               color: 0 0 0 0;
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description { state: "disabled_active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "disable_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "spinner_disable_clipper";
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "dec";
            signal: "mouse,down,1";
            source: "left_bt";
            action: SIGNAL_EMIT "elm,action,decrement,start" "";
         }
         program { name: "dec2";
            signal: "mouse,up,1";
            source: "left_bt";
            action: SIGNAL_EMIT "elm,action,decrement,stop" "";
         }
         program { name: "inc";
            signal: "mouse,down,1";
            source: "right_bt";
            action: SIGNAL_EMIT "elm,action,increment,start" "";
         }
         program { name: "inc2";
            signal: "mouse,up,1";
            source: "right_bt";
            action: SIGNAL_EMIT "elm,action,increment,stop" "";
         }
         program {
            name:   "left_bt_click";
            signal: "mouse,clicked,1";
            source: "left_bt";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program {
            name:   "right_bt_click";
            signal: "mouse,clicked,1";
            source: "right_bt";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "left_bt";
            target: "right_bt";
            target: "disabler";
            target: "disable_clipper";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "active"))
               set_state(PART:"elm.text", "disabled_active", 0.0);
               else
               set_state(PART:"elm.text", "disabled", 0.0);

               get_state(PART:"elm.swallow.entry", st, 30, vl);
               if (!strcmp(st, "active"))
               set_state(PART:"elm.swallow.entry", "disabled_active", 0.0);
               else
               set_state(PART:"elm.swallow.entry", "disabled", 0.0);
            }
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "left_bt";
            target: "right_bt";
            target: "disabler";
            target: "disable_clipper";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_active"))
               set_state(PART:"elm.text", "active", 0.0);
               else
               set_state(PART:"elm.text", "default", 0.0);

               get_state(PART:"elm.swallow.entry", st, 30, vl);
               if (!strcmp(st, "disabled_active"))
               set_state(PART:"elm.swallow.entry", "active", 0.0);
               else
               set_state(PART:"elm.swallow.entry", "default", 0.0);
            }
         }
         program { name: "active";
            signal: "elm,state,active";
            source: "elm";
            action: STATE_SET "active" 0.0;
            target: "elm.text";
            target: "elm.swallow.entry";
         }
         program { name: "inactive";
            signal: "elm,state,inactive";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
            target: "elm.swallow.entry";
         }
         program { name: "toggle_text";
            signal: "mouse,up,1";
            source: "button_events";
            action: SIGNAL_EMIT "elm,action,entry,toggle" "";
         }
      }
   }
} 
