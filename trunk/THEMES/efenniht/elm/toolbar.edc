
#define TOOLBAR_VSIZE 90

collections {
   group { name: "elm/toolbar/base/default";
      data.item: "icon_size" "90";
      images {
         image: "icon_arrow_left.png" COMP;
         image: "icon_arrow_right.png" COMP;
         image: "bg_gradient_simple.png" COMP;
         image: "toolbar_separator.png" COMP;
         image: "toolbar_separator_bottom.png" COMP;
      }
      parts {
         part { name: "bg";
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "bg_gradient_simple.png";
               rel1.to_y: "clipper";
               rel2.to_y: "clipper";
            }
         }
         part { name: "sep_top";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2 {
                  relative: 1.0 0.0;
                  offset: 0 4;
               }
               image.normal: "toolbar_separator.png";
            }
         }
         part { name: "sep_bottom";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -4;
               }
               image.normal: "toolbar_separator_bottom.png";
            }
         }
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 15 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -16 -1;
               }
            }
         }
         part { name: "elm.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "clipper";
               rel2.to: "clipper";
            }
         }
         BG_BORDER_BOTTOM("event")
         part { name: "sep_left";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1 {
                  to_x: "left_arrow";
                  to_y: "clipper";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  to_x: "left_arrow";
                  to_y: "clipper";
                  relative: 1.0 1.0;
                  offset: 0 -1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
            }
         }
         part { name: "left_arrow";
            mouse_events: 1;
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               align: 0.0 0.5;
               min: 16 0;
               max: 16 9999;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               rel1.offset: -16 0;
               rel2.offset: -16 -1;
            }
            program { name: "sb_left";
               signal: "mouse,down,1";
               source: "left_arrow";
               action: SIGNAL_EMIT "e,action,prev" "e";
            }
         }
         BUTTON_ICON("left","arrow_left","left_arrow")
         part { name: "sep_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1 {
                  to_x: "right_arrow";
                  to_y: "clipper";
                  relative: 0.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  to_x: "right_arrow";
                  to_y: "clipper";
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
            }
         }
         part { name: "right_arrow";
            mouse_events: 1;
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               align: 1.0 0.5;
               min: 16 0;
               max: 16 9999;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               rel1.offset: 15 0;
               rel2.offset: 15 -1;
            }
            program { name: "sb_right";
               signal: "mouse,down,1";
               source: "right_arrow";
               action: SIGNAL_EMIT "e,action,next" "e";
            }
         }
         BUTTON_ICON("right","arrow_right","right_arrow")
         part { name: "event";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "sb_hbar_show";
            signal: "elm,action,show,hbar";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
            target: "right_arrow";
            target: "sep_left";
            target: "sep_right";
         }
         program { name: "sb_hbar_hide";
            signal: "elm,action,hide,hbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
            target: "right_arrow";
            target: "sep_left";
            target: "sep_right";
         }
      }
   }

   group { name: "elm/toolbar/item/default";
      data.item: "transition_animation_on" "1";
      parts {
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 87 90;
               rel1.offset: 1 0;
               rel2.offset: -2 -1;
               color: 0 0 0 0;
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 0 0 0 78;
            }
         }
         part { name: "sep_top";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2 {
                  relative: 1.0 0.0;
                  offset: 0 4;
               }
               image.normal: "toolbar_separator.png";
            }
         }
         part { name: "sep_bottom";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -4;
               }
               image.normal: "toolbar_separator_bottom.png";
            }
         }
         part { name: "sep_left";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 -1;
            }
         }
         part { name: "icon_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 32;
            }
            
         }
         part { name: "elm.swallow.icon.area";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "sep_top";
                  relative: 0.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
            }
            description { state: "move,left" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "sep_top";
                  relative: -1.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 0.0 0.0;
                  offset: -1 0;
               }
            }
            description { state: "move,right" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "sep_top";
                  relative: 1.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 2.0 0.0;
                  offset: -1 0;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            clip_to: "icon_clipper";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to: "elm.swallow.icon.area";
               rel2.to: "elm.swallow.icon.area";
            }
         }
         part { name: "elm.swallow.icon_new.area";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "sep_top";
                  relative: 1.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 2.0 0.0;
                  offset: -1 0;
               }
            }
            description { state: "default,move,right" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "sep_top";
                  relative: -1.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 0.0 0.0;
                  offset: -1 0;
               }
            }
            description { state: "move,left" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "sep_top";
                  relative: 0.0 1.0;
                  offset: 1 0;
               }
               rel2 {
                  to_y: "sep_bottom";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
            }
            description { state: "move,right" 0.0;
               inherit: "move,left" 0.0;
            }
         }
         part { name: "elm.swallow.icon_new";
            type: SWALLOW;
            clip_to: "icon_clipper";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to:"elm.swallow.icon_new.area";
               rel2.to:"elm.swallow.icon_new.area";
            }
         }
         part { name: "elm.text.clipper";
            type: RECT;
            description {
               color: 255 255 255 255;
            }
         }
         part { name: "elm.text.area";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
            }
            description {
               state: "move,left" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: -0.5 0.0;
                  offset: 1 0;
               }
               rel2 {
                  relative: -0.5 1.0;
                  offset: -1 0;
               }
            }
            description {
               state: "move,right" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1.5 0.0;
                  offset: 1 0;
               }
               rel2 {
                  relative: 1.5 1.0;
                  offset: -1 0;
               }
            }
         }
         part { name: "elm.text";
            type: TEXT;
            effect: SOFT_OUTLINE;
            mouse_events:  0;
            scale: 1;
            clip_to: "elm.text.clipper";
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "elm.text.area";
               rel2.to: "elm.text.area";
               color_class: "toolbar_text";
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
               }
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "toolbar_text_selected";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "toolbar_text_disabled";
            }
         }
         part { name: "elm.text_new.area";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 1.5 0.0;
                  offset: 1 0;
               }
               rel2 {
                  relative: 1.5 1.0;
                  offset: 1 0;
               }
            }
            description {
               state: "default,move,right" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: -0.5 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: -0.5 1.0;
                  offset: -1 0;
               }
            }
            description {
               state: "move,left" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
            }
            description {
               state: "move,right" 0.0;
               inherit: "move,left" 0.0;
            }
         }
         part { name: "elm.text_new";
            type: TEXT;
            effect: SOFT_OUTLINE;
            mouse_events:  0;
            scale: 1;
            clip_to: "elm.text.clipper";
            description { state: "default" 0.0;
               fixed: 1 1;
               color_class: "toolbar_text";
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
               }
               rel1.to: "elm.text_new.area";
               rel2.to: "elm.text_new.area";
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "toolbar_text_selected";
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "toolbar_text_disabled";
            }
         }
         part { name: "sep_right";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 0;
            }
         }
         part { name: "event";
            type: RECT;
            mouse_events: 1;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program { name: "go_active";
            signal:  "elm,state,selected";
            source:  "elm";
            action:  STATE_SET "selected" 0.0;
            transition: LINEAR 0.2;
            target:  "bg";
            target:  "elm.text";
            target:  "elm.text_new";
         }
         program { name: "go_passive";
            signal:  "elm,state,unselected";
            source:  "elm";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target:  "bg";
            target:  "elm.text";
            target:  "elm.text_new";
         }
         program { name: "go";
            signal:  "mouse,up,1";
            source:  "event";
            action:  SIGNAL_EMIT "elm,action,click" "elm";
         }
         program { name: "mouse,in";
            signal:  "mouse,in";
            source:  "event";
            action:  SIGNAL_EMIT "elm,mouse,in" "elm";
         }
         program { name: "mouse,out";
            signal:  "mouse,out";
            source:  "event";
            action:  SIGNAL_EMIT "elm,mouse,out" "elm";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "icon_clipper";
            target: "elm.text";
            target: "elm.text_new";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "icon_clipper";
            target: "elm.text";
            target: "elm.text_new";
         }
         program { name: "label_set,animation,forward";
            signal: "elm,state,label_set,forward";
            source: "elm";
            after: "label_set,animation,left";
            after: "event,disable";
         }
         program { name: "label_set,animation,backward";
            signal: "elm,state,label_set,backward";
            source: "elm";
            action: STATE_SET "default,move,right" 0.0;
            target: "elm.text_new.area";
            after: "label_set,animation,right";
            after: "event,disable";
         }
         program { name: "label_set,animation";
            signal: "elm,state,label_set";
            source: "elm";
            after: "label_set,animation,left";
            after: "event,disable";
         }
         program { name: "label_set,animation,left";
            action: STATE_SET "move,left" 0.0;
            target: "elm.text.area";
            target: "elm.text_new.area";
            transition: ACCELERATE 0.2;
            after: "label_set,animation,done";
         }
         program { name: "label_set,animation,right";
            action: STATE_SET "move,right" 0.0;
            target: "elm.text.area";
            target: "elm.text_new.area";
            transition: ACCELERATE 0.2;
            after: "label_set,animation,done";
         }
         program { name: "label_set,animation,done";
            action: SIGNAL_EMIT "elm,state,label_set,done" "elm";
            after: "label_set,animation,done2";
         }
         program { name: "label_set,animation,done2";
            script {
               set_text(PART:"elm.text_new", "");
            }
         }
         program { name: "label,reset";
            signal: "elm,state,label,reset";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text.area";
            target: "elm.text_new.area";
            after: "event,enable";
         }
         program { name: "event,enable";
            action: STATE_SET "default" 0.0;
            target: "event";
         }
         program { name: "event,disable";
            action: STATE_SET "disabled" 0.0;
            target: "event";
         }
         program { name: "icon_set,animation,forward";
            signal: "elm,state,icon_set,forward";
            source: "elm";
            after: "icon_set,animation,left";
         }
         program { name: "icon_set,animation,backward";
            signal: "elm,state,icon_set,backward";
            source: "elm";
            action: STATE_SET "default,move,right" 0.0;
            target: "elm.swallow.icon_new.area";
            after: "icon_set,animation,right";
         }
         program { name: "icon_set,animation,left";
            signal: "elm,state,icon_set";
            source: "elm";
            action: STATE_SET "move,left" 0.0;
            target: "elm.swallow.icon.area";
            target: "elm.swallow.icon_new.area";
            transition: ACCELERATE 0.2;
            after: "icon_set,animation,done";
         }
         program { name: "icon_set,animation,right";
            signal: "elm,state,icon_set";
            source: "elm";
            action: STATE_SET "move,right" 0.0;
            target: "elm.swallow.icon.area";
            target: "elm.swallow.icon_new.area";
            transition: ACCELERATE 0.2;
            after: "icon_set,animation,done";
         }
         program { name: "icon_set,animation,done";
            action: SIGNAL_EMIT "elm,state,icon_set,done" "elm";
         }
         program { name: "icon,reset";
            signal: "elm,state,icon,reset";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.icon.area";
            target: "elm.swallow.icon_new.area";
            after: "event,enable";
         }
      }
   }
}

