collections {
   /////////////////////////////////////////////////////////////////////////////
   /*** MOD: CONNMAN ***/

   // ICONS: receive the following signals, all with source being "e"
   //    e,favorite,{yes,no}
   //    e,auto_connect,{yes,no}
   //    e,pass_required,{yes,no}
   //    e,state,{idle,association,configuration,ready,disconnect,failure}
   //    e,mode,{managed,adhoc,gprs,edge,umts}
   //    e,security,{none,wep,psk,ieee8021x,wpa,rsn}
   // and also the following message:
   //    id=1, type=MSG_INT, description=strength (0-100)

   group { name: "e/modules/connman/icon/ethernet";
      images.image: "ethernet.png" COMP;
      max: 128 128;
      min: 16 16;
      parts {
         part { name: "icon";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 25 16;
               max: 25 16;
               image.normal: "ethernet.png";
            }
         }
      }
   }
   group { name: "e/modules/connman/icon/wifi";
      max: 128 128;
      min: 16 16;
      images {
         image: "wireless_none.png" COMP;
         image: "wireless_low.png" COMP;
         image: "wireless_medium.png" COMP;
         image: "wireless_high.png" COMP;
         image: "wireless_full.png" COMP;
      }
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               strength = getarg(2);
               if (strength == 0)
               run_program(PROGRAM:"strength,none");
               else if (strength < 35)
               run_program(PROGRAM:"strength,low");
               else if (strength < 65)
               run_program(PROGRAM:"strength,medium");
               else if (strength < 95)
               run_program(PROGRAM:"strength,high");
               else
               run_program(PROGRAM:"strength,full");
            }
         }
      }
      parts {
         part {
            name: "wifi";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 25 16;
               max: 25 16;
            }
            description { state: "none" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_none.png";
            }
            description { state: "low" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_low.png";
            }
            description { state: "medium" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_medium.png";
            }
            description { state: "high" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_high.png";
            }
            description { state: "full" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_full.png";
            }
         }
         programs {
            program {
               name: "strength,none";
               action: STATE_SET "default" 0.0;
               target: "wifi";
            }
            program {
               name: "strength,low";
               action: STATE_SET "low" 0.0;
               target: "wifi";
            }
            program {
               name: "strength,medium";
               action: STATE_SET "medium" 0.0;
               target: "wifi";
            }
            program {
               name: "strength,high";
               action: STATE_SET "high" 0.0;
               target: "wifi";
            }
            program {
               name: "strength,full";
               action: STATE_SET "full" 0.0;
               target: "wifi";
            }
         }
      }
   }
   // GADGET and TIP all have the same parts and signals:
   //
   // SIGNALS:
   //    e,unavailable: connmand is not running (nothing else works)
   //    e,available: connmand is running
   //
   //    e,changed,offline_mode,{yes,no}
   //    e,changed,connected,{yes,no}
   //    e,changed,service,{system,ethernet,wifi,wimax,bluetooth,cellular,vpn}
   //    e,changed,technology,{wifi,ethernet,bluetooth,wimax,cellular}
   //    e,changed,state,{idle,association,configuration,ready,disconnect,failure}
   //    e,changed,mode,{managed,adhoc,gprs,edge,umts}
   //    e,changed,security,{none,wep,psk,ieee8021x,wpa,rsn}
   //    e,changed,favorite,{yes,no}
   //    e,changed,auto_connect,{yes,no}
   //    e,changed,pass_required,{yes,no}
   //    e,changed,error,{yes,no}
   //    e,changed,ipv4_address,{yes,no}
   //
   // PARTS:
   //    e.text.offline_mode (filled with offline message)
   //    e.text.name
   //    e.text.error
   //    e.text.technology
   //    e.text.state
   //    e.text.ipv4_address
   //
   // MESSAGES:
   //    id=1, type=MSG_INT, description=strength (0-100)
   group {
      name: "e/modules/connman/main";
      images {
         image: "disconnected.png" COMP;
         image: "connman_error.png" COMP;

         image: "connecting-0.png" COMP;
         image: "connecting-1.png" COMP;
         image: "connecting-2.png" COMP;
         image: "connecting-3.png" COMP;
         image: "connecting-4.png" COMP;

         image: "ethernet.png" COMP;

         image: "wireless_none.png" COMP;
         image: "wireless_low.png" COMP;
         image: "wireless_medium.png" COMP;
         image: "wireless_high.png" COMP;
         image: "wireless_full.png" COMP;
      }
      //max: 128 128;
      min: 16 16;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               strength = getarg(2);
               if (strength == 0)
               run_program(PROGRAM:"strength,none");
               else if (strength < 35)
               run_program(PROGRAM:"strength,low");
               else if (strength < 65)
               run_program(PROGRAM:"strength,medium");
               else if (strength < 95)
               run_program(PROGRAM:"strength,high");
               else
               run_program(PROGRAM:"strength,full");
            }
         }
      }
      parts {
         part {
            name: "eventarea";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         SHELF_OVER_ITEM("eventarea", SHELF_OVER_OVER)
         SHELF_HILIGHT_ITEM("eventarea",SHELF_HILIGHT_OVER)
         part {
            name: "state-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "shelf_secondary_icon";
            }
            description {
               state: "inverted" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
         }
         part {
            name: "state-inverted-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "inverted" 0.0;
               color_class: "shelf_secondary_icon";
               visible: 1;
            }
         }
         programs {
            program {
               name: "e,changed,state,ready";
               signal: "e,changed,state,ready";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,failure";
               signal: "e,changed,state,failure";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,disconnect";
               signal: "e,changed,state,disconnect";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,idle";
               signal: "e,changed,state,idle";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,association";
               signal: "e,changed,state,association";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "e,changed,state,configuration";
               signal: "e,changed,state,configuration";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "state-connecting-stop";
               action: ACTION_STOP;
               target: "state-connecting";
               after: "state-connecting-stop2";
            }
            program {
               name: "state-connecting-stop2";
               action: STATE_SET "default" 0.0;
               target: "connecting";
            }
            program {
               name: "state-connecting";
               action: STATE_SET "connecting" 0.0;
               target: "connecting";
               transition: LINEAR 0.9;
               after: "state-connecting";
            }
         }
         part {
            name: "disconnected-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "disconnected";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "disconnected-visibility";
            description {
               state: "default" 0.0;
               fixed: 1 1;
               min: 25 16;
               max: 25 16;
               image.normal: "wireless_none.png";
            }
            description {
               state: "offline" 0.0;
               inherit: "default" 0.0;
               image.normal: "disconnected.png";
            }
         }
         programs {
            program {
               signal: "e,changed,offline_mode,yes";
               source: "e";
               action: STATE_SET "offline" 0.0;
               target: "disconnected";
            }
            program {
               signal: "e,changed,offline_mode,no";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "disconnected";
            }
         }
         part {
            name: "connecting";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "state-inverted-clipper";
            description {
               state: "default" 0.0;
               fixed: 1 1;
               min: 25 16;
               max: 25 16;
            }
            description {
               state: "connecting" 0.0;
               inherit: "default" 0.0;
               image.tween: "connecting-0.png";
               image.tween: "connecting-1.png";
               image.tween: "connecting-2.png";
               image.tween: "connecting-3.png";
               image.normal: "connecting-4.png";
            }
         }
         part {
            name: "ethernet-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ethernet";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "ethernet-visibility";
            description {
               state: "default" 0.0;
               min: 25 16;
               max: 25 16;
               fixed: 1 1;
               image.normal: "ethernet.png";
            }
         }
         part {
            name: "wifi-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "wifi";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "wifi-visibility";
            description { state: "default" 0.0;
               min: 25 16;
               max: 25 16;
            }
            description { state: "none" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_none.png";
            }
            description { state: "low" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_low.png";
            }
            description { state: "medium" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_medium.png";
            }
            description { state: "high" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_high.png";
            }
            description { state: "full" 0.0;
               inherit: "default" 0.0;
               image.normal: "wireless_full.png";
            }
         }
         // TODO: wimax, cellular, bluetooth
         programs {
            program {
               name: "strength,none";
               action: STATE_SET "default" 0.0;
               target: "wifi";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,low";
               action: STATE_SET "low" 0.0;
               target: "wifi";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,medium";
               action: STATE_SET "medium" 0.0;
               target: "wifi";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,high";
               action: STATE_SET "high" 0.0;
               target: "wifi";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,full";
               action: STATE_SET "full" 0.0;
               target: "wifi";
                       // add wimax, cellular, bluetooth
            }
         }
         part {
            name: "availability";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               min: 25 21;
               max: 25 21;
               rel1.offset: 0 -3;
               rel2.offset: -1 -4;
               image.normal: "connman_error.png";
            }
            description { state: "unavailable" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         programs {
            program {
               name: "e,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "availability";
               transition: LINEAR 0.2;
            }
            program {
               name: "e,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "unavailable" 0.0;
               target: "availability";
               transition: LINEAR 0.2;
            }
         }
         programs {
            program {
               name: "e,changed,technology,none";
               signal: "e,changed,technology,none";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "disconnected-visibility";
               after: "e,changed,technology,none,others";
            }
            program {
               name: "e,changed,technology,none,others";
               action: STATE_SET "default" 0.0;
               target: "ethernet-visibility";
               target: "wifi-visibility";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,ethernet";
               signal: "e,changed,technology,ethernet";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "ethernet-visibility";
               after: "e,changed,technology,ethernet,others";
            }
            program {
               name: "e,changed,technology,ethernet,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "wifi-visibility";
                       // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,wifi";
               signal: "e,changed,technology,wifi";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "wifi-visibility";
               after: "e,changed,technology,wifi,others";
            }
            program {
               name: "e,changed,technology,wifi,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "ethernet-visibility";
                       // add wimax, cellular, bluetooth
            }
         }
      }
   }
   group { name: "e/modules/connman/tip";
      images.image: "progress_horizontal_stroke.png" COMP;
      images.image: "progress_horizontal_fill.png" COMP;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               new buf[32];
               new Float:val;
               strength = getarg(2);
               if (strength >= 0) {
                  val = float(strength) / 100.0;
                  snprintf(buf, sizeof(buf), "%d%%", strength);
                  set_text(PART:"strength_text", buf);
                  set_drag(PART:"strength_fill_knob", val, 0.0);
               }
            }
         }
      }
      min: 250 40;
      parts {
         part { name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 0;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 10 -1;
               }
               text {
                  font: "DejaVu Sans,Sans";
                  size: 12;
                  min: 1 1;
                  align: 0.0 0.5;
               }
            }
         }
         //part { name: "e.text.state";
         //   type: TEXT;
         //   mouse_events: 0;
         //   description { state: "default" 0.0;
         //      color: 200 200 200 255;
         //      rel1 {
         //         to: "e.text.name";
         //         relative: 1.0 0.0;
         //         offset: 10 0;
         //      }
         //      rel2 {
         //         to_y: "e.text.name";
         //         relative: 1.0 1.0;
         //         offset: 10 -1;
         //      }
         //      text {
         //         font: "DejaVu Sans,Sans";
         //         size: 10;
         //         align: 0.0 0.5;
         //         min: 1 1;
         //      }
         //   }
         //}


         part { name: "strength_clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
               rel1 {
                  to_x: "e.text.name";
                  relative: 1.0 0.0;
                  offset: 10 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -5 -1;
               }
            }
            description { state: "ethernet" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "wifi" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part { name: "strength_text";
            type: TEXT;
            mouse_events: 0;
            clip_to: "strength_clipper";
            description { state: "default" 0.0;
               color: 200 200 200 255;
               rel1 {
                  to: "strength_clipper";
                  relative: 1.0 0.0;
                  offset: -30 0;
               }
               rel2 {
                  to: "strength_clipper";
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               text {
                  font: "DejaVu Sans,Sans";
                  size: 10;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
         }
         part { name: "strength_progress";
            type: RECT;
            mouse_events: 0;
            clip_to: "strength_clipper";
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  to: "strength_clipper";
                  relative: 0.0 0.0;
                  offset: 10 0;
               }
               rel2 {
                  to_x: "strength_text";
                  to_y: "strength_clipper";
                  relative: 0.0 1.0;
                  offset: -10 -1;
               }
            }
         }
         part { name: "strength_stroke";
            type: IMAGE;
            clip_to: "strength_progress";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 4;
               max: 9999 4;
               image.normal: "progress_horizontal_stroke.png";
               rel1.to: "strength_fill";
               rel2.to: "strength_fill";
            }
         }
         part { name: "strength_fill";
            type: IMAGE;
            clip_to: "strength_fill_clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 0 2;
               max: 9999 2;
               image.normal: "progress_horizontal_fill.png";
               rel1.to: "strength_progress";
               rel2.to: "strength_progress";
            }
         }
         part { name: "strength_fill_confine";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "strength_fill";
               rel2.to: "strength_fill";
            }
         }
         part { name: "strength_fill_knob";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "strength_fill_confine";
            }
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
            }
         }
         part { name: "strength_fill_clipper";
            type: RECT;
            mouse_events: 0;
            clip_to: "strength_progress";
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "strength_fill_confine";
               rel2.to_x: "strength_fill_knob";
               rel2.to_y: "strength_fill_confine";
            }
         }
         //part {
         //   name: "e.text.error";
         //   type: TEXT;
         //   mouse_events: 0;
         //}
         //programs {
         //   program {
         //      name: "e,changed,error,yes";
         //      signal: "e,changed,error,yes";
         //      source: "e";
         //      action: STATE_SET "default" 0.0;
         //      target: "e.text.error";
         //   }
         //   program {
         //      name: "e,changed,error,no";
         //      signal: "e,changed,error,no";
         //      source: "e";
         //      action: STATE_SET "hidden" 0.0;
         //      target: "e.text.error";
         //   }
         //}
         //part {
         //   name: "e.text.ipv4_address";
         //   type: TEXT;
         //   mouse_events: 0;
         //}
         //programs {
         //   program {
         //      name: "e,changed,ipv4_address,yes";
         //      signal: "e,changed,ipv4_address,yes";
         //      source: "e";
         //      action: STATE_SET "default" 0.0;
         //      target: "e.text.ipv4_address";
         //   }
         //   program {
         //      name: "e,changed,ipv4_address,no";
         //      signal: "e,changed,ipv4_address,no";
         //      source: "e";
         //      action: STATE_SET "hidden" 0.0;
         //      target: "e.text.ipv4_address";
         //   }
         //}
         //part {
         //   name: "e.text.offline_mode";
         //   type: TEXT;
         //   mouse_events: 0;
         //}
         //programs {
         //   program {
         //      name: "e,changed,offline_mode,yes";
         //      signal: "e,changed,offline_mode,yes";
         //      source: "e";
         //      action: STATE_SET "default" 0.0;
         //      target: "e.text.offline_mode";
         //   }
         //   program {
         //      name: "e,changed,offline_mode,no";
         //      signal: "e,changed,offline_mode,no";
         //      source: "e";
         //      action: STATE_SET "hidden" 0.0;
         //      target: "e.text.offline_mode";
         //   }
         //}
         programs {
            program { name: "e,changed,technology,none";
               signal: "e,changed,technology,none";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "strength_clipper";
            }
            program { name: "e,changed,technology,ethernet";
               signal: "e,changed,technology,ethernet";
               source: "e";
               action: STATE_SET "ethernet" 0.0;
               target: "strength_clipper";
            }
            program { name: "e,changed,technology,wifi";
               signal: "e,changed,technology,wifi";
               source: "e";
               action: STATE_SET "wifi" 0.0;
               target: "strength_clipper";
            }
         }
      }
   }
}
