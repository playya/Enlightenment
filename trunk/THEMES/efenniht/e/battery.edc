collections {
   group { name: "e/modules/battery/main";
      images {
         image: "battery.png" COMP;
         image: "battery_fill.png" COMP;
         image: "battery_charging.png" COMP;
      }
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_FLOAT) && (id == 1)) {
               new Float:val;
               val = getfarg(2);
               set_drag(PART:"fill_knob", val, 0.0);
               if (val < 0.2)
               set_state(PART:"clipper", "low", 0.0);
               else
               set_state(PART:"clipper", "default", 0.0);
            }
         }
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color_class: "shelf_secondary_icon";
            }
            description { state: "low" 0.0;
               color_class: "battery_low";
            }
         }
         part { name: "fill";
            type: IMAGE;
            clip_to: "fill_clipper";
            description { state: "default" 0.0;
               min: 23 10;
               max: 23 10;
               image.normal: "battery_fill.png";
               rel1 {
                  to: "battery";
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  to: "battery";
                  relative: 1.0 1.0;
                  offset: -5 -3;
               }
               rel2.to: "battery";
            }
         }
         part { name: "fill_confine";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 0 0 120;
               rel1.to: "fill";
               rel2.to: "fill";
            }
         }
         part { name: "fill_knob";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "fill_confine";
            }
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
            }
         }
         part { name: "fill_clipper";
            type: RECT;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "fill_confine";
               rel2.to_x: "fill_knob";
               rel2.to_y: "fill_confine";
            }
         }
         part { name: "battery";
            type: IMAGE;
            clip_to: "clipper";
            description { state: "default" 0.0;
               min: 29 14;
               max: 29 14;
               image.normal: "battery.png";
            }
         }
         part { name: "charging";
            type: IMAGE;
            description { state: "default" 0.0;
               min: 11 23;
               max: 11 23;
               fixed: 1 1;
               rel1 {
                  to: "battery";
                  relative: 1.0 0.0;
                  offset: -10 0;
               }
               rel2 {
                  to: "battery";
                  relative: 1.0 1.0;
                  offset: -10 -1;
               }
               image.normal: "battery_charging.png";
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "charging" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part { name: "e.text.reading";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            effect: OUTLINE_SOFT_SHADOW;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               color2: 0 0 0 0;
               color3: 0 0 0 0;
               color_class: "module_label";
               text {
                  font: "Sans:style=Bold";
                  size: 8;
                  min: 1 1;
                  align: 0.5 0.0;
                  text_class: "module_small";
               }
               align: 0.5 0.0;
               rel1.offset: 0 2;
               rel2.relative: 1.0 0.5;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               color2: 0 0 0 128;
               color3: 0 0 0 32;
            }
         }
         part { name: "e.text.time";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            effect: OUTLINE_SOFT_SHADOW;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               color2: 0 0 0 0;
               color3: 0 0 0 0;
               color_class: "module_label";
               text {
                  font: "Sans:style=Bold";
                  size: 8;
                  min: 1 1;
                  align: 0.5 1.0;
                  text_class: "module_small";
               }
               align: 0.5 1.0;
               rel1.relative: 0.0 0.5;
               rel1.offset: -1 -3;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               color2: 0 0 0 128;
               color3: 0 0 0 32;
            }
            program { name: "hover";
               signal: "mouse,in";
               source: "over";
               action: STATE_SET "visible" 0.0;
               transition: LINEAR 0.2;
               in: 0.5 0.0;
               target: "e.text.reading";
               target: "e.text.time";
            }
            program { name: "unhover";
               signal: "mouse,out";
               source: "over";
               action: ACTION_STOP;
               target: "hover";
               after: "unhover2";
            }
            program { name: "unhover2";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.5;
               target: "e.text.reading";
               target: "e.text.time";
            }
         }
         part { name: "over";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
            }
         }
      }
      programs {
         program { name: "charge";
            signal: "e,state,charging";
            source: "e";
            action: STATE_SET "charging" 0.0;
            target: "charging";
         }
         program { name: "discharge";
            signal: "e,state,discharging";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "charging";
         }
         //program {
         //   name: "unknown";
         //   signal: "e,state,unknown";
         //   source: "e";
         //   action: STATE_SET "faded" 0.0;
         //   target: "fade_clip";
         //}
      }
   }
   group { name: "e/modules/battery/popup";
      min: 240 64;
      parts {
         part { name: "battery";
            type: SWALLOW;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               min: 1 1;
               max: 120 120;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
               color: 255 255 255 255;
            }
         }
         part { name: "e.text.title";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: battery;
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -1 -1;
               }
               color_class: "battery_popup_text";
               text {
                  text: "Your battery is low!";
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
               }
            }
         }
         part { name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: battery;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               color_class: "battery_popup_text";
               text {
                  text: "AC power is recommended.";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
               }
            }
         }
      }
   }
}
