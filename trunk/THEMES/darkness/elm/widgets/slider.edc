   group { name: "elm/slider/horizontal/default";
           alias: "elm/slider/horizontal/disabled";
      images {
         image: "slider_bar.png" COMP;
         image: "frame_label_under.png" COMP;
      }
      parts {
         part { name: "base";
            mouse_events: 0;
            description { state: "default" 0.0;
               max: 99999 6;
               min: 0 6;
               rel1 { to: "bg";
                  offset: 1 0;
               }
               rel2 { to: "bg";
                  offset: -2 -1;
               }
               image.normal: "slider_bar.png";
               fill.smooth: 0;
            }
         }
         part { name: "level";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "base";
               rel2 {
                  to_y: "base";
                  to_x: "elm.dragable.slider";
               }
               color: DARKNESS_BUTTON_BLUE 200;
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: DARKNESS_BUTTON_BLUE 100;
            }
            description { state: "disabled_inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 48 24;
               max: 99999 24;
               align: 1.0 0.5;
               rel1 {
                  to_x: "elm.text";
                  relative: 1.0 0.0;
                  offset: 8 0;
               }
               rel2 {
                  to_x: "elm.units";
                  relative: 0.0 1.0;
                  offset: -10 -1;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  offset: 4 0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  offset: 3 -1;
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: 4 -1;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1.to_x: "elm.swallow.icon";
               rel1.relative: 1.0 0.0;
               rel1.offset: -1 4;
               rel2.to_x: "elm.swallow.icon";
               rel2.offset: -1 -5;
               color: DARKNESS_TEXT 255;
               text {
                  font: "DejaVu";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 128 128 128;
               visible: 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: DARKNESS_TEXT_DISABLED 128;
               color3: 0 0 0 0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part {
            name: "elm.swallow.end";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 1.0 0.5;
               rel1 {
                  offset: -4 0;
                  relative: 1.0 0.0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  offset: -3 -1;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel2.offset: -4 -1;
            }
         }
         part { name: "units";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_x: "elm.units";
                  offset: 0 5;
               }
               rel2 {
                  to_x: "elm.units";
                  offset: 5 -3;
               }
               image {
                  normal: "frame_label_under.png";
                  border: 0 5 3 8;
               }
               fill.smooth: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1.to_x: "elm.swallow.end";
               rel1.offset: 0 8;
               rel2.to_x: "elm.swallow.end";
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 -9;
               color: DARKNESS_TEXT 255;
               text {
                  font: "DejaVu";
                  size: 10;
                  min: 0 0;
                  align: 0.0 0.5;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 128 128 128;
               visible: 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: DARKNESS_TEXT_DISABLED 128;
               color3: 0 0 0 0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part { name: "elm.dragable.slider";
            type: GROUP;
            source: "elm/slider/horizontal/indicator/default";
            mouse_events: 1;
            repeat_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 0 24;
               max: 0 24;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "bg";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "bg";
               }
               color: DARKNESS_BUTTON_BLUE 100;
            }
         }
          part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
          program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "inverted" 0.0;
            target: "level";
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "level";
         }
         program {
            DISABLE_PROGRAM_PART
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);

               get_state(PART:"elm.units", st, 30, vl);
               if (!strcmp(st, "visible")) 
                  set_state(PART:"elm.units", "disabled_visible", 0.0);
               else 
                  set_state(PART:"elm.units", "disabled", 0.0);

               get_state(PART:"level", st, 30, vl);
               if (!strcmp(st, "inverted")) 
                 set_state(PART:"level", "disabled_inverted", 0.0);
               else 
                 set_state(PART:"level", "disabled", 0.0);
            }
         }
         program {
            ENABLE_PROGRAM_PART
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);

               get_state(PART:"elm.units", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.units", "visible", 0.0);
               else
                  set_state(PART:"elm.units", "default", 0.0);
     
               get_state(PART:"level", st, 30, vl);
               if (!strcmp(st, "disabled_inverted"))
                 set_state(PART:"level", "inverted", 0.0);
               else
                 set_state(PART:"level", "default", 0.0);
            }
         }
      }
   }

   group { name: "elm/slider/vertical/default";
      images {
         image: "slider_bar_v.png" COMP;
         image: "frame_label_under.png" COMP;
      }
      parts {
         part { name: "base";
            mouse_events: 0;
            description { state: "default" 0.0;
               max: 6 99999;
               min: 6 0;
               rel1 { to: "bg";
                  offset: 1 0;
               }
               rel2 { to: "bg";
                  offset: -2 -1;
               }
               image.normal: "slider_bar_v.png";
               fill.smooth: 0;
            }
         }
         part { name: "level";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "base";
               rel2 {
                  to_x: "base";
                  to_y: "elm.dragable.slider";
                  relative: 1.0 0.5;
               }
               color: DARKNESS_BUTTON_BLUE 200;
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: DARKNESS_BUTTON_BLUE 100;
            }
            description { state: "disabled_inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2.to: "elm.swallow.bar";
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 24 48;
               max: 24 9999;
               align: 0.5 1.0;
               rel1 {
                  to_y: "elm.text";
                  relative: 0.0 1.0;
                  offset: 0 10;
               }
               rel2 {
                  to_y: "elm.units";
                  relative: 1.0 0.0;
                  offset: -1 -8;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               rel1 {
                  offset: 0 4;
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  offset: -1 3;
                  relative: 1.0 0.0;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel2.offset: -1 4;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 0 1;
               align: 0.5 0.0;
               rel1.to_y: "elm.swallow.icon";
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -1;
               rel2.to_y: "elm.swallow.icon";
               rel2.relative: 1.0 1.0;
               rel2.offset: -1 -1;
               color: DARKNESS_TEXT 255;
               text {
                  font: "DejaVu";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 4 0;
               rel2.offset: -5 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 128 128 128;
               visible: 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               color: DARKNESS_TEXT_DISABLED 128;
               color3: 0 0 0 0;
               visible: 1;
               text.min: 1 1;
            }
         }
         part {
            name: "elm.swallow.end";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 1.0;
               rel1 {
                  offset: 0 -4;
                  relative: 0.0 1.0;
                  to_x: "elm.swallow.bar";
               }
               rel2 {
                  offset: -1 -3;
                  to_x: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel2.offset: -1 -4;
            }
         }
         part { name: "units";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "elm.units";
                  offset: -8 0;
               }
               rel2 {
                  to: "elm.units";
                  offset: 7 8;
               }
               image {
                  normal: "frame_label_under.png";
                  border: 8 8 0 9;
               }
               fill.smooth: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 0.0;
               rel1.to_y: "elm.swallow.end";
               rel1.offset: 8 0;
               rel2.relative: 1.0 0.0;
               rel2.to_y: "elm.swallow.end";
               rel2.offset: -9 0;
               color: DARKNESS_TEXT 255;
               text {
                  font: "DejaVu";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 8 -9;
               rel2.offset: -9 -9;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color:  0 0 0 128;
               color3: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled_visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 8 -9;
               rel2.offset: -9 -9;
               color: DARKNESS_TEXT_DISABLED 128;
               color3: 0 0 0 0;
            }
         }
         part { name: "elm.dragable.slider";
            type: GROUP;
            source: "elm/slider/vertical/indicator/default";
            mouse_events: 1;
            repeat_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 24 0;
               max: 24 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.5  0.0;
                  to_y: "bg";
               }
               rel2 {
                  relative: 0.5  1.0;
                  to_y: "bg";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
           type: RECT;
           description { state: "default" 0.0;
              color: 0 0 0 0;
              visible: 0;
           }
           description { state: "disabled" 0.0;
              inherit: "default" 0.0;
              visible: 1;
           }
        }
     }

      programs {
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.text";
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
         }
         program { name: "end_show";
            signal: "elm,state,end,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,state,end,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "units_show";
            signal: "elm,state,units,visible";
            source: "elm";
            action:  STATE_SET "visible" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "units_hide";
            signal: "elm,state,units,hidden";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "elm.units";
            target: "units";
         }
         program { name: "invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action:  STATE_SET "inverted" 0.0;
            target: "level";
         }
         program { name: "invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "level";
         }
         program {
            name:   "go_disabled";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            after: "disable_text";
         }
         program { name: "disable_text";
            script {
            new st[31];
            new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "visible"))
                  set_state(PART:"elm.text", "disabled_visible", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);

               get_state(PART:"elm.units", st, 30, vl);
               if (!strcmp(st, "visible")) 
                  set_state(PART:"elm.units", "disabled_visible", 0.0);
               else 
                  set_state(PART:"elm.units", "disabled", 0.0);

               get_state(PART:"level", st, 30, vl);
               if (!strcmp(st, "inverted")) 
                 set_state(PART:"level", "disabled_inverted", 0.0);
               else 
                 set_state(PART:"level", "disabled", 0.0);
            }
         }

         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            after: "enable_text";
         }
         program { name: "enable_text";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.text", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.text", "visible", 0.0);
               else
                  set_state(PART:"elm.text", "default", 0.0);

               get_state(PART:"elm.units", st, 30, vl);
               if (!strcmp(st, "disabled_visible"))
                  set_state(PART:"elm.units", "visible", 0.0);
               else
                  set_state(PART:"elm.units", "default", 0.0);
     
               get_state(PART:"level", st, 30, vl);
               if (!strcmp(st, "disabled_inverted"))
                 set_state(PART:"level", "inverted", 0.0);
               else
                 set_state(PART:"level", "default", 0.0);
            }
         }
      }
   }
   group { name: "elm/slider/horizontal/indicator/default";
           alias: "elm/slider/horizontal/indicator/disabled";
           alias: "elm/slider/vertical/indicator/default";
           alias: "elm/slider/vertical/indicator/disabled";
      images {
         image: "slider_button.png" COMP;
         image: "slider_button_disabled.png" COMP;
         image: "slider_button_glow.png" COMP;
         image: "entry_over.png" COMP;
         image: "focus_glow.png" COMP;
      }
      parts {
         part { name: "button_events";
            type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 32 32;
               max: 32 32;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
            }
         }
         part { name: "button";
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 32 32;
               max: 32 32;
               color: 175 175 175 255;
               image {
                  normal: "slider_button.png";
                  border: 5 5 5 10;
               }
               fill.smooth: 0;
            }
            description { state: "down" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 255;
               image {
                  normal: "slider_button_disabled.png";
                  border: 5 5 5 10;
               }
            }
         }
         FOCUS_GLOW(0.0, 0.0, 0, 0, "button", 1.0, 1.0, -1, -1, "button")
         part {
            name: "slider_glow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               min: 32 32;
               max: 32 32;
               rel1.to: "button";
               rel2.to: "button";
               image.normal: "slider_button_glow.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "down";
            signal: "mouse,down,1";
            source: "button_events";
            script {
               stop_program(PROGRAM:"slider_in");
               stop_program(PROGRAM:"slider_in2");
               set_state(PART:"button", "down", 0.0);
               set_state(PART:"slider_glow", "visible", 0.0);
            }
         }
         program {
            name: "up";
            signal: "mouse,up,1";
            source: "button_events";
            action: STATE_SET "default" 0.0;
            target: "button";
         }
         program {
            name: "slider_in";
            signal: "mouse,in";
            source: "button_events";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "slider_glow";
            after: "slider_in2";
         }
         program {
            name: "slider_in2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "slider_glow";
            after: "slider_in";
         }
         program {
            name: "slider_out";
            signal: "mouse,out";
            source: "button_events";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "slider_glow";
         }
         program {
            name: "slider_focus";
            FOCUS_SIGNAL
            FOCUS_GLOW_ACTION("button")
         }
         program {
            name: "slider_unfocus";
            UNFOCUS_SIGNAL
            UNFOCUS_GLOW_ACTION("button")
         }
         program {
            ENABLE_PROGRAM_PART
            target: "button";
         }
         program {
            DISABLE_PROGRAM_PART
            target: "button";
         }
      }
   }
