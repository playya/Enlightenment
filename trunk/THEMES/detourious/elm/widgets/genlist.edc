/* common genlist background and disable clipper.
 */
#define GENLIST_BG									\
	part { name: "disclip";						\
		type: RECT;								\
		description { state: "default" 0.0;		\
			rel1.to: "bg";							\
			rel2.to: "bg";							\
		}											\
		description { state: "disabled" 0.0;		\
			inherit: "default" 0.0;				\
			color: 255 255 255 64;					\
		}											\
	}												\
	part { name: "bg";								\
		type: RECT;								\
		clip_to: "disclip";						\
		mouse_events: 0;							\
		description { state: "default" 0.0;		\
			visible: 0;							\
			color: 255 255 255 0;					\
			rel1 {									\
				relative: 0.0 0.0;					\
				offset: -5 -5;						\
			}										\
			rel2 {									\
				relative: 1.0 1.0;					\
				offset: 4 4;						\
			}										\
		}											\
		description { state: "default" 1.0;		\
			inherit: "default" 0.0;				\
		}											\
		description { state: "selected" 0.0;		\
			inherit: "default" 0.0;				\
			visible: 1;							\
			color: COLOR_LIST_BG_ACTIVE;			\
			rel1 {									\
				relative: 0.0 0.0;					\
				offset: 0 0;						\
			}										\
			rel2 {									\
				relative: 1.0 1.0;					\
				offset: -1 -1;						\
			}										\
		}											\
		description {								\
			state: "selected" 1.0;					\
			inherit: "selected" 0.0;				\
		}											\
	}

/* common genlist item programs.
 * depends on 2 programs: "go_active_item" and "go_passive_item".
 */
#define GENLIST_PROGRAMS									\
	programs {												\
		program {											\
			name:    "odd";								\
			signal:  "elm,state,odd";						\
			source:  "elm";								\
			action:  STATE_SET "default" 1.0;				\
			target:  "base";								\
		}													\
		program {											\
			name:    "even";								\
			signal:  "elm,state,even";						\
			source:  "elm";								\
			action:  STATE_SET "default" 0.0;				\
			target:  "base";								\
		}													\
		program {											\
			name:    "go_active";							\
			signal:  "elm,state,selected";					\
			source:  "elm";								\
			script {										\
				new st[31];								\
				new Float:vl;								\
				get_state(PART:"base", st, 30, vl);		\
				set_state(PART:"bg", "selected", vl);		\
			}												\
			after: "go_active_item";						\
		}													\
		program {											\
			name:    "go_passive";							\
			signal:  "elm,state,unselected";				\
			source:  "elm";								\
			script {										\
				new st[31];								\
				new Float:vl;								\
				get_state(PART:"base", st, 30, vl);		\
				set_state(PART:"bg", "default", vl);		\
			}												\
			after: "go_passive_item";						\
		}													\
		program {											\
			name:    "go_disabled";						\
			signal:  "elm,state,disabled";					\
			source:  "elm";								\
			action:  STATE_SET "disabled" 0.0;				\
			target:  "disclip";							\
		}													\
		program {											\
			name:    "go_enabled";							\
			signal:  "elm,state,enabled";					\
			source:  "elm";								\
			action:  STATE_SET "default" 0.0;				\
			target:  "disclip";							\
		}													\
	}

/* common genlist base (without minimum size)
 * depends on GENLIST_BG and GENLIST_PROGRAMS
 */
#define GENLIST_BASE										\
	part {													\
		name: "base";										\
		type: RECT;										\
		repeat_events: 1;									\
		description {										\
			state: "default" 0.0;							\
			color: COLOR_LIST_BG;							\
		}													\
		description {										\
			state: "default" 1.0;							\
			color: COLOR_LIST_BG_ODD;						\
		}													\
	}														\
	GENLIST_BG												\
	GENLIST_PROGRAMS


/* common genlist base with minimum size
 * depends on GENLIST_BG and GENLIST_PROGRAMS
 */
#define GENLIST_BASE_MIN						\
	part {										\
		name: "base";							\
		type: RECT;							\
		repeat_events: 1;						\
		description {							\
			min: 16 28;						\
			state: "default" 0.0;				\
			color: COLOR_LIST_BG;				\
		}										\
		description {							\
			min: 16 28;						\
			state: "default" 1.0;				\
			color: COLOR_LIST_BG_ODD;			\
		}										\
	}											\
	GENLIST_BG									\
	GENLIST_PROGRAMS


#define GENLIST_SEPARATOR						\
	part {										\
		name: "separator";						\
		mouse_events: 0;						\
		type: RECT;								\
		description {							\
			state: "default" 0.0;				\
			max: 9999 1;						\
			rel1 {								\
				relative: 0.0 1.0;				\
				offset: 0 -1;					\
			}									\
			rel2 {								\
				offset: -1 -1;					\
			}									\
			color: 0 0 0 20;					\
		}										\
	}

group { name: "elm/genlist/item/default/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	parts {
		part {
			name: "event";
			type: RECT;
			repeat_events: 1;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
		part { name: "reorder_bg";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -7 -7;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 9 9;
				}
				image {
					normal: "bt_bases.png";
					border: 6 6 6 6;
				}
			}
			description { state: "enabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				color: 255 255 255 255;
			}
		}

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   4 4;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", -1.0 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
		program {
			name:    "go_reorder_disabled";
			signal:  "elm,state,reorder,disabled";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "reorder_bg";
			transition: DECELERATE 0.5;
		}
		program {
			name:    "go_reorder_enabled";
			signal:  "elm,state,reorder,enabled";
			source:  "elm";
			action:  STATE_SET "enabled" 0.0;
			target:  "reorder_bg";
			transition: DECELERATE 0.5;
		}
	}
}
group { name: "elm/genlist/item/group_index/default";
	alias: "elm/genlist/item_compress/group_index/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "bt_sm_base1.png" COMP;
		image: "bt_sm_shine.png" COMP;
		image: "bt_sm_hilight.png" COMP;
		image: "ilist_item_shadow.png" COMP;
		image: "group_index.png" COMP;
	}
	parts {
		part {
			name: "event";
			type: RECT;
			repeat_events: 0;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
		part {
			name: "base";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				image {
					normal: "group_index.png";
					border: 2 2 2 2;
				}
				fill.smooth: 0;
			}
		}
		part { name: "bg";
			clip_to: "disclip";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
				image {
					normal: "bt_sm_base1.png";
					border: 6 6 6 6;
				}
				image.middle: SOLID;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				color: 255 255 255 255;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 4 -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0 0.0;
					offset: -1 4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0 1.0;
					offset: -1 -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0 0.0;
					offset: -5 4;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type: TEXT;
			effect: TEXT_EFFECT;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x: "elm.swallow.icon";
					relative: 1.0  0.0;
					offset: 4 4;
				}
				rel2 {
					to_x: "elm.swallow.end";
					relative: 0.0  1.0;
					offset: -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", -1.0 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "disclip";
			type: RECT;
			description { state: "default" 0.0;
				rel1.to: "bg";
				rel2.to: "bg";
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 64;
			}
		}
	}
	programs {
        // signal: elm,state,%s,active
        //   a "check" item named %s went active
        // signal: elm,state,%s,passive
        //   a "check" item named %s went passive
        // default is passive
		program {
			name:    "go_active";
			signal:  "elm,state,selected";
			source:  "elm";
			action:  STATE_SET "selected" 0.0;
			target:  "bg";
			target:  "elm.text";
		}
		program {
			name:    "go_passive";
			signal:  "elm,state,unselected";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "bg";
			target:  "elm.text";
			transition: LINEAR 0.1;
		}
		program {
			name:    "go_disabled";
			signal:  "elm,state,disabled";
			source:  "elm";
			action:  STATE_SET "disabled" 0.0;
			target:  "disclip";
		}
		program {
			name:    "go_enabled";
			signal:  "elm,state,enabled";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "disclip";
		}
	}
}
group { name: "elm/genlist/item_compress/message/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.title.1 elm.title.2 elm.text";
	//      data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";

	parts {

		GENLIST_BASE;

		part { name: "elm.title.1";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				//               min: 16 16;
				rel1 {
					relative: 0.0  0.0;
					offset:   4 4;
				}
				rel2 {
					relative: 1.0  0.0;
					offset:   -5 4;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.title.2";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				//               min: 16 16;
				rel1 {
					to_y:     "elm.title.1";
					relative: 0.0  1.0;
					offset:   4 0;
				}
				rel2 {
					to_y:     "elm.title.1";
					relative: 1.0  1.0;
					offset:   -5 0;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXTBLOCK;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               fixed: 0 1;
				//               min: 16 16;
				rel1 {
					to_y:     "elm.title.2";
					relative: 0.0  1.0;
					offset:   4 0;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5 -5;
				}
				align: 0.0 0.0;
				text {
					style: "genlist_textblock_style";
					min: 0 1;
                    //                  min: 1 1;
					align: 0.0 0.0;
				}
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "genlist_textblock_style2";
				}
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
				set_state(PART:"elm.title.1", "selected", vl);
				set_state(PART:"elm.title.2", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
				set_state(PART:"elm.title.1", "default", vl);
				set_state(PART:"elm.title.2", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/item_compress/default/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	parts {

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   4 4;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 0.5, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/tree/default/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "icon_arrow_left.png" COMP;
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "default" 0.1;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_left.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
			description { state: "active" 0.1;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					to_x: "arrow";
					relative: 1.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   4 4;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", -1.0 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
		program {
			name:    "expand";
			signal:  "mouse,up,1";
			source:  "arrow";
			action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
		}
		program {
			name:    "go_expanded";
			signal:  "elm,state,expanded";
			source:  "elm";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				set_state(PART:"arrow", "active", vl);
			}
		}
		program {
			name:    "go_contracted";
			signal:  "elm,state,contracted";
			source:  "elm";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				set_state(PART:"arrow", "default", vl);
			}
		}
		program { name: "to_rtl";
			signal: "edje,state,rtl";
			source: "edje";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				if (vl == 0.0) {
					set_state(PART:"arrow", st, 0.1);
				}
			}
		}
		program { name: "to_ltr";
			signal: "edje,state,ltr";
			source: "edje";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				if (vl == 0.1) {
					set_state(PART:"arrow", st, 0.0);
				}
			}
		}
	}
}
group { name: "elm/genlist/tree_compress/default/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "icon_arrow_left.png" COMP;
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "default" 0.1;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_left.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
			description { state: "active" 0.1;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					to_x: "arrow";
					relative: 1.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   4 4;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 0.5, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
		program {
			name:    "expand";
			signal:  "mouse,up,1";
			source:  "arrow";
			action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
		}
		program {
			name:    "go_expanded";
			signal:  "elm,state,expanded";
			source:  "elm";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				set_state(PART:"arrow", "active", vl);
			}
		}
		program {
			name:    "go_contracted";
			signal:  "elm,state,contracted";
			source:  "elm";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				set_state(PART:"arrow", "default", vl);
			}
		}
		program { name: "to_rtl";
			signal: "edje,state,rtl";
			source: "edje";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				if (vl == 0.0) {
					set_state(PART:"arrow", st, 0.1);
				}
			}
		}
		program { name: "to_ltr";
			signal: "edje,state,ltr";
			source: "edje";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"arrow", st, 30, vl);
				if (vl == 0.1) {
					set_state(PART:"arrow", st, 0.0);
				}
			}
		}
	}
}
group { name: "elm/genlist/item/default_style/default";
	styles
		{
			style { name: "genlist_style";
				base: "font=Sans font_size=10 align=left valign=0.5 color=#000 text_class=list_item";
				tag:  "br" "\n";
				tag:  "ps" "ps";
				tag:  "hilight" "+ font_weight=Bold";
				tag:  "b" "+ font_weight=Bold";
				tag:  "tab" "\t";
			}
			style { name: "genlist_selected_style";
				base: "font=Sans font_size=10 align=left valign=0.5 color=#fff text_class=list_item";
				tag:  "br" "\n";
				tag:  "ps" "ps";
				tag:  "hilight" "+ font_weight=Bold";
				tag:  "b" "+ font_weight=Bold";
				tag:  "tab" "\t";
			}
		}
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	parts {

		GENLIST_BASE_MIN;
		
		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type: TEXTBLOCK;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.0 0.5;
				fixed: 0 1;
				rel1 {
					to_x: "elm.swallow.icon";
					to_y: "base";
					relative: 1.0  0.5;
					offset:   4 4;
				}
				rel2 {
					to_x: "elm.swallow.end";
					to_y: "base";
					relative: 0.0  0.5;
					offset:   -5 -5;
				}
				text {
					style: "genlist_style";
					min: 1 1;
				}
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "genlist_selected_style";
				}
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/tree/default_style/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	images {
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {

		GENLIST_BASE_MIN;
		
		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					to_x: "arrow";
					relative: 1.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXTBLOCK;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.0 0.5;
				fixed: 0 1;
				rel1 {
					to_x:     "elm.swallow.icon";
					to_y: "base";
					relative: 1.0  0.5;
					offset:   4 4;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					to_y: "base";
					relative: 0.0  0.5;
					offset:   -5 -5;
				}
				text {
					style: "genlist_style";
					min: 1 1;
				}
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "genlist_selected_style";
				}
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
		program {
			name:    "expand";
			signal:  "mouse,up,1";
			source:  "arrow";
			action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
		}
		program {
			name:    "go_expanded";
			signal:  "elm,state,expanded";
			source:  "elm";
			action:  STATE_SET "active" 0.0;
			target:  "arrow";
		}
		program {
			name:    "go_contracted";
			signal:  "elm,state,contracted";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "arrow";
		}
	}
}

group { name: "elm/genlist/item/double_label/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text elm.text.sub";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	parts {

		GENLIST_BASE_MIN;
		GENLIST_SEPARATOR;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   10 10;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_BOLD("list_item", 0.0 1.0, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.sub";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.5;
					offset:   10 1;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
				set_state(PART:"elm.text.sub", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
				set_state(PART:"elm.text.sub", "default", vl);
			}
		}
	}
}
group { name: "elm/genlist/item_compress/double_label/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text elm.text.sub";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	parts {

		GENLIST_BASE;
		GENLIST_SEPARATOR;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   10 10;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 1.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.sub";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.5;
					offset:   10 1;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
				set_state(PART:"elm.text.sub", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
				set_state(PART:"elm.text.sub", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/tree/double_label/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text elm.text.sub";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {
		GENLIST_BASE;
		GENLIST_SEPARATOR;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					to_x: "arrow";
					relative: 1.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   10 10;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 1.0, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.sub";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.5;
					offset:   10 1;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
				set_state(PART:"elm.text.sub", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
				set_state(PART:"elm.text.sub", "default", vl);
			}
		}
		program {
			name:    "expand";
			signal:  "mouse,up,1";
			source:  "arrow";
			action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
		}
		program {
			name:    "go_expanded";
			signal:  "elm,state,expanded";
			source:  "elm";
			action:  STATE_SET "active" 0.0;
			target:  "arrow";
		}
		program {
			name:    "go_contracted";
			signal:  "elm,state,contracted";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "arrow";
		}
	}
}
group { name: "elm/genlist/tree_compress/double_label/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text elm.text.sub";
	data.item: "icons" "elm.swallow.icon elm.swallow.end";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {
		GENLIST_BASE;
		GENLIST_SEPARATOR;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					to_x: "arrow";
					relative: 1.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.end";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0  0.0;
					offset:   -5    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.0;
					offset:   10 10;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 1.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.sub";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_x:     "elm.swallow.icon";
					relative: 1.0  0.5;
					offset:   10 1;
				}
				rel2 {
					to_x:     "elm.swallow.end";
					relative: 0.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
				set_state(PART:"elm.text.sub", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
				set_state(PART:"elm.text.sub", "default", vl);
			}
		}
		program {
			name:    "expand";
			signal:  "mouse,up,1";
			source:  "arrow";
			action:  SIGNAL_EMIT "elm,action,expand,toggle" "elm";
		}
		program {
			name:    "go_expanded";
			signal:  "elm,state,expanded";
			source:  "elm";
			action:  STATE_SET "active" 0.0;
			target:  "arrow";
		}
		program {
			name:    "go_contracted";
			signal:  "elm,state,contracted";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "arrow";
		}
	}
}

group { name: "elm/genlist/item/icon_top_text_bottom/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	parts {
		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -4   -5;
				}
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.5 0.5;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 0.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_y:     "elm.swallow.icon";
					relative: 0.0  1.0;
					offset:   4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.5 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/tree/icon_top_text_bottom/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text";
	data.item: "icons" "elm.swallow.icon";
	data.item: "treesize" "20";
	//      data.item: "states" "";
	images {
		image: "icon_arrow_right.png" COMP;
		image: "icon_arrow_down.png" COMP;
	}
	parts {
		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "arrow";
			clip_to: "disclip";
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
				image.normal: "icon_arrow_right.png";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				image.normal: "icon_arrow_down.png";
			}
		}
		part { name: "elm.swallow.icon";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.5 0.5;
				rel1 {
					to_x: "arrow";
					relative: 1.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -4   -5;
				}
			}
		}
		part { name: "elm.text";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				//               min: 16 16;
				rel1 {
					to_y:     "elm.swallow.icon";
					relative: 0.0  1.0;
					offset:   4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -5 -5;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.5 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text", "default", vl);
			}
		}
	}
}


group { name: "elm/genlist/item_compress/media/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text.title elm.text.album-artist";
	data.item: "treesize" "20";
	parts {
		GENLIST_BASE;
		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.text.title";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					relative: 0.0  0.0;
					offset:   10 10;
				}
				rel2 {
					relative: 1.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 1.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.album-artist";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					relative: 0.0  0.5;
					offset:   10 1;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "selected", vl);
				set_state(PART:"elm.text.album-artist", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "default", vl);
				set_state(PART:"elm.text.album-artist", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/item_compress/media-album/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text.title elm.text.trackno elm.text.length";
	data.item: "states" "elm.state.trackno";
	data.item: "treesize" "20";
	script {
		public dot_visible;
	}
	parts {

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part {
			name: "elm.text.trackno";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				align: 0.0 0.0;
				fixed: 1 0;
				rel1 {
					to_y: "elm.text.title";
					relative: 0.0 0.0;
					offset: 10 0;
				}
				rel2 {
					to_y: "elm.text.title";
					relative: 0.0 1.0;
					offset: 25 0;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 1.0 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part {
			name: "dot";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				visible: 0;
				fixed: 1 1;
				align: 0.0 0.0;
				rel1 {
					to_x: "elm.text.trackno";
					to_y: "elm.text.title";
					relative: 1.0 0.0;
					offset: 1 0;
				}
				rel2 {
					to_x: "elm.text.trackno";
					to_y: "elm.text.title";
					relative: 1.0 1.0;
					offset: 1 0;

				}
				TEXT_COLOR;
				TEXT_DOT;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
				visible: 1;
			}
		}
		programs {
			program {
				signal: "elm,state,elm.state.trackno,active";
				source: "elm";
				script {
					set_state(PART:"dot", "visible", 0.0);
					set_int(dot_visible, 1);
				}
			}
		}
		part { name: "elm.text.title";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					to_x: "dot";
					relative: 0.0  0.0;
					offset:   10 10;
				}
				rel2 {
					to_x: "elm.text.length";
					relative: 0.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 0.5, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.length";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 1.0 0.5;
				rel1 {
					to_y: "elm.text.title";
					relative: 1.0  0.0;
					offset:   -11 0;
				}
				rel2 {
					to_y: "elm.text.title";
					relative: 1.0  1.0;
					offset:   -11 -1;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.5, 1 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "selected", vl);
				set_state(PART:"elm.text.trackno", "selected", vl);
				set_state(PART:"elm.text.length", "selected", vl);
				if (get_int(dot_visible) == 1)
					set_state(PART:"dot", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "default", vl);
				set_state(PART:"elm.text.trackno", "default", vl);
				set_state(PART:"elm.text.length", "default", vl);
				if (get_int(dot_visible) == 1)
					set_state(PART:"dot", "visible", 0.0);
			}
		}
	}
}

group { name: "elm/genlist/item_compress/media-preview/default";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text.title elm.text.artist";
	data.item: "icons" "elm.swallow.preview";
	data.item: "treesize" "20";
	parts {

		GENLIST_BASE;

		part { name: "elm.swallow.pad";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1 {
					relative: 0.0  0.0;
					offset:   4    4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset:   4   -5;
				}
			}
		}
		part { name: "elm.swallow.preview";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				min: 68 68;
				max: 68 68;
				rel1 {
					to_x: "elm.swallow.pad";
					relative: 1.0  0.0;
					offset:   -1    4;
				}
				rel2 {
					to_x: "elm.swallow.pad";
					relative: 1.0  1.0;
					offset:   -1   -5;
				}
			}
		}
		part { name: "elm.text.title";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					to_x:     "elm.swallow.preview";
					relative: 1.0  0.0;
					offset:   10 10;
				}
				rel2 {
					relative: 1.0  0.5;
					offset:   -11 -1;
				}
				TEXT_COLOR;
				TEXT_NORMAL("list_item", 0.0 1.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
			}
		}
		part { name: "elm.text.artist";
			clip_to: "disclip";
			type:           TEXT;
			mouse_events:   0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					to_x:     "elm.swallow.preview";
					relative: 1.0  0.5;
					offset:   10 1;
				}
				rel2 {
					relative: 1.0  1.0;
					offset:   -11 -11;
				}
				TEXT_COLOR_UNIMPORTANT;
				TEXT_SMALL("list_item_unimportant", 0.0 0.0, 0 1);
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_UNIMPORTANT_SELECTED;
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "selected", vl);
				set_state(PART:"elm.text.artist", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.title", "default", vl);
				set_state(PART:"elm.text.artist", "default", vl);
			}
		}
	}
}

group { name: "elm/genlist/item/mode/default";
	data.item: "selectraise" "on";
	data.item: "labels" "elm.text.mode";
	data.item: "icons" "elm.swallow.mode";
	data.item: "mode_part" "elm.swallow.origin";
	data.item: "treesize" "20";

	parts {

		GENLIST_BASE;

		part { name: "elm.text.mode";
			clip_to: "disclip";
			type: TEXT;
			scale: 1;
			description { state: "default" 0.0;
				rel2.relative: 0.5 1.0;
				TEXT_COLOR;
				TEXT_NORMAL("list_item", -1.0 0.5, 1 1);
			}
		}
		part { name: "elm.swallow.mode";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				rel1.relative: 0.5 0.0;
			}
		}
		// Transparent part between base parts and slidable parts
		part { name: "event_block_layer";
			type: RECT;
			clip_to: "disclip";
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				color: 0 0 0 0;
			}
			description { state: "repeat_events" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "pers";
			clip_to: "disclip";
			type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
			}
		}
		part { name: "elm.swallow.origin";
			clip_to: "disclip";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
			}
			description { state: "slide" 0.0;
				inherit: "default" 0.0;
				rel1.relative: 1 0;
				rel2.relative: 2 1;
			}
			description { state: "rotate" 0.0;
				inherit: "default" 0.0;
				map {
					perspective: "pers";
					on: 1;
					smooth: 1;
					perspective_on: 1;
					backface_cull: 1;
					rotation {
						center: "pers";
						x: 0.0;
						y: 0.0;
						z: 0.0;
					}
				}
			}
			description { state: "rotate" 1.0;
				inherit: "default" 0.0;
				map {
					perspective: "pers";
					on: 1;
					smooth: 1;
					perspective_on: 1;
					backface_cull: 1;
					rotation {
						center: "pers";
						x: 90.0;
						y: 0.0;
						z: 0.0;
					}
				}
			}
		}
	}
	programs {
		program { name: "go_active_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.mode", "selected", vl);
			}
		}
		program { name: "go_passive_item";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"base", st, 30, vl);
				set_state(PART:"elm.text.mode", "default", vl);
			}
		}
		program {
			name:    "slide_right";
			signal:  "elm,state,slide,active";
			source:  "elm";
			action:  STATE_SET "slide" 0.0;
			target:  "elm.swallow.origin";
			transition: ACCELERATE 0.5;
			after:   "unblock_event";
		}
		program {
			name:    "unblock_event";
			action:  STATE_SET "repeat_events" 0.0;
			target:  "event_block_layer";
		}
		program {
			name:    "slide_left";
			signal:  "elm,state,slide,passive";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "event_block_layer";
			after:   "slide_left2";
		}
		program {
			name:    "slide_left2";
			action:  STATE_SET "default" 0.0;
			target:  "elm.swallow.origin";
			transition: DECELERATE 0.5;
			after:   "slide_left_finished";
		}
		program {
			name:    "slide_left_finished";
			action:  SIGNAL_EMIT "elm,state,slide,passive,finished" "elm";
		}
		program {
			name:    "rotate_on";
			signal:  "elm,state,rotate,active";
			source:  "elm";
			action:  STATE_SET "rotate" 0.0;
			target:  "elm.swallow.origin";
			after:   "rotate_on2";
		}
		program {
			name:    "rotate_on2";
			action:  STATE_SET "rotate" 1.0;
			target:  "elm.swallow.origin";
			transition: LINEAR 0.5;
			after:   "unblock_event";
		}
		program {
			name:    "rotate_off";
			signal:  "elm,state,rotate,passive";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "event_block_layer";
			after:   "rotate_off2";
		}
		program {
			name:    "rotate_off2";
			action:  STATE_SET "rotate" 0.0;
			transition: LINEAR 0.5;
			target:  "elm.swallow.origin";
			after:   "rotate_off3";
		}
		program {
			name:    "rotate_off3";
			action:  STATE_SET "default" 0.0;
			target:  "elm.swallow.origin";
			after:   "rotate_off_finished";
		}
		program {
			name:    "rotate_off_finished";
			action:  SIGNAL_EMIT "elm,state,rotate,passive,finished" "elm";
		}
	}
}
