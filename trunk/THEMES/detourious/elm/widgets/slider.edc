group { name: "elm/slider/horizontal/default";
	alias: "elm/slider/horizontal/disabled";
	parts {
		part { name: "base";
			mouse_events: 0;
			description { state: "default" 0.0;
				max: 99999 16;
				min: 0 16;
				rel1.to: "elm.swallow.bar";
				rel2.to: "elm.swallow.bar";
				rel1.offset: -10 -1;
				rel2.offset: 9 -2;
				image {
					normal: "images/runner_im0.png";
					border: 6 6 0 0;
				}
				fill.smooth: 0;
			}
		}
		part { name: "level";
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				rel1.to: "base";
				rel2 {
					to_y: "base";
					to_x: "elm.dragable.slider";
					relative: 0.5 1.0;
				}
				image {
					normal: "images/runner_im2.png";
					border: 6 6 0 0;
				}
				color: COLOR_SELECTED;
			}
			description { state: "inverted" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: COLOR_SELECTED_FADE;
			}
			description { state: "disabled_inverted" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "level2";
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				visible: 0;
				rel1 {
					to_y: "base";
					to_x: "elm.dragable.slider";
					relative: 0.5 0.0;
				}
				rel2.to: "base";
				image {
					normal: "images/runner_im2.png";
					border: 6 6 0 0;
				}
				color: COLOR_SELECTED;
			}
			description { state: "inverted" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: COLOR_SELECTED_FADE;
			}
			description { state: "disabled_inverted" 0.0;
				inherit: "default" 0.0;
				color: COLOR_SELECTED_FADE;
				visible: 1;
			}
		}
		/* part { name: "bg";
		 * 	type: RECT;
		 * 	mouse_events: 0;
		 * 	scale: 1;
		 * 	description { state: "default" 0.0;
		 * 		visible: 0;
		 * 		rel1.to: "elm.swallow.bar";
		 * 		rel2.to: "elm.swallow.bar";
		 * 		color: 0 0 0 0;
		 * 	}
		 * } */
		part { name: "elm.swallow.bar";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				min: 68 24;
				max: 99999 24;
				align: 0.0 0.5;
				rel1 {
					to_x: "elm.text";
					relative: 1.0 0.0;
					offset: 28 0;
				}
				rel2 {
					to_x: "elm.units";
					relative: 0.0 1.0;
					offset: -30 -1;
				}
			}
		}
		part { name: "elm.swallow.icon";
			type: SWALLOW;
			description { state: "default" 0.0;
				visible: 0;
				align: 0.0 0.5;
				rel1 {
					offset: 4 0;
					to_y: "elm.swallow.bar";
				}
				rel2 {
					offset: 3 -1;
					relative: 0.0 1.0;
					to_y: "elm.swallow.bar";
				}
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel2.offset: 4 -1;
			}
		}
		part { name: "elm.text";
			type: TEXT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 0.0 0.5;
				rel1.to_x: "elm.swallow.icon";
				rel1.relative: 1.0 0.0;
				rel1.offset: -1 4;
				rel2.to_x: "elm.swallow.icon";
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -5;
				TEXT_COLOR;
				TEXT_NORMAL("", 0.0 0.5, 0 0);
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				text.min: 1 1;
				rel1.offset: 0 4;
				rel2.offset: 0 -5;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 128 128 128;
				visible: 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
				visible: 1;
				text.min: 1 1;
			}
		}
		part {
			name: "elm.swallow.end";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				visible: 0;
				align: 1.0 0.5;
				rel1 {
					offset: -4 0;
					relative: 1.0 0.0;
					to_y: "elm.swallow.bar";
				}
				rel2 {
					offset: -3 -1;
					to_y: "elm.swallow.bar";
				}
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel2.offset: -4 -1;
			}
		}
		part { name: "units";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				rel1 {
					to_x: "elm.units";
					offset: -5 0;
				}
				rel2 {
					to_x: "elm.units";
					offset: 5 -1;
				}
				image {
					normal: "images/entry_im0.png";
					border: 6 6 8 7;
				}
				fill.smooth: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "elm.units";
			type: TEXT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 1.0 0.5;
				rel1.to_x: "elm.swallow.end";
				rel1.relative: 0.0 0.0;
				rel1.offset: 0 8;
				rel2.to_x: "elm.swallow.end";
				rel2.relative: 0.0 1.0;
				rel2.offset: 0 -9;
				TEXT_COLOR;
				TEXT_NORMAL("", 0.0 0.5, 0 0);
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				fixed: 1 1;
				visible: 1;
				text.min: 1 1;
				rel1.offset: -5 0;
				rel2.offset: -5 -1;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 128 128 128;
				visible: 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
				visible: 1;
				text.min: 1 1;
			}
		}
		part { name: "elm.dragable.slider";
			type: GROUP;
			source: "elm/slider/horizontal/indicator/default";
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "elm.swallow.bar";
			}
			description { state: "default" 0.0;
				min: 0 24;
				max: 0 24;
				fixed: 1 1;
				rel1.to_x: "elm.swallow.bar";
				rel2.to_x: "elm.swallow.bar";
				color: 255 0 0 100;
			}
		}
		part { name: "disabler";
			type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program { name: "text_show";
			signal: "elm,state,text,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.text";
		}
		program { name: "text_hide";
			signal: "elm,state,text,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program { name: "icon_show";
			signal: "elm,state,icon,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.swallow.icon";
		}
		program { name: "icon_hide";
			signal: "elm,state,icon,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.swallow.icon";
		}
		program { name: "end_show";
			signal: "elm,state,end,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.swallow.end";
		}
		program { name: "end_hide";
			signal: "elm,state,end,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.swallow.end";
		}
		program { name: "units_show";
			signal: "elm,state,units,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.units";
			target: "units";
		}
		program { name: "units_hide";
			signal: "elm,state,units,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.units";
			target: "units";
		}
		program { name: "invert_on";
			signal: "elm,state,inverted,on";
			source: "elm";
			action:  STATE_SET "inverted" 0.0;
			target: "level";
			target: "level2";
		}
		program { name: "invert_off";
			signal: "elm,state,inverted,off";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "level";
			target: "level2";
		}
		program {
			name:    "go_disabled";
			signal:  "elm,state,disabled";
			source:  "elm";
			action:  STATE_SET "disabled" 0.0;
			//            target: "button0";
			target: "disabler";
			after: "disable_text";
			after: "disable_ind";
		}

		program { name: "disable_ind";
			action: SIGNAL_EMIT "elm.dragable.slider:elm,state,disabled" "elm";
		}
		program { name: "disable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
				else
					set_state(PART:"elm.text", "disabled", 0.0);

				get_state(PART:"elm.units", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.units", "disabled_visible", 0.0);
				else
					set_state(PART:"elm.units", "disabled", 0.0);

				get_state(PART:"level2", st, 30, vl);
				if (!strcmp(st, "inverted"))
					{
						set_state(PART:"level", "disabled_inverted", 0.0);
						set_state(PART:"level2", "disabled_inverted", 0.0);
					}
				else
					{
						set_state(PART:"level", "disabled", 0.0);
						set_state(PART:"level2", "disabled", 0.0);
					}
			}
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			//            target: "button0";
			target: "disabler";
			after: "enable_text";
			after: "enable_ind";
		}

		program { name: "enable_ind";
			action: SIGNAL_EMIT "elm.dragable.slider:elm,state,enabled" "elm";
		}

		program { name: "enable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
				else
					set_state(PART:"elm.text", "default", 0.0);

				get_state(PART:"elm.units", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.units", "visible", 0.0);
				else
					set_state(PART:"elm.units", "default", 0.0);

				get_state(PART:"level2", st, 30, vl);
				if (!strcmp(st, "disabled_inverted"))
					{
						set_state(PART:"level", "inverted", 0.0);
						set_state(PART:"level2", "inverted", 0.0);
					}
				else
					{
						set_state(PART:"level", "default", 0.0);
						set_state(PART:"level2", "default", 0.0);
					}
			}
		}
	}
}

group { name: "elm/slider/vertical/default";
	parts {
		part { name: "base";
			mouse_events: 0;
			description { state: "default" 0.0;
				max: 16 99999;
				min: 16 0;

				rel1.to: "elm.swallow.bar";
				rel2.to: "elm.swallow.bar";
				rel1.offset: -1 -10;
				rel2.offset: -2  9;
				image {
					normal: "images/runner_im1.png";
					border: 0 0 6 6;
				}
				fill.smooth: 0;
			}
		}
		part { name: "level";
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				rel1.to: "base";
				rel2 {
					to_x: "base";
					to_y: "elm.dragable.slider";
					relative: 1.0 0.5;
				}
				image {
					normal: "images/runner_im3.png";
					border: 6 6 0 0;
				}
				color: COLOR_SELECTED;
			}
			description { state: "inverted" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: COLOR_SELECTED_FADE;
			}
			description { state: "disabled_inverted" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "level2";
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				visible: 0;
				rel1 {
					to_x: "base";
					to_y: "elm.dragable.slider";
					relative: 0.0 0.5;
				}
				rel2.to: "base";
				image {
					normal: "images/runner_im3.png";
					border: 6 6 0 0;
				}
				color: COLOR_SELECTED;
			}
			description { state: "inverted" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
			description { state: "disabled_inverted" 0.0;
				inherit: "default" 0.0;
				color: COLOR_SELECTED_FADE;
				visible: 1;
			}
		}
		part { name: "elm.swallow.bar";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				min: 24 68;
				max: 24 9999;
				align: 0.5 0.0;
				rel1 {
					to_y: "elm.text";
					relative: 0.0 1.0;
					offset: 0 28;
				}
				rel2 {
					to_y: "elm.units";
					relative: 1.0 0.0;
					offset: -1 -30;
				}
			}
		}
		part { name: "elm.swallow.icon";
			type: SWALLOW;
			description { state: "default" 0.0;
				visible: 0;
				align: 0.5 0.0;
				rel1 {
					offset: 0 4;
					to_x: "elm.swallow.bar";
				}
				rel2 {
					offset: -1 3;
					relative: 1.0 0.0;
					to_x: "elm.swallow.bar";
				}
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				rel2.offset: -1 4;
			}
		}
		part { name: "elm.text";
			type: TEXT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 0 1;
				align: 0.5 0.0;
				rel1.to_y: "elm.swallow.icon";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 -1;
				rel2.to_y: "elm.swallow.icon";
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -1;
				TEXT_COLOR;
				TEXT_NORMAL("", 0.5 0.0, 0 0);
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				text.min: 1 1;
				rel1.offset: 4 0;
				rel2.offset: -5 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 128 128 128;
				visible: 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
				color3: 0 0 0 0;
				visible: 1;
				text.min: 1 1;
			}
		}
		part {
			name: "elm.swallow.end";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				visible: 0;
				align: 0.5 1.0;
				rel1 {
					offset: 0 -4;
					relative: 0.0 1.0;
					to_x: "elm.swallow.bar";
				}
				rel2 {
					offset: -1 -3;
					to_x: "elm.swallow.bar";
				}
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				rel2.offset: -1 -4;
			}
		}
		part { name: "units";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				rel1 {
					to: "elm.units";
					offset: -8 -5;
				}
				rel2 {
					to: "elm.units";
					offset: 7 4;
				}
				image {
					normal: "images/entry_im0.png";
					border: 6 6 8 7;
				}
				fill.smooth: 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "elm.units";
			type: TEXT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				fixed: 1 1;
				align: 0.5 1.0;
				rel1.relative: 0.5 0.0;
				rel1.to_y: "elm.swallow.end";
				rel1.offset: 8 0;
				rel2.relative: 0.5 0.0;
				rel2.to_y: "elm.swallow.end";
				rel2.offset: -9 0;
				TEXT_COLOR;
				TEXT_NORMAL("", 0.5 0.0, 1 0);
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				fixed: 1 1;
				visible: 1;
				text.min: 1 1;
				rel1.offset: 8 -9;
				rel2.offset: -9 -9;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color:  0 0 0 128;
				color3: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				fixed: 1 1;
				visible: 1;
				text.min: 1 1;
				rel1.offset: 8 -9;
				rel2.offset: -9 -9;
				color: 0 0 0 128;
				color3: 0 0 0 0;
			}
		}
		part { name: "elm.dragable.slider";
			type: GROUP;
			source: "elm/slider/vertical/indicator/default";
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			dragable {
				x: 0 0 0;
				y: 1 1 0;
				confine: "elm.swallow.bar";
			}
			description { state: "default" 0.0;
				min: 24 0;
				max: 24 0;
				fixed: 1 1;
				rel1.to_y: "elm.swallow.bar";
				rel2.to_y: "elm.swallow.bar";
				color: 0 0 0 0;
			}
		}
		part { name: "disabler";
			type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}

	programs {
		program { name: "text_show";
			signal: "elm,state,text,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.text";
		}
		program { name: "text_hide";
			signal: "elm,state,text,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program { name: "icon_show";
			signal: "elm,state,icon,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.swallow.icon";
		}
		program { name: "icon_hide";
			signal: "elm,state,icon,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.swallow.icon";
		}
		program { name: "end_show";
			signal: "elm,state,end,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.swallow.end";
		}
		program { name: "end_hide";
			signal: "elm,state,end,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.swallow.end";
		}
		program { name: "units_show";
			signal: "elm,state,units,visible";
			source: "elm";
			action:  STATE_SET "visible" 0.0;
			target: "elm.units";
			target: "units";
		}
		program { name: "units_hide";
			signal: "elm,state,units,hidden";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "elm.units";
			target: "units";
		}
		program { name: "invert_on";
			signal: "elm,state,inverted,on";
			source: "elm";
			action:  STATE_SET "inverted" 0.0;
			target: "level";
			target: "level2";
		}
		program { name: "invert_off";
			signal: "elm,state,inverted,off";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "level";
			target: "level2";
		}
		program {
			name:   "go_disabled";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			//            target: "button0";
			target: "disabler";
			after: "disable_text";
			after: "disable_ind";
		}

		program { name: "disable_ind";
			action: SIGNAL_EMIT "elm.dragable.slider:elm,state,disabled" "elm";
		}

		program { name: "disable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
				else
					set_state(PART:"elm.text", "disabled", 0.0);

				get_state(PART:"elm.units", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.units", "disabled_visible", 0.0);
				else
					set_state(PART:"elm.units", "disabled", 0.0);

				get_state(PART:"level2", st, 30, vl);
				if (!strcmp(st, "inverted"))
					{
						set_state(PART:"level", "disabled_inverted", 0.0);
						set_state(PART:"level2", "disabled_inverted", 0.0);
					}
				else
					{
						set_state(PART:"level", "disabled", 0.0);
						set_state(PART:"level2", "disabled", 0.0);
					}
			}
		}

		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			//            target: "button0";
			target: "disabler";
			after: "enable_text";
			after: "enable_ind";
		}

		program { name: "enable_ind";
			action: SIGNAL_EMIT "elm.dragable.slider:elm,state,enabled" "elm";
		}
		program { name: "enable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.text", "visible", 0.0);
				else
					set_state(PART:"elm.text", "default", 0.0);

				get_state(PART:"elm.units", st, 30, vl);
				if (!strcmp(st, "disabled_visible"))
					set_state(PART:"elm.units", "visible", 0.0);
				else
					set_state(PART:"elm.units", "default", 0.0);

				get_state(PART:"level2", st, 30, vl);
				if (!strcmp(st, "disabled_inverted"))
					{
						set_state(PART:"level", "inverted", 0.0);
						set_state(PART:"level2", "inverted", 0.0);
					}
				else
					{
						set_state(PART:"level", "default", 0.0);
						set_state(PART:"level2", "default", 0.0);
					}
			}
		}
	}
}
group { name: "elm/slider/horizontal/indicator/default";
	alias: "elm/slider/horizontal/indicator/disabled";

	/* script { */
	/* 	public value_hide = 0;
	 * 	public set_value_show() {
	 * 		set_int(value_hide, 0);
	 * 	}
	 * 	public set_value_hide() {
	 * 		set_int(value_hide, 1);
	 * 	}
	 * 	public thumb_down() {
	 * 		if (get_int(value_hide) == 1) {
	 * 			set_state(PART:"elm.indicator", "default", 0.0);
	 * 			set_state(PART:"button3", "default", 0.0);
	 * 			set_state(PART:"button4", "default", 0.0);
	 * 			set_state(PART:"button5", "default", 0.0);
	 * 			set_state(PART:"button6", "default", 0.0);
	 * 			set_state(PART:"button7", "default", 0.0);
	 * 		} else {
	 * 			set_state(PART:"elm.indicator", "visible", 0.0);
	 * 			set_state(PART:"button3", "visible", 0.0);
	 * 			set_state(PART:"button4", "visible", 0.0);
	 * 			set_state(PART:"button5", "visible", 0.0);
	 * 			set_state(PART:"button6", "visible", 0.0);
	 * 			set_state(PART:"button7", "visible", 0.0);
	 * 		}
	 * 	}
	 * 	public thumb_up() {
	 * 		set_state(PART:"elm.indicator", "default", 0.0);
	 * 		set_state(PART:"button3", "default", 0.0);
	 * 		set_state(PART:"button4", "default", 0.0);
	 * 		set_state(PART:"button5", "default", 0.0);
	 * 		set_state(PART:"button6", "default", 0.0);
	 * 		set_state(PART:"button7", "default", 0.0);
	 * 	}
	 * } */
	parts {
		part { name: "button_events";
			type: RECT;
			mouse_events: 1;
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 16 16;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
			}
		}

		part {
			name: "slider_image_shadow";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1 { 
					to: "slider_image"; 
					offset: 1 -1; 
				}
				rel2 { 
					to: "slider_image"; 
					offset: -2 -1; 
				}
				image {
					normal: "images/slider_im1.png";
					border: 7 8 7 7;
				}
			}
		}
		part {
			name: "slider_image";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 29 17;
				max: 29 17;
				fixed: 1 1;
				image {
					normal: "images/slider_im0.png";
				}
			}
			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
		}
		part {
			name: "catch";
			type: RECT;
			mouse_events: 1;

			description {
				state: "default" 0.0;
				visible: 0;
				color: 0 0 0 0;
			}
	
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		/* program { name: "set_val_show";
		 * 	signal: "elm,state,val,show";
		 * 	source: "elm";
		 * 	script {
		 * 		set_value_show();
		 * 	}
		 * }
		 * program { name: "set_val_hide";
		 * 	signal: "elm,state,val,hide";
		 * 	source: "elm";
		 * 	script {
		 * 		set_value_hide();
		 * 	}
		 * } */
		program { name: "val_show";
			signal: "mouse,down,*";
			source: "button_events";
			transition: DECELERATE 0.25;
			action:  STATE_SET "clicked" 0.0;
			target:  "slider_image";
			/* script {
			 * 	thumb_down();
			 * } */
		
		}
		program { name: "val_hide";
			signal: "mouse,up,*";
			source: "button_events";
			transition: DECELERATE 0.25;
			action:  STATE_SET "default" 0.0;
			target:  "slider_image";
			/* script {
			 * 	thumb_up();
			 * } */

		}
		program {
			name:    "go_disabled";
			signal:  "elm,state,disabled";
			source:  "elm";
			action:  STATE_SET "disabled" 0.0;
			target:  "slider_image";
			target:  "catch";
		}
		program {
			name:    "go_enabled";
			signal:  "elm,state,enabled";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "slider_image";
			target:  "catch";
		}
	}
}


group { name: "elm/slider/vertical/indicator/default";
	alias: "elm/slider/vertical/indicator/disabled";

	parts {
		part { name: "button_events";
			type: RECT;
			mouse_events: 1;
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 16 16;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
			}
		}

		part {
			name: "slider_image_shadow";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1 { 
					to: "slider_image"; 
					offset: 0 1; 
				}
				rel2 { 
					to: "slider_image"; 
					offset: -1 0; 
				}
				image {
					normal: "images/slider_im3.png";
					border: 7 7 7 7;
				}
			}
		}
		part {
			name: "slider_image";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 17 29;
				max: 17 29;
				fixed: 1 1;
				image {
					normal: "images/slider_im2.png";
				}
			}
			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
		}
		part {
			name: "catch";
			type: RECT;
			mouse_events: 1;

			description {
				state: "default" 0.0;
				visible: 0;
				color: 0 0 0 0;
			}
	
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program { name: "val_show";
			signal: "mouse,down,*";
			source: "button_events";
			transition: DECELERATE 0.25;
			action:  STATE_SET "clicked" 0.0;
			target:  "slider_image";
		
		}
		program { name: "val_hide";
			signal: "mouse,up,*";
			source: "button_events";
			transition: DECELERATE 0.25;
			action:  STATE_SET "default" 0.0;
			target:  "slider_image";
		}
		program {
			name:    "go_disabled";
			signal:  "elm,state,disabled";
			source:  "elm";
			action:  STATE_SET "disabled" 0.0;
			target:  "slider_image";
			target:  "catch";
		}
		program {
			name:    "go_enabled";
			signal:  "elm,state,enabled";
			source:  "elm";
			action:  STATE_SET "default" 0.0;
			target:  "slider_image";
			target:  "catch";
		}
	}
}


