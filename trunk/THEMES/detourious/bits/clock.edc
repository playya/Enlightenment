
group {
	name: "e/modules/clock/main";
	/* min: 64 64;
	 * max: 170 170; */

	script {
		public clock_cb(val) {
		new buf[11];
		new year, month, day, yearday, weekday, hour, minute;
		new Float:second;
		new v;

		date(year, month, day, yearday, weekday, hour, minute, second);
		v = round(second);
		timer(1.0 - (second - v), "clock_cb", 1);
		buf[0] = 0; 
		if (v < 10) {snprintf(buf, 10, "0%i", v);}
		else {snprintf(buf, 10, "%i", v);}
		set_state(PART:"seconds", buf, 0.0);
		v = minute;
		buf[0] = 0; 
		if (v < 10) {snprintf(buf, 10, "0%i", v);}
		else {snprintf(buf, 10, "%i", v);}
		set_state(PART:"minutes", buf, 0.0);
		v = ((hour % 12) * 5) + ((minute * 5) / 60);
		buf[0] = 0; 
		if (v < 10) {snprintf(buf, 10, "0%i", v);}
		else {snprintf(buf, 10, "%i", v);}
		set_state(PART:"hour", buf, 0.0);
		}
	}

	parts {
		part {
			name: "center";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 0 0 0;

				rel1 { 
					offset: 0 0; 
				}

				rel2 { 
					offset: -1 -1; 
				}
			}
		}

		part {
			name: "clock";
			type: IMAGE;

			description {
				state: "default" 0.0;
				image.normal: "clock/clock_bg.png";
				aspect: 1.0 1.0;
				aspect_preference: BOTH;

				rel1 { 
					to: "center"; 
					relative: 0.1 0.1; 
				}

				rel2 { 
					to: "center"; 
					relative: 0.9 0.9; 
				}
			}
		}

		# ifdef HAND_DESC
		#  undef HAND_DESC
		# endif
		# define HAND_DESC(IND,num) \
			description { \
				state: num 0.0; \
				inherit: "default" 0.0; \
				image { \
					normal: "clock/"IND"."cursor"."num".png"; \
				} \
			}

		#define HAND_PART(IND, COLOR) \
		part { \
			name: IND; \
			type: IMAGE; \
			mouse_events: 0; \
			description { \
				state: "default" 0.0; \
				align: 0.5 0.5; \
				aspect: 1.0 1.0; \
				aspect_preference: BOTH; \
				visible: 1; \
				color: COLOR; \
				rel1 { \
					to: "center"; \
					relative: 0.0 0.0; \
				} \
				rel2 { \
					to: "center"; \
					relative: 1.0 1.0; \
				} \
				image { \
					normal: "clock/"IND"."cursor".00.png"; \
				} \
			} \
			HAND_DESC(IND,"00") \
			HAND_DESC(IND,"01") \
			HAND_DESC(IND,"02") \
			HAND_DESC(IND,"03") \
			HAND_DESC(IND,"04") \
			HAND_DESC(IND,"05") \
			HAND_DESC(IND,"06") \
			HAND_DESC(IND,"07") \
			HAND_DESC(IND,"08") \
			HAND_DESC(IND,"09") \
			HAND_DESC(IND,"10") \
			HAND_DESC(IND,"11") \
			HAND_DESC(IND,"12") \
			HAND_DESC(IND,"13") \
			HAND_DESC(IND,"14") \
			HAND_DESC(IND,"15") \
			HAND_DESC(IND,"16") \
			HAND_DESC(IND,"17") \
			HAND_DESC(IND,"18") \
			HAND_DESC(IND,"19") \
			HAND_DESC(IND,"20") \
			HAND_DESC(IND,"21") \
			HAND_DESC(IND,"22") \
			HAND_DESC(IND,"23") \
			HAND_DESC(IND,"24") \
			HAND_DESC(IND,"25") \
			HAND_DESC(IND,"26") \
			HAND_DESC(IND,"27") \
			HAND_DESC(IND,"28") \
			HAND_DESC(IND,"29") \
			HAND_DESC(IND,"30") \
			HAND_DESC(IND,"31") \
			HAND_DESC(IND,"32") \
			HAND_DESC(IND,"33") \
			HAND_DESC(IND,"34") \
			HAND_DESC(IND,"35") \
			HAND_DESC(IND,"36") \
			HAND_DESC(IND,"37") \
			HAND_DESC(IND,"38") \
			HAND_DESC(IND,"39") \
			HAND_DESC(IND,"40") \
			HAND_DESC(IND,"41") \
			HAND_DESC(IND,"42") \
			HAND_DESC(IND,"43") \
			HAND_DESC(IND,"44") \
			HAND_DESC(IND,"45") \
			HAND_DESC(IND,"46") \
			HAND_DESC(IND,"47") \
			HAND_DESC(IND,"48") \
			HAND_DESC(IND,"49") \
			HAND_DESC(IND,"50") \
			HAND_DESC(IND,"51") \
			HAND_DESC(IND,"52") \
			HAND_DESC(IND,"53") \
			HAND_DESC(IND,"54") \
			HAND_DESC(IND,"55") \
			HAND_DESC(IND,"56") \
			HAND_DESC(IND,"57") \
			HAND_DESC(IND,"58") \
			HAND_DESC(IND,"59") \
		}

		HAND_PART("seconds", 255 255 255 255)
		HAND_PART("minutes", 255 255 255 255)
		HAND_PART("hour", 255 255 255 255)
	}

	programs {
		program {
			name: "init";
			signal: "load";
			source: "";
			script {
				clock_cb(0);
			}
		}
	}
}

group { name: "e/modules/clock/digital";
	min: 38 16;

	script {
		public do_seconds, do_24h, tick_timer;

		public clock_cb(val) {
			new year, month, day, yearday, weekday, hour, minute;
			new Float:second;
			new v, dosec, do24h, tim;
			new buf[32], bhour[3], bminute[3], bsecond[4], bampm[3];

			date(year, month, day, yearday, weekday, hour, minute, second);

			dosec = get_int(do_seconds);
			do24h = get_int(do_24h);

			if (do24h) {
				strcat(bampm, "");
				if (hour < 10)
					snprintf(bhour, sizeof(bhour), "0%d", hour);
				else
					snprintf(bhour, sizeof(bhour), "%d", hour);

			} else {
				v = hour % 12;

				if (hour >= 12)
					strcat(bampm, "pm");
				else
					strcat(bampm, "am");

				if (v == 0)
					v = 12;

				if (v < 10)
					snprintf(bhour, sizeof(bhour), "0%d", v);
				else
					snprintf(bhour, sizeof(bhour), "%d", v);
			}

			if (minute < 10)
				snprintf(bminute, sizeof(bminute), "0%d", minute);
			else
				snprintf(bminute, sizeof(bminute), "%d", minute);

			if (dosec) {
				v = round(second);
				if (v < 10)
					snprintf(bsecond, sizeof(bsecond), ":0%d", v);
				else
					snprintf(bsecond, sizeof(bsecond), ":%d", v);
			} else
				strcat(bsecond, "");

			snprintf(buf, sizeof(buf), "%s:%s%s%s",
			         bhour, bminute, bsecond, bampm);
			set_text(PART:"time", buf);

			if (dosec) {
				v = round(second);
				tim = timer(1.0 - (second - v), "clock_cb", 1);
			} else {
				tim = timer(60.0 - (second), "clock_cb", 1);
			}
			set_int(tick_timer, tim);
		}

		public restart_clock() {
			new tim;
			tim = get_int(tick_timer);
			if (tim) {
				cancel_timer(tim);
				set_int(tick_timer, 0);
			}
			clock_cb(0);
		}

		public eval_show_date() {
			new x, y, w, h;
			get_geometry(PART:"event", x, y, w, h);
			if (h >= 32)
				emit("today,show", "");
			else
				emit("today,hide", "");
		}
	}

	parts {
		part { name: "time";
			type: TEXT;
			effect: SHADOW;
			description { state: "default" 0.0;
				TEXT_COLOR
				text {
					text_class: "clock";
					font: FONT;
					size: 14;
					fit: 1 1;
					min: 1 1;
					size_range: 9 72;
					text: "--:--";
				}
			}
			description { state: "show-date" 0.0;
				inherit: "default" 0.0;
				rel2 {
					relative: 1.0 0.0;
					to: "e.text.today";
				}
			}
		}
		part { name: "e.text.today";
			type: TEXT;
			effect: SHADOW;
			description { state: "default" 0.0;
				TEXT_COLOR
				align: 0.5 1.0;
				min: 0 8;
				max: 9999 30;
				rel1 {
					relative: 0.0 0.9;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -1 -1;
				}
				text {
					text_class: "clock";
					font: FONT;
					size: 9;
					fit: 0 1;
					min: 1 1;
					size_range: 8 12;
					align: 0.5 1.0;
					text: "Tod, 12/30/2011";
				}
				visible: 0;
			}
			description { state: "show-date" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part { name: "event";
			type: RECT;
			mouse_events: 1;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}

	programs {
		program { name: "init";
			signal: "load";
			source: "";
			script {
				clock_cb(0);
				eval_show_date();
			}
		}
		program { name: "resize";
			signal: "resize";
			source: "";
			script {
				eval_show_date();
			}
		}
		program { name: "today,show";
			signal: "today,show";
			source: "";
			action: STATE_SET "show-date" 0.0;
			target: "time";
			target: "e.text.today";
		}
		program { name: "today,hide";
			signal: "today,hide";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "time";
			target: "e.text.today";
		}

		program { name: "secon";
			signal: "e,state,seconds,on";
			source: "e";
			script {
				set_int(do_seconds, 1);
				restart_clock();
			}
		}
		program { name: "secoff";
			signal: "e,state,seconds,off";
			source: "e";
			script {
				set_int(do_seconds, 0);
				restart_clock();
			}
		}
		program { name: "24h";
			signal: "e,state,24h,on";
			source: "e";
			script {
				set_int(do_24h, 1);
				restart_clock();
			}
		}
		program { name: "12h";
			signal: "e,state,24h,off";
			source: "e";
			script {
				set_int(do_24h, 0);
				restart_clock();
			}
		}
	}
   }

	group { name: "e/modules/clock/calendar/dayname";
		parts {
			part {
				name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				description { state: "default" 0.0;
					TEXT_COLOR_DISABLED
					align: 0.5 0.5;
					rel1.offset: 3 3;
					rel2.offset: -3 -3;
					text {
						text: "XXX";
						font: FONT;
						align: 0.5 0.5;
						size: 8;
						min: 1 1;
						text_class: "module_small";
					}
				}
			}
		}
	}

	group { name: "e/modules/clock/calendar/day";
		parts {
			part { name: "weekend"; type: RECT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 0 0 0 0;
				}
				description { state: "weekend" 0.0;
					inherit: "default" 0.0;
					color: 0 0 0 32;
				}
			}
			part { name: "day"; type: IMAGE;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 255 255 255 0;
					image {
						normal: "images/check_bt3.png";
						border: 5 5 5 5;
					}
				}
				description { state: "today" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}
			part { name: "e.text.label";
				type: TEXT;
				effect: SHADOW;
				mouse_events: 0;
				description { state: "default" 0.0;
					align: 0.5 0.5;
					TEXT_COLOR
					color3: 0 0 0 0;
					rel1.offset: 4 4;
					rel2.offset: -4 -4;
					text {
						text: "88";
						font: FONT;
						align: 0.5 0.5;
						size: 9;
						min: 1 1;
						text_class: "module_small";
					}
				}
				description { state: "today" 0.0;
					inherit: "default" 0.0;
					text.font: FONT_BOLD;
					TEXT_COLOR
				}
				description { state: "hidden" 0.0;
					inherit: "default" 0.0;
					TEXT_COLOR_DISABLED
					color3: 0 0 0 0;
				}
			}
		}
		programs {
			program { name: "weekend";
				signal: "e,state,weekend";
				source: "e";
				action: STATE_SET "weekend" 0.0;
				target: "weekend";
			}
			program { name: "weekday";
				signal: "e,state,weekday";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "weekend";
			}
			program { name: "hidden";
				signal: "e,state,hidden";
				source: "e";
				action: STATE_SET "hidden" 0.0;
				target: "e.text.label";
			}
			program { name: "visible";
				signal: "e,state,visible";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.text.label";
			}
			program { name: "today";
				signal: "e,state,today";
				source: "e";
				action: STATE_SET "today" 0.0;
				target: "day";
				target: "e.text.label";
			}
			program { name: "someday";
				signal: "e,state,someday";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "day";
			}
		}
	}

	group { name: "e/modules/clock/calendar";
		parts {
			part { name: "e.text.month";
				type: TEXT;
				mouse_events: 1;
				description { state: "default" 0.0;
					color: 139 139 139 255; // same as scrollbar_im6.png
					fixed: 0 1;
					align: 0.0 0.5;
					rel1 {
						to_x: "prev";
						relative: 1.0 0.0;
						offset: 0 10;
					}
					rel2 {
						relative: 1.0 0.0;
						offset: -1 10;
					}
					text {
						font: FONT_BOLD;
						align: 0.0 0.5;
						size: 14;
						min: 0 1;
						text_class: "module_normal";
					}
				}
			}
			part { name: "e.text.year";
				type: TEXT;
				mouse_events: 0;
				description { state: "default" 0.0;
					color: 139 139 139 255; // same as scrollbar_im7.png
					fixed: 0 1;
					align: 1.0 0.5;
					rel1 {
						relative: 0.0 0.0;
						offset: 0 10;
					}
					rel2 {
						to_x: "next";
						relative: 0.0 0.0;
						offset: -1 10;
					}
					text {
						font: FONT_BOLD;
						align: 1.0 0.5;
						size: 14;
						min: 0 1;
						text_class: "module_normal";
					}
				}
			}
			part { name: "previm";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "prev";
						offset: 0 -2;
					}
					rel2 {
						to: "prev";
						offset: -1 -3;
					}
					image.normal: "images/scrollbar_im6.png";
					min: 13 17;
					max: 13 17;
				}
				description { state: "pressed" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}
			part { name: "prev";
				type: RECT;
				description { state: "default" 0.0;
					align: 0.0 0.5;
					color: 0 0 0 0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1 {
						to_y: "e.text.month";
						relative: 0.0 0.0;
					}
					rel2 {
						to_y: "e.text.month";
						relative: 0.0 1.0;
					}
				}
				program { name: "prev_down";
					signal: "mouse,down,1";
					source: "prev";
					action: STATE_SET "pressed" 0.0;
					target: "previm";
				}
				program { name: "prev_up";
					signal: "mouse,up,1";
					source: "prev";
					action: STATE_SET "default" 0.0;
					target: "previm";
				}
				program { name: "prev_clicked";
					signal: "mouse,clicked,1";
					source: "prev";
					action: SIGNAL_EMIT "e,action,prev" "";
				}
			}
			part { name: "nextim";
				mouse_events: 0;
				description { state: "default" 0.0;
					rel1 {
						to: "next";
						offset: 0 -2;
					}
					rel2 {
						to: "next";
						offset: -1 -3;
					}
					image.normal: "images/scrollbar_im7.png";
					min: 13 17;
					max: 13 17;
				}
				description { state: "pressed" 0.0;
					inherit: "default" 0.0;
					rel1.offset: 0 -1;
					rel2.offset: -1 -2;
				}
			}
			part { name: "next";
				type: RECT;
				description { state: "default" 0.0;
					align: 1.0 0.5;
					color: 0 0 0 0;
					aspect: 1.0 1.0;
					aspect_preference: VERTICAL;
					rel1.to_y: "e.text.month";
					rel1.relative: 1.0 0.0;
					rel2.to_y: "e.text.month";
					rel2.relative: 1.0 1.0;
				}
				program { name: "next_down";
					signal: "mouse,down,1";
					source: "next";
					action: STATE_SET "pressed" 0.0;
					target: "nextim";
				}
				program { name: "next_up";
					signal: "mouse,up,1";
					source: "next";
					action: STATE_SET "default" 0.0;
					target: "nextim";
				}
				program { name: "next_clicked";
					signal: "mouse,clicked,1";
					source: "next";
					action: SIGNAL_EMIT "e,action,next" "";
				}
			}
			part { name: "e.table.daynames"; type: TABLE;
				description { state: "default" 0.0;
					fixed: 0 1;
					align: 0.5 0.0;
					rel1.to_y: "e.text.month";
					rel1.relative: 0.0 1.0;
					rel1.offset: 2 2;
					rel2.to_y: "e.text.month";
					rel2.relative: 1.0 1.0;
					rel2.offset: -3 2;
					step: 7 1;
					table {
						homogeneous: TABLE;
						padding: 0 0;
						align: 0.5 0.5;
						min: 1 1;
					}
				}
				table { items {
#define DAYNAME(x)													\
						item {											\
							position: x 0;								\
							span: 1 1;									\
							source: "e/modules/clock/calendar/dayname"; \
							weight: 1.0 1.0;							\
							align: -1.0 -1.0;							\
						}
						DAYNAME(0);
						DAYNAME(1);
						DAYNAME(2);
						DAYNAME(3);
						DAYNAME(4);
						DAYNAME(5);
						DAYNAME(6);
					} }
			}
#undef DAYNAME
			part { name: "e.table.days"; type: TABLE;
				description { state: "default" 0.0;
					rel1.to_y: "e.table.daynames";
					rel1.relative: 0.0 1.0;
					rel1.offset: 2 2;
					rel2.offset: -3 -3;
					step: 7 5;
					table {
						homogeneous: TABLE;
						padding: 0 0;
						align: 0.5 0.5;
						min: 1 1;
					}
				}
				table { items {
#define DAY(x, y)												\
						item {										\
							position: x y;							\
							span: 1 1;								\
							source: "e/modules/clock/calendar/day"; \
							weight: 1.0 1.0;						\
							align: -1.0 -1.0;						\
						}
						DAY(0, 0);
						DAY(1, 0);
						DAY(2, 0);
						DAY(3, 0);
						DAY(4, 0);
						DAY(5, 0);
						DAY(6, 0);

						DAY(0, 1);
						DAY(1, 1);
						DAY(2, 1);
						DAY(3, 1);
						DAY(4, 1);
						DAY(5, 1);
						DAY(6, 1);

						DAY(0, 2);
						DAY(1, 2);
						DAY(2, 2);
						DAY(3, 2);
						DAY(4, 2);
						DAY(5, 2);
						DAY(6, 2);

						DAY(0, 3);
						DAY(1, 3);
						DAY(2, 3);
						DAY(3, 3);
						DAY(4, 3);
						DAY(5, 3);
						DAY(6, 3);

						DAY(0, 4);
						DAY(1, 4);
						DAY(2, 4);
						DAY(3, 4);
						DAY(4, 4);
						DAY(5, 4);
						DAY(6, 4);

						DAY(0, 5);
						DAY(1, 5);
						DAY(2, 5);
						DAY(3, 5);
						DAY(4, 5);
						DAY(5, 5);
						DAY(6, 5);
					} }
			}
		}
		programs {
			program {
				name: "mw_next";
				source: "*";
				signal: "mouse,wheel,0,-1";
				action: SIGNAL_EMIT "e,action,prev" "";
			}
			program {
				name: "mw_right";
				source: "*";
				signal: "mouse,wheel,0,1";
				action: SIGNAL_EMIT "e,action,next" "";
			}
		}
	}
