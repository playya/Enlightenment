#!/usr/bin/env python

"""		ARDY - 1.0
			Ardy is a small bridge program that turns an Edje file into an Arduino
			controller. Its made to interface an interactive gui to the hardware
			that can be accessed by the Arduino board.
			
			It was tested and developed on an Arduino Duemilanove.
			Speed used was 9600 on /dev/ttyUSB0. It should work on anything.
			
			This software is provided under a Beerware license. 
			If you like it, email me and Ill let you know where you can
			send me beer, or beer money. Additionally, extra features
			can be requested with the sending of beer, or beer money.
			
			Legally; you can do whatever the hell you want with it.
			Hope you like it!
			Toma.  (tomhaste at gmail dot com)
			
"""
import ecore.evas
import ecore
import edje
import sys
import os
import serial

#Setup Window
if len(sys.argv) < 4:
	print 'Usage: ardy [Edje File] [Serial Device] [Serial Speed]'
	sys.exit(1)
w, h = 300, 350
buf = ""
ser = serial.Serial(sys.argv[2], sys.argv[3], timeout=0)
ee = ecore.evas.SoftwareX11(w=w, h=h)
ee.title = "Ardy"
canvas = ee.evas
edje_file = os.path.join(os.path.dirname(sys.argv[0]), sys.argv[1])

#Setup Edje Groups
try:
   main = edje.Edje(canvas, file=edje_file, group="Arduino")
except Exception, e:
   raise SystemExit("Failed to load Arduino edje file: %s" % edje_file)
main.size = canvas.size
main.show()
ee.data["main"] = main

#Send into Edje
def emitter(sig):
	main.signal_emit(sig, "arduino")

def serialread(fdh, ser):
	buf = ser.read(1)	#Only 1 byte is needed for reliability
	emitter(buf)
	#print buf			# Enable for debug
	return 1
	
#Read the Edje
def pressed(button, signal, source):
	ser.write(source)

#Sender
main.signal_callback_add("clicked", "*", pressed)
#Receiver
ecore.fd_handler_add(ser.fileno(), ecore.ECORE_FD_READ, serialread, ser)

#Make it resize
def resize(ee):
   r = ee.evas.rect
   ee.data["main"].size = r.size

ee.callback_resize = resize

#Clean up on quit
def quit(ee):
   ecore.main_loop_quit()

ee.callback_delete_request_set(quit)

#Launch!
ee.show()
ecore.main_loop_begin()
