images {
   image: "sticky.png" COMP;
   image: "button_up.png" COMP;
   image: "button_over.png" COMP;
   image: "button_down.png" COMP;
   image: "button_toggled.png" COMP;
   image: "preview.png" COMP;
   image: "button_close.png" COMP;
   image: "button_lock.png" COMP;
   image: "button_stick.png" COMP;
}

collections {
   group {
      name: "base";
      data {
	 item: "inset" "11 11 11 11";
      }
      parts {
	/*
	 * BACKGROUND PART
	 */
	 part {
	    name: "background";
	    mouse_events: 1;
	    description {
	       state: "default" 0.0;
	       rel1 {
		  relative: 0 0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       image {
		  normal: "sticky.png";
		  border: 11 11 11 11;
	       }
	    }
	 }
	/*
	 * STICKY TOGGLE PART
	 */
         part { name: "stick_toggle_bg";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.1 0.05;
		  to: "background";
	       }
	       rel2 {
		  relative: 0.2 0.15;
		  to: "background";
	       }
	       align: 0.0 0.5;
	       min: 16 16;
	       max: 16 16;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
               image.normal: "button_up.png";
               fill.smooth : 0;
	    }
	    description { state: "toggled" 0.0;
	       inherit: "default" 0.0;
               image.normal: "button_toggled.png";
            }
	 }
         part { name: "stick_toggle_over";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  to: "stick_toggle_bg";
               }
               rel2 {
                  to: "stick_toggle_bg";
               }
               color: 255 255 255 255;
               image.normal: "button_stick.png";
	    }
	 }
         part { name: "stick_toggle_events";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       rel1.to: "stick_toggle_bg";
	       rel2.to: "stick_toggle_bg";
	       color: 0 0 0 0;
	    }
	 }
	/*
	 * LOCK TOGGLE PART
	 */
         part { name: "lock_toggle_bg";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.2 0.05;
		  to: "background";
	       }
	       rel2 {
		  relative: 0.3 0.15;
		  to: "background";
	       }
	       align: 0.0 0.5;
	       min: 16 16;
	       max: 16 16;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
               image.normal: "button_up.png";
               fill.smooth : 0;
	    }
	    description { state: "toggled" 0.0;
	       inherit: "default" 0.0;
               image.normal: "button_toggled.png";
            }
	 }
         part { name: "lock_toggle_over";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  to: "lock_toggle_bg";
               }
               rel2 {
                  to: "lock_toggle_bg";
               }
               color: 255 255 255 255;
               image.normal: "button_lock.png";
	    }
	 }
         part { name: "lock_toggle_events";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       rel1.to: "lock_toggle_bg";
	       rel2.to: "lock_toggle_bg";
	       color: 0 0 0 0;
	    }
	 }
	/*
	 * DELETE BUTTON PART
	 */
	 part { name: "close_button_bg";
	    mouse_events: 1;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.3 0.05;
		  to: "background";
	       }
	       rel2 {
		  relative: 0.4 0.15;
		  to: "background";
	       }
	       align: 0.0 0.5;
	       min: 16 16;
	       max: 16 16;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
               image.normal: "button_up.png";
               fill.smooth : 0;
	    }
	    description { state: "toggled" 0.0;
	       inherit: "default" 0.0;
               image.normal: "button_toggled.png";
            }
	 }
         part { name: "close_button_over";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
               rel1 {
                  to: "close_button_bg";
               }
               rel2 {
                  to: "close_button_bg";
               }
               color: 255 255 255 255;
               image.normal: "button_close.png";
	    }
	 }
	/*
	 * ACTIONS TOGGLE PART
	 */
	 part { name: "actions_toggle_bg";
	    mouse_events: 0;
	    scale: 1;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.4 0.05;
		  to: "background";
	       }
	       rel2 {
		  relative: 0.5 0.15;
		  to: "background";
	       }
	       align: 0.0 0.5;
	       min: 16 16;
	       max: 16 16;
	       aspect: 1.0 1.0;
	       aspect_preference: VERTICAL;
               image.normal: "button_up.png";
               fill.smooth : 0;
	    }
	    description { state: "toggled" 0.0;
	       inherit: "default" 0.0;
               image.normal: "button_toggled.png";
            }
	 }
         part { name: "actions_toggle_events";
	    type: RECT;
            ignore_flags: ON_HOLD;
	    description { state: "default" 0.0;
	       rel1.to: "actions_toggle_bg";
	       rel2.to: "actions_toggle_bg";
	       color: 0 0 0 0;
	    }
	 }
	/*
	 * ENTRY AREA
	 */
	 part { name: "main_area";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.05 0.15;
	       }
	       rel2 {
		  relative: 0.95 0.95;
	       }
	    }
	 }
      }
      programs {
	/*
	 * STICK TOGGLE PART
	 */
	 program { name: "stick_toggle_click";
	    signal: "mouse,up,1";
	    source: "stick_toggle_events";
            action: SIGNAL_EMIT "estickies,stick_toggle,toggle" "";
	 }
	 program { name: "stick_toggle_check_on";
	    signal: "estickies,stick_toggle,on";
	    source: "estickies";
	    action:  STATE_SET "toggled" 0.0;
	    target: "stick_toggle_bg";
	 }
	 program { name: "stick_toggle_check_off";
	    signal: "estickies,stick_toggle,off";
	    source: "estickies";
	    action:  STATE_SET "default" 0.0;
	    target: "stick_toggle_bg";
	 }
	/*
	 * LOCK TOGGLE PART
	 */
	 program { name: "lock_toggle_click";
	    signal: "mouse,up,1";
	    source: "lock_toggle_events";
            action: SIGNAL_EMIT "estickies,lock_toggle,toggle" "";
	 }
	 program { name: "lock_toggle_check_on";
	    signal: "estickies,lock_toggle,on";
	    source: "estickies";
	    action:  STATE_SET "toggled" 0.0;
	    target: "lock_toggle_bg";
	 }
	 program { name: "lock_toggle_check_off";
	    signal: "estickies,lock_toggle,off";
	    source: "estickies";
	    action:  STATE_SET "default" 0.0;
	    target: "lock_toggle_bg";
	 }
	/*
	 * CLOSE BUTTON PART
	 */
	 program {
	    name:   "close_button_click";
	    signal: "mouse,down,1";
	    source: "close_button_bg";
	    action: STATE_SET "toggled" 0.0;
	    target: "close_button_bg";
	 }
	 program {
	    name:   "close_button_unclick";
	    signal: "mouse,up,1";
	    source: "close_button_bg";
	    action: STATE_SET "default" 0.0;
	    target: "close_button_bg";
	 }
	 program {
	    name:   "close_button_unclick2";
	    signal: "mouse,up,1";
	    source: "close_button_bg";
	    action: SIGNAL_EMIT "estickies,close_button,click" "";
	 }
	/*
	 * ACTIONS TOGGLE PART
	 */
	 program { name: "actions_toggle_click";
	    signal: "mouse,up,1";
	    source: "actions_toggle_events";
            action: SIGNAL_EMIT "estickies,actions_toggle,toggle" "";
	 }
	 program { name: "actions_toggle_check_on";
	    signal: "estickies,actions_toggle,on";
	    source: "estickies";
	    action:  STATE_SET "toggled" 0.0;
	    target: "actions_toggle_bg";
	 }
	 program { name: "actions_toggle_check_off";
	    signal: "estickies,actions_toggle,off";
	    source: "estickies";
	    action:  STATE_SET "default" 0.0;
	    target: "actions_toggle_bg";
	 }
      }
   }

   group {
      name: "preview";
      parts {
	 part {
	    name: "image";
	    mouse_events: 1;
	    description {
	       state: "default" 0.0;
	       max: 208 206;
	       rel1 {
		  relative: 0 0;
		  offset: 0 0;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -1 -1;
	       }
	       image {
		  normal: "preview.png";
	       }
	    }
	 }
      }
   }

   group { name: "elm/scroller/base/sticky";
      script {
	 public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
	 public timer0(val) {
	    new v;
	    v = get_int(sbvis_v);
	    if (v) {
               v = get_int(sbalways_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
	    }
	    v = get_int(sbvis_h);
	    if (v) {
               v = get_int(sbalways_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
	    }
	    set_int(sbvis_timer, 0);
	    return 0;
	 }
      }
      parts {
         part { name: "bg";
	    type: RECT;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	       color: 0 0 0 0;
	    }
	 }
	 part { name: "clipper";
	    type: RECT;
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       rel1.to: "bg";
	       rel2.to: "bg";
	    }
	 }
	 part { name: "elm.swallow.content";
	    clip_to: "clipper";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1.offset: 1 1;
	       rel2.offset: -2 -2;
	    }
	 }
      }
      programs {
	 program { name: "load";
	    signal: "load";
	    source: "";
	    script {
	       set_int(sbvis_h, 0);
	       set_int(sbvis_v, 0);
	       set_int(sbalways_v, 0);
	       set_int(sbalways_h, 0);
	       set_int(sbvis_timer, 0);
	    }
	 }

	 program { name: "scroll";
	    signal: "elm,action,scroll";
	    source: "elm";
	    script {
	       new v;
	       v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
	       if (!v) {
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
	       }
	       v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
	       if (!v) {
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
	       }
	       v = get_int(sbvis_timer);
	       if (v > 0) cancel_timer(v);
	       v = timer(2.0, "timer0", 0);
	       set_int(sbvis_timer, v);
	    }
	 }
      }
   }  
}
