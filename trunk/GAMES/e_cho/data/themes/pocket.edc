#define SOUND "sound"
#define S_UP "pk_red.wav"
#define S_DOWN "pk_yel.wav"
#define S_LEFT "pk_gre.wav"
#define S_RIGHT "pk_blu.wav"
#define S_FAIL "pk_fail.wav"
#define S_WIN "win.wav"
#define S_NEXT_LV "next_lv.wav"

#define FONT "Sans";
#define FONT_BOLD "Sans:style=Bold";
#define FONT_COLOR  20 20 20 255;
#define FONT_COLOR3 0 0 0 32;

#define BT_PROG(_bt, _sound) \
   program { name: _bt"_pressed"; \
      signal: "mouse,down,1"; \
      source: _bt; \
      action: STATE_SET "hi" 0.0; \
      target: _bt; \
   } \
   program { name: _bt"_released"; \
      signal: "mouse,up,1"; \
      source: _bt; \
      action: STATE_SET "default" 0.0; \
      target: _bt; \
   } \
   program { name: _bt"_clicked"; \
      signal: "mouse,clicked,1"; \
      source: _bt; \
      action: SIGNAL_EMIT "gamebt,clicked" _bt; \
      after: _bt"_sound"; \
   } \
   program { name: _bt"_sound"; \
      action: SIGNAL_EMIT _sound SOUND; \
   } \
   program { name: _bt"_hi"; \
      signal: "hi"; \
      source: _bt; \
      action: STATE_SET "hi" 0.0; \
      target: _bt; \
      after: _bt"_hi_sound"; \
   } \
   program { name: _bt"_hi_sound"; \
      action: SIGNAL_EMIT _sound SOUND; \
      after: _bt"_default"; \
   } \
   program { name: _bt"_default"; \
      action: STATE_SET "default" 0.0; \
      in: 0.3 0.0; \
      target: _bt; \
   }

collections {
   externals {
      external: "elm";
   }
   images {
      image: "pk_plastic.png" COMP;
      image: "pk_panel.png" COMP;
      image: "elogo.png" COMP;
      image: "pk_red_off.png" COMP;
      image: "pk_red_on.png" COMP;
      image: "pk_blu_off.png" COMP;
      image: "pk_blu_on.png" COMP;
      image: "pk_gre_off.png" COMP;
      image: "pk_gre_on.png" COMP;
      image: "pk_yel_off.png" COMP;
      image: "pk_yel_on.png" COMP;
   }
   group { name: "win";
      parts {
         /* bg */
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 320 480;
               color: 30 30 30 255;
            }
         }
         part { name: "bg_plastic";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "pk_plastic.png";
               fill {
                  size {
                     relative: 0.0 0.0;
                     offset: 200 200;
                  }
               }
            }
         }
         /* centered square (invisible) */
         part { name: "square";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.offset: 5 5;
               rel2.relative: 1.0 0.7;
               rel2.offset: -6 -1;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
            }
         }
         part { name: "up";
            type: IMAGE;
            description { state: "default" 0.0;
               rel1.to: "square";
               rel2 {
                  to: "square";
                  relative: 0.5 0.5;
                  offset: -6 -6;
               }
               image.normal: "pk_red_off.png";
            }
            description { state: "hi" 0.0;
               inherit: "default" 0.0;
               image.normal: "pk_red_on.png";
            }
         }
         part { name: "right";
            type: IMAGE;
            description { state: "default" 0.0;
               rel1 {
                  to: "square";
                  relative: 0.5 0.0;
                  offset: 5 0;
               }
               rel2 {
                  to: "square";
                  relative: 1.0 0.5;
                  offset: -1 -6;
               }
               image.normal: "pk_blu_off.png";
            }
            description { state: "hi" 0.0;
               inherit: "default" 0.0;
               image.normal: "pk_blu_on.png";
            }
         }
         part { name: "down";
            type: IMAGE;
            description { state: "default" 0.0;
               rel1 {
                  to: "square";
                  relative: 0.5 0.5;
                  offset: 5 5;
               }
               rel2 {
                  to: "square";
                  relative: 1.0 1.0;
               }
               image.normal: "pk_yel_off.png";
            }
            description { state: "hi" 0.0;
               inherit: "default" 0.0;
               image.normal: "pk_yel_on.png";
            }
         }
         part { name: "left";
            type: IMAGE;
            description { state: "default" 0.0;
               rel1 {
                  to: "square";
                  relative: 0.0 0.5;
                  offset: 0 5;
               }
               rel2 {
                  to: "square";
                  relative: 0.5 1.0;
                  offset: -6 -1;
               }
               image.normal: "pk_gre_off.png";
            }
            description { state: "hi" 0.0;
               inherit: "default" 0.0;
               image.normal: "pk_gre_on.png";
            }
         }
         part { name: "logo";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "square";
                  relative: 0.3 0.3;
               }
               rel2 {
                  to: "square";
                  relative: 0.7 0.7;
               }
               color: 255 255 255 200;
               image.normal: "elogo.png";
            }
         }
         part { name: "score"; /* API */
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description { state: "default" 0.0;
               color3: 0 0 0 64;
               rel1.to: "square";
               rel2.to: "square";
               text {
                  text: "0";
                  font: "Sans,Edje-Vera";
                  size: 16;
                  align: 0.5 0.5;
               }
            }
         }
         /* bottom panel */
         part { name: "panel";
            type: IMAGE;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "square";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "square";
                  relative: 1.0 1.0;
               }
               align: 0.5 1.0;
               aspect: (410/235) (410/235);
               aspect_preference: BOTH;
               image.normal: "pk_panel.png";
            }
         }
         part { name: "label";
            type: TEXT;
            mouse_events: 1;
            effect: SOFT_SHADOW;
            description { state: "default" 0.0;
               color: FONT_COLOR;
               color3: FONT_COLOR3;
               rel1.to: "panel";
               rel2.to: "panel";
               text {
                  text: "Start Game";
                  font: FONT_BOLD;
                  size: 18;
                  align: 0.5 0.5;
               }
            }
            description { state: "playing" 0.0;
               inherit: "default" 0.0;
               color3: 0 0 0 0;
               text.text: "listen...";
            }
            description { state: "repeating" 0.0;
               inherit: "default" 0.0;
               color3: 0 0 0 0;
               text.text: "...and repeat";
            }
         }
         part { name: "hi-score-label";
            type: TEXT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: FONT_COLOR;
               rel1.to: "panel";
               rel2.to: "panel";
               rel2.relative: 0.6 1.0;
               text {
                  text: "Hi Score: ";
                  font: FONT_BOLD;
                  size: 12;
                  align: 1.0 0.8;
               }
            }
         }
         part { name: "hi-score"; /* API */
            type: TEXT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: FONT_COLOR;
               rel1.to: "panel";
               rel2.to: "panel";
               rel1.relative: 0.6 0.0;
               text {
                  text: "0";
                  font: FONT_BOLD;
                  size: 12;
                  align: 0.0 0.8;
               }
            }
         }
         part { name: "blocker";
            type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description { state: "blocked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         /* start button clicked */
         program { name: "start";
            signal: "mouse,down,1";
            source: "label";
            filter: "label" "default";
            action: SIGNAL_EMIT "clicked" "bt_start";
            after: "playing_label";
         }
         /* buttons programs */
         BT_PROG("up", S_UP)
         BT_PROG("down", S_DOWN)
         BT_PROG("left", S_LEFT)
         BT_PROG("right", S_RIGHT)

         /* SIGNAL: playing */
         program { name: "playing_block"; /* API */
            signal: "playing";
            action: STATE_SET "blocked" 0.0;
            target: "blocker";
            after: "playing_label";
         }
         program { name: "playing_label";
            action: STATE_SET "playing" 0.0;
            target: "label";
         }
         /* SIGNAL: repeating */
         program { name: "repeating_unblock"; /* API */
            signal: "repeating";
            action: STATE_SET "default" 0.0;
            target: "blocker";
            after: "repeating_label";
         }
         program { name: "repeating_label";
            action: STATE_SET "repeating" 0.0;
            target: "label";
         }
         /* SIGNAL: new_game */
         program { name: "new_game"; /* API */
            signal: "new_game";
            action: STATE_SET "blocked" 0.0;
            target: "blocker";
         }
         /* SIGNAL: fail */
         program { name: "fail_block"; /* API */
            signal: "fail";
            action: STATE_SET "blocked" 0.0;
            target: "blocker";
            after: "fail_sound";
         }
         program { name: "fail_sound";
            action: SIGNAL_EMIT S_FAIL SOUND;
            in: 0.0 0.0;  // was 0.3 0.0
            after: "fail_hi";
         }
         program { name: "fail_hi";
            action: STATE_SET "hi" 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "fail_unhi";
         }
         program { name: "fail_unhi";
            action: STATE_SET "default" 0.0;
            in: 0.6 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "fail_unblock";
         }
         program { name: "fail_unblock";
            action: STATE_SET "default" 0.0;
            target: "blocker";
            after: "fail_label";
         }
         program { name: "fail_label";
            action: STATE_SET "default" 0.0;
            target: "label";
         }
         /* SIGNAL: next level */
         program { name: "next_level_block"; /* API */
            signal: "next_level";
            action: STATE_SET "blocked" 0.0;
            target: "blocker";
            after: "next_level_sound";
         }
         program { name: "next_level_sound";
            action: SIGNAL_EMIT S_NEXT_LV SOUND;
            in: 0.3 0.0;
            after: "next_level_hi_up";
         }
         program { name: "next_level_hi_up";
            action: STATE_SET "hi" 0.0;
            target: "up";
            after: "next_level_unhi_up";
         }
         program { name: "next_level_unhi_up";
            action: STATE_SET "default" 0.0;
            in: 0.2 0.0;
            target: "up";
            after: "next_level_hi_right";
         }
         program { name: "next_level_hi_right";
            action: STATE_SET "hi" 0.0;
            target: "right";
            after: "next_level_unhi_right";
         }
         program { name: "next_level_unhi_right";
            action: STATE_SET "default" 0.0;
            in: 0.2 0.0;
            target: "right";
            after: "next_level_hi_down";
         }
         program { name: "next_level_hi_down";
            action: STATE_SET "hi" 0.0;
            target: "down";
            after: "next_level_unhi_down";
         }
         program { name: "next_level_unhi_down";
            action: STATE_SET "default" 0.0;
            in: 0.2 0.0;
            target: "down";
            after: "next_level_hi_left";
         }
         program { name: "next_level_hi_left";
            action: STATE_SET "hi" 0.0;
            target: "left";
            after: "next_level_unhi_left";
         }
         program { name: "next_level_unhi_left";
            action: STATE_SET "default" 0.0;
            in: 0.2 0.0;
            target: "left";
            after: "next_level_hi_up_again";
         }
         program { name: "next_level_hi_up_again";
            action: STATE_SET "hi" 0.0;
            target: "up";
            after: "next_level_unhi_up_again";
         }
         program { name: "next_level_unhi_up_again";
            action: STATE_SET "default" 0.0;
            in: 0.2 0.0;
            target: "up";
         }
         /* player_won */
         program { name: "win_block"; /* API */
            signal: "player_won";
            action: STATE_SET "blocked" 0.0;
            target: "blocker";
            after: "win_sound";
         }
         program { name: "win_sound";
            action: SIGNAL_EMIT S_WIN SOUND;
            in: 0.3 0.0;
            after: "win_hi";
         }
         program { name: "win_hi";
            action: STATE_SET "hi" 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_unhi";
         }
         program { name: "win_unhi";
            action: STATE_SET "default" 0.0;
            in: 0.3 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_hi2";
         }
         program { name: "win_hi2";
            action: STATE_SET "hi" 0.0;
            in: 0.1 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_unhi2";
         }
         program { name: "win_unhi2";
            action: STATE_SET "default" 0.0;
            in: 0.3 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_hi3";
         }
         program { name: "win_hi3";
            action: STATE_SET "hi" 0.0;
            in: 0.1 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_unhi3";
         }
         program { name: "win_unhi3";
            action: STATE_SET "default" 0.0;
            in: 1.0 0.0;
            target: "up";
            target: "left";
            target: "right";
            target: "down";
            after: "win_unblock";
         }
         program { name: "win_unblock";
            action: STATE_SET "default" 0.0;
            target: "blocker";
         }
      }
   }
}
