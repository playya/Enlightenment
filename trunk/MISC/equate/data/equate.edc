images {
    image, "bg.png" LOSSY 95;
    image, "shading.png" LOSSY 95;
    image, "brushed_texture.png" LOSSY 95;
    image, "metalsphere.png" LOSSY 95;
    image, "entry_disabled.png" LOSSY 95;
    image, "entry_light_overlay.png" LOSSY 95;
}
collections {
 group {
   name, "Main";
   min, 200 296;
   max, 200 296;
   parts {
     part {
       name, "bg";
       type, RECT;
       mouse_events, 0;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	 }
	 color, 255 255 255 255;
       }
     }
     part {
       name, "bg_image";
       type, IMAGE;
       mouse_events, 0;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "bg";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "bg";
	 }
	 image
	 {
	     normal, "bg.png";
	     border, 8 8 8 8;
	 }
	 /*
	 fill 
	 {
	     origin {
		 relative, 0.0 0.0;
		 offset, 0 0;
	     } size {
		 relative, 1.0 1.0;
		 offset, 0 0;
	     }
	 }
	 */
       }
     }
     part {
       name, "bg_brushed";
       type, IMAGE;
       mouse_events, 0;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "bg";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "bg";
	 }
	 image
	 {
	     normal, "brushed_texture.png";
	 }
	 fill 
	 {
	     origin {
		 relative, 0.0 0.0;
		 offset, 0 0;
	     } size {
		 relative, 0.0 0.0;
		 offset, 512 512;
	     }
	 }
       }
     }
     part {
       name, "bg_shading";
       type, IMAGE;
       mouse_events, 0;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "bg";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "bg";
	 }
	 image
	 {
	     normal, "shading.png";
	     border, 32 32 32 32;
	 }
       }
     }
     part {
       name, "answer_buf_clip";
       type, RECT;
       mouse_events, 0;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 5 5;
	 } rel2 {
	   relative, 1.0 0.0;
	   offset, -5 50;
	 }
	 color, 255 255 255 255;
       }
       description 
       {
         state, "hidden" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 5 5;
	 } rel2 {
	   relative, 1.0 0.0;
	   offset, -5 50;
	 }
	 color, 255 255 255 0;
       }
     }
     part {
       name, "answer_buf_rect";
       type, IMAGE;
       mouse_events, 0;
       clip_to, "answer_buf_clip";
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "answer_buf_clip";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "answer_buf_clip";
	 }
	 image
	 {
	     normal, "entry_disabled.png";
	     border, 8 8 8 8;
	 }
	 //color, 100 100 100 32;
       }
     }
     part {
       name, "answer_buf_outline";
       type, IMAGE;
       mouse_events, 0;
       clip_to, "answer_buf_clip";
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "answer_buf_clip";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "answer_buf_clip";
	 }
	 image
	 {
	     normal, "entry_light_overlay.png";
	     border, 10 10 10 10;
	 }
	 //color, 100 100 100 32;
       }
     }
     part {
       name, "EquateAnswer";
       type, TEXT;
       mouse_events, 0;
       effect, SOFT_SHADOW;
       clip_to, "answer_buf_clip";
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 5 2;
	   to, "answer_buf_clip";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, -5 -2;
	   to, "answer_buf_clip";
	 }
	 color, 0 0 0 255;
	 color3, 192 192 192 255;
	 text
	 {
	     text, "";
	     font, "Vera";
	     size, 20;
	     fit, 0 0;
	     align, 1.0 0.5;
	 }
       }
     }
     part { 
	 name, "clipped_clear";
	 type, RECT; 
	 mouse_events, 0; 
	 description { 
	     state, "default" 0.0; 
	     visible, 1; 
	     rel1 { 
		 relative, 0.0 1.0; 
		 offset, 0 0; 
		 to, "answer_buf_clip";
	     } rel2 { 
		 relative, 0.0 1.0; 
		 offset, 48 48; 
		 to, "answer_buf_clip";
	     } 
	     color, 255 255 255 255; 
	 }
	 description { 
	     state, "clicked" 0.0; 
	     visible, 1; 
	     rel1 { 
		 relative, 0.0 1.0; 
		 offset, 0 0; 
		 to, "answer_buf_clip";
	     } rel2 { 
		 relative, 0.0 1.0; 
		 offset, 48 48; 
		 to, "answer_buf_clip";
	     } 
	     color, 255 255 255 192; 
	 }
     }
     part {
       name, "clear_button_image";
       type, IMAGE;
       mouse_events, 1;
       clip_to, "clipped_clear";
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 1.0;
	   offset, 0 0;
	   to, "answer_buf_clip";
	 } rel2 {
	   relative, 0.0 1.0;
	   offset, 48 48;
	   to, "answer_buf_clip";
	 }
	 image
	 {
	     normal, "metalsphere.png";
	 }
       }
     }
     part {
       name, "clear_button_text";
       type, TEXT;
       mouse_events, 0;
       effect, SOFT_SHADOW;
       description 
       {
         state, "default" 0.0;
	 visible, 1;
	 rel1 {
	   relative, 0.0 0.0;
	   offset, 0 0;
	   to, "clear_button_image";
	 } rel2 {
	   relative, 1.0 1.0;
	   offset, 0 0;
	   to, "clear_button_image";
	 }
	 color, 255 255 255 255;
	 color3, 192 192 192 255;
	 text
	 {
	     text, "c";
	     font, "Vera";
	     size, 20;
	     fit, 0 0;
	     align, 0.5 0.5;
	 }
       }
     }
#define TEXT_ON(txtrel, txtpname, txtstr) \
     part { name, txtpname; type, TEXT; mouse_events, 0; \
	effect, SOFT_SHADOW; description { \
	state, "default" 0.0; visible, 1; \
	rel1 { relative, 0.0 0.0; offset, 0 0; to, txtrel; } \
	rel2 { relative, 1.0 1.0; offset, 0 0; to, txtrel; } \
	color, 255 255 255 255; color3, 192 192 192 255; \
	text { text, txtstr; font, "Vera"; size, 18; \
	fit, 0 0; align, 0.5 0.5; } } }

#define RIGHT_OF(rel, clipname, pname, ptxtname, txt, bw, bh) \
     part { name, clipname; type, RECT; mouse_events, 0; \
     description { state, "default" 0.0; visible, 1; \
	rel1 { relative, 1.0 0.0; offset, 0 0; to, rel; } \
	rel2 { relative, 1.0 0.0; offset, bw bh; to, rel; } \
	color, 255 255 255 255; } \
     description { state, "clicked" 0.0; visible, 1; \
	rel1 { relative, 1.0 0.0; offset, 0 0; to, rel; } \
	rel2 { relative, 1.0 0.0; offset, bw bh; to, rel; } \
	color, 255 255 255 192; } } \
     part { name, pname; type, IMAGE; mouse_events, 1; \
     clip_to, clipname ; \
     description { state, "default" 0.0; visible, 1; \
	rel1 { relative, 1.0 0.0; offset, 0 0; to, rel; } \
	rel2 { relative, 1.0 0.0; offset, bw bh; to, rel; } \
	image { normal, "metalsphere.png"; border, 20 20 20 26; } \
	} } \
     TEXT_ON(pname, ptxtname, txt)
#define SOUTH_OF(rel, clipname, pname, ptxtname, txt, bw, bh) \
     part { name, clipname; type, RECT; mouse_events, 0; \
     description { state, "default" 0.0; visible, 1; \
	rel1 { relative, 0.0 1.0; offset, 0 0; to, rel; } \
	rel2 { relative, 0.0 1.0; offset, bw bh; to, rel; } \
	color, 255 255 255 255; } \
     description { state, "clicked" 0.0; visible, 1; \
	rel1 { relative, 0.0 1.0; offset, 0 0; to, rel; } \
	rel2 { relative, 0.0 1.0; offset, bw bh; to, rel; } \
	color, 255 255 255 192; } } \
     part { name, pname; type, IMAGE; mouse_events, 1; \
     clip_to, clipname ; \
     description { state, "default" 0.0; visible, 1; \
	rel1 { relative, 0.0 1.0; offset, 0 0; to, rel; } \
	rel2 { relative, 0.0 1.0; offset, bw bh; to, rel; } \
	image { normal, "metalsphere.png"; border, 20 24 20 20; } \
	} } \
     TEXT_ON(pname, ptxtname, txt)

    RIGHT_OF("clear_button_image", "clipped_divide", "divide_button_image",
    "divide_button_text", "/", 48, 48)
    RIGHT_OF("divide_button_image", "clipped_times", "times_button_image",
    "times_button_text", "*", 48, 48);
    RIGHT_OF("times_button_image", "clipped_minus", "minus_button_image",
    "minus_button_text", "-", 48, 48);
    SOUTH_OF("clear_button_image", "clipped_seven", "seven_button_image",
    "seven_button_text", "7", 48, 48);
    RIGHT_OF("seven_button_image", "clipped_eight", "eight_button_image",
    "eight_button_text", "8", 48, 48);
    RIGHT_OF("eight_button_image", "clipped_nine", "nine_button_image",
    "nine_button_text", "9", 48, 48);
    RIGHT_OF("nine_button_image", "clipped_plus", "plus_button_image",
    "plus_button_text", "+", 48, 96);
    SOUTH_OF("seven_button_image", "clipped_four", "four_button_image",
    "four_button_text", "4", 48, 48);
    RIGHT_OF("four_button_image", "clipped_five", "five_button_image",
    "five_button_text", "5", 48, 48);
    RIGHT_OF("five_button_image", "clipped_six", "six_button_image",
    "six_button_text", "6", 48, 48);
    SOUTH_OF("four_button_image", "clipped_one", "one_button_image",
    "one_button_text", "1", 48, 48);
    RIGHT_OF("one_button_image", "clipped_two", "two_button_image",
    "two_button_text", "2", 48, 48);
    RIGHT_OF("two_button_image", "clipped_three", "three_button_image",
    "three_button_text", "3", 48, 48);
    SOUTH_OF("three_button_image", "clipped_decimal", "decimal_button_image",
    "decimal_button_text", ".", 48, 48);
    SOUTH_OF("one_button_image", "clipped_zero", "zero_button_image",
    "zero_button_text", "0", 96, 48);
    RIGHT_OF("three_button_image", "clipped_equals", "equals_button_image",
    "equals_button_text", "=", 48, 96);
   }
   programs {
#define BUTTON_CB(pname, bclip, bname, emits) \
       program { name, pname"-click"; signal, "mouse,clicked,1"; \
		 source, bname; action, SIGNAL_EMIT emits "";  } \
       program { name, pname"-out"; signal, "mouse,down,1"; source, bname; \
		 action, STATE_SET "clicked" 0.0; target, bclip; \
		 transition, LINEAR 0.1; } \
       program { name, pname"-in"; signal, "mouse,up,1"; source, bname; \
		 action, STATE_SET "default" 0.0; target, bclip; \
		 transition, DECELERATE 0.2; }
    BUTTON_CB("clear_clicked", "clipped_clear", \
	"clear_button_image", "OP_CLR")
    BUTTON_CB("divide_clicked", "clipped_divide", \
	"divide_button_image", "OP_DIV")
    BUTTON_CB("multiply_clicked", "clipped_times", \
	"times_button_image", "OP_MUT")
    BUTTON_CB("addition_clicked", "clipped_plus", \
	"plus_button_image", "OP_ADD")
    BUTTON_CB("subtraction_clicked", "clipped_minus", \
	"minus_button_image", "OP_SUB")
    BUTTON_CB("equals_clicked", "clipped_equals", \
	"equals_button_image", "OP_EQU")
    BUTTON_CB("decimal_clicked", "clipped_decimal", \
	"decimal_button_image", "OP_DEC")
    BUTTON_CB("zero_clicked", "clipped_zero", \
	"zero_button_image", "NUM_0")
    BUTTON_CB("one_clicked", "clipped_one", \
	"one_button_image", "NUM_1")
    BUTTON_CB("two_clicked", "clipped_two", \
	"two_button_image", "NUM_2")
    BUTTON_CB("three_clicked", "clipped_three", \
	"three_button_image", "NUM_3")
    BUTTON_CB("four_clicked", "clipped_four", \
	"four_button_image", "NUM_4")
    BUTTON_CB("five_clicked", "clipped_five", \
	"five_button_image", "NUM_5")
    BUTTON_CB("six_clicked", "clipped_six", \
	"six_button_image", "NUM_6")
    BUTTON_CB("seven_clicked", "clipped_seven", \
	"seven_button_image", "NUM_7")
    BUTTON_CB("eight_clicked", "clipped_eight", \
	"eight_button_image", "NUM_8")
    BUTTON_CB("nine_clicked", "clipped_nine", \
	"nine_button_image", "NUM_9")
   }
 }
}
