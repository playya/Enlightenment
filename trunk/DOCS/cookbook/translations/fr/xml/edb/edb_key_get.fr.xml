
<section>
<sectioninfo>
  <author>
    <firstname>dan</firstname>
    <surname>sinclair</surname>
    <email>zero@perplexity.org</email>
    <othername>'dj2'</othername>
  </author>
  <date>27 Juillet 2004</date>
</sectioninfo>

<title>Recette: Obtention de clé EDB</title>

<para>
L'API EDB rend facile la récupération de toutes les clé disponibles
dans une base de données. Ces clés peuvent ensuites être utilisées
pour déterminer le type d'un objet dans la base de données, ou
simplement récupérer un objet au besoin.
</para>

<para>
<example>
<title>Obtention de clé EDB</title>
<programlisting>
#include &lt;Edb.h&gt;

int main(int argc, char ** argv) {
    char ** keys;
    int num_keys, i;

    if (argc &lt; 2) 
        return 0;

    keys = e_db_dump_key_list(argv[1], &amp;num_keys);
    for(i = 0; i &lt; num_keys; i++) {
        printf("key: %s\n", keys[i]);
        free(keys[i]); 
    }
    free(keys);
    return 1;
}
</programlisting>
</example>
Récupérer les clés est fait trés simplement par l'appel de
<function>e_db_dump_key_list()</function>. Cet appel retournera
un tableau char ** de chaines de clés. Ces chaines, et le tableau lui même,
doivent être libérées par l'application. <function>e_db_dump_key_list()</function>
retournera aussi le nombre de clés dans la tableau dans le paramètre
<literal>num_keys</literal>.
</para>

<para>
Vous noterez que nous n'avons pas besoin d'ouvrir la base de données
pour l'appel <function>e_db_dump_key_list()</function>. Cette fonction
travaille sur le fichier lui même plutôt que sur un objet base de données.
</para>

<para>
<example>
<title>Compilation</title>
<screen>
zero@oberon [edb] -&gt; gcc -o edb edb_ex.c \
 `edb-config --cflags --libs`
</screen>
</example>
L'exécution du programme devrait produire un listing de toutes les
clés dans la base données. Ce listing peut être vérifié par l'emploi
d'un outil externe comme <command>edb_gtk_ed</command> pour lire la
base de données.
</para>

</section>


